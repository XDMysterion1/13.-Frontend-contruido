{"version":3,"sources":["service/apiUser.js","components/LoginApp.js","components/Register.js","AppTopbar.js","AppFooter.js","AppMenu.js","AppConfig.js","components/Dashboard.js","service/apiRole.js","components/Role.js","components/User.js","service/apiEmpresa.js","components/Empresa.js","components/Convocatoria.js","service/apiConvocatoria.js","components/PliegoEspecificacion.js","service/apiPliego.js","components/Aviso.js","App.js","ScrollToTop.js","index.js"],"names":["getUsers","axios","get","createUser","data","post","id","nombre","apellido","email","password","rol","then","response","console","log","catch","error","LoginApp","props","search","setSearch","useState","users","setUsers","history","useHistory","formik","useFormik","initialValues","validate","errors","length","test","onSubmit","Search","push","resetForm","res","map","u","toLowerCase","getFormErrorMessage","name","touched","isFormFieldValid","className","style","useEffect","fetchUsers","json","layoutColorMode","handleSubmit","src","shape","size","placeholder","value","values","onChange","handleChange","autoFocus","toggleMask","promptLabel","weakLabel","mediumLabel","strongLabel","type","icon","Register","toast","useRef","emailUpdate","setEmailUpdate","confirmPassword","esRepetido","idUser","uniqid","current","show","severity","summary","detail","life","undefined","find","i","ref","label","AppTopbar","login","setLogin","visibleRight","setVisibleRight","visibleLeft","setVisibleLeft","customIconsRight","Fragment","onClick","customIconsLeft","onToggleMenuClick","onMobileTopbarMenuClick","to","alt","classNames","mobileTopbarMenuActive","onMobileSubTopbarMenuClick","visible","fullScreen","onHide","icons","showCloseIcon","AppFooter","height","AppSubmenu","activeIndex","setActiveIndex","onMenuItemClick","event","item","index","disabled","preventDefault","command","originalEvent","renderLink","content","submenuIcon","items","badge","renderLinkContent","activeClassName","e","exact","target","href","url","active","styleClass","badgeStyleClass","root","key","CSSTransition","timeout","enter","exit","in","unmountOnExit","AppMenu","model","AppConfig","setActive","scale","setScale","scales","themeScheme","setThemeScheme","themeColor","setThemeColor","config","outsideClickListener","unbindOutsideClickListener","useCallback","document","removeEventListener","hideConfigurator","bindOutsideClickListener","isOutsideClicked","addEventListener","isSameNode","contains","documentElement","fontSize","configClassName","theme","themeElement","getElementById","replaceLink","linkElement","callback","isIE","setAttribute","getAttribute","cloneLinkElement","cloneNode","parentNode","insertBefore","nextSibling","remove","window","navigator","userAgent","changeThemeScheme","onColorModeChange","changeThemeColor","color","prevState","inputId","onLayoutModeChange","checked","layoutMode","htmlFor","width","borderRadius","Dashboard","getRoles","Role","emptyRole","roles","setRoles","roleDialog","setRoleDialog","deleteRoleDialog","setDeleteRoleDialog","role","setRole","selectedRoles","setSelectedRoles","submitted","setSubmitted","dt","stateRole","setStateRole","showMessage","setShowMessage","rolUpdate","setRolUpdate","esRepetidoUpdate","_roles","_role","trim","findIndexById","put","updateRolID","createRol","original","filter","fetchRoles","openNew","hideDialog","hideDeleteRoleDialog","deleteRoleDialogFooter","val","delete","headerGroup","header","left","headerColumnGroup","selection","onSelectionChange","dataKey","paginator","rows","rowsPerPageOptions","paginatorTemplate","currentPageReportTemplate","resizableColumns","columnResizeMode","showGridlines","field","sortable","body","rowData","setValues","editRole","confirmDeleteRole","modal","footer","User","emptyUser","setRol","userDialog","setUserDialog","deleteUserDialog","setDeleteUserDialog","user","setUser","selectedUsers","setSelectedUsers","stateUser","setStateUser","_users","_user","updateUserID","hideDeleteUserDialog","findRol","rolFind","el","deleteUserDialogFooter","r","editUser","confirmDeleteUser","options","optionLabel","required","Empresa","emptyEmpresa","nombreCorto","nombreLargo","tipoSociedad","direccion","informacion","empresas","setEmpresas","empresaDialog","setEmpresaDialog","deleteEmpresaDialog","setDeleteEmpresaDialog","empresa","setEmpresa","selectedEmpresas","setSelectedEmpresas","stateEmpresa","setStateEmpresa","_empresas","_empresa","updateEmpresaID","createEmpresa","fetchEmpresas","hideDeleteEmpresaDialog","deleteEmpresaDialogFooter","editEmpresa","confirmDeleteEmpresa","tipo","optionValue","tipoSociedadad","Convocatoria","emptyConvocatoria","titulo","codigo","semestre","link","convocatorias","setConvocatorias","convocatoriaDialog","setConvocatoriaDialog","deleteConvocatoriaDialog","setDeleteConvocatoriaDialog","convocatoria","setConvocatoria","selectedConvocatorias","setSelectedConvocatorias","stateConvocatoria","setStateConvocatoria","convocatoriaUpdate","setConvocatoriaUpdate","_convocatorias","_convocatoria","updateConvocatoriaID","createConvocatoria","fetchConvocatorias","hideDeleteConvocatoriaDialog","deleteConvocatoriaDialogFooter","editConvocatoria","confirmDeleteConvocatoria","PliegoEspecificacion","emptyPliego","pliegos","setPliegos","pliegoDialog","setPliegoDialog","deletePliegoDialog","setDeletePliegoDialog","pliego","setPliego","selectedPliegos","setSelectedPliegos","statePliego","setStatePliego","pliegoUpdate","setPliegoUpdate","_pliegos","_pliego","updatePliegoID","createPliego","fetchPliegos","hideDeletePliegoDialog","deletePliegoDialogFooter","editPliego","confirmDeletePliego","Aviso","App","setLayoutMode","setLayoutColorMode","inputStyle","setInputStyle","ripple","setRipple","staticMenuInactive","setStaticMenuInactive","overlayMenuActive","setOverlayMenuActive","mobileMenuActive","setMobileMenuActive","setMobileTopbarMenuActive","PrimeReact","menuClick","mobileTopbarMenuClick","addClass","removeClass","isDesktop","innerWidth","element","classList","add","replace","RegExp","split","join","wrapperClass","path","component","render","rippleEffect","onRippleEffect","onInputStyleChange","mode","withRouter","location","useLocation","scrollTo","children","ReactDOM"],"mappings":"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","file":"static/js/main.bcdcbdba.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\n export const getUsers = () =>{\r\n     return axios.get('https://magic-tech-backend.herokuapp.com/api/getUsers');\r\n }\r\n\r\n export const getUserID =(id) =>{\r\n     return axios.get(`https://magic-tech-backend.herokuapp.com/api/getUserId/${id}`);\r\n }\r\n\r\n\r\n\r\n export const createUser=(data)=>{\r\n    return axios.post('https://magic-tech-backend.herokuapp.com/api/createUser', \r\n      {\r\n         id:        `${data.id}`,\r\n         nombre:    `${data.nombre}`,\r\n         apellido:  `${data.apellido}`,\r\n         email:     `${data.email}`,\r\n         password:  `${data.password}`,\r\n         rol:       `${data.rol}`      //rol es un numero entero\r\n      }\r\n      )\r\n      .then(function (response) {\r\n        console.log(response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n }\r\n\r\nexport const updateUserID =(data,id) =>{\r\n    return axios.put(`https://magic-tech-backend.herokuapp.com/api/updateUser/${id}`, \r\n    {\r\n      nombre:    `${data.nombre}`,\r\n      apellido:  `${data.apellido}`,\r\n      email:     `${data.email}`,\r\n      password:  `${data.password}`,\r\n      rol:       `${data.rol}`      //rol es un numero entero\r\n    }\r\n    )\r\n    .then(function (response) {\r\n      console.log(response);\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error);\r\n    });\r\n}\r\n\r\nexport const deleteUserID =(id) =>{\r\n    return axios.delete(`https://magic-tech-backend.herokuapp.com/api/deleteUserId/${id}`);\r\n}\r\n\r\nexport async function login(data){\r\n\r\n  return await axios.post('https://magic-tech-backend.herokuapp.com/api/login', \r\n  {\r\n     email:     `${data.email}`,\r\n     password:  `${data.password}`\r\n  })\r\n}\r\n","import React,{useEffect,useState}   from 'react';\r\n\r\nimport { InputText }        from 'primereact/inputtext';\r\nimport { Password }         from 'primereact/password';\r\nimport { Button }           from 'primereact/button';\r\n\r\nimport { useFormik }        from \"formik\";\r\nimport { useHistory }       from 'react-router-dom';\r\n\r\nimport { login,getUsers }         from '../service/apiUser';\r\n\r\nexport const LoginApp = (props) =>{\r\n\r\n    const [search,setSearch] = useState(null);\r\n    const [users, setUsers]  = useState(null);\r\n    const history            = useHistory();\r\n\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email:     \"\",\r\n            password:  \"\"\r\n        },\r\n        validate: (data) => {\r\n            let errors = {};\r\n\r\n            if (!data.email) {\r\n                errors.email = \"Se requiero el correo electronico\";\r\n            } else if (data.email.length > 255) {\r\n                errors.email = \"Como maximo 255 caracteres\";\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(data.email)) {\r\n                errors.email = 'Dirección de correo electrónico inválida. P.ej. ejemplo@email.com';\r\n            }\r\n\r\n            if (!data.password) {\r\n                errors.password = \"Se requiero el contraseña\";\r\n            } else if (data.password.length < 6) {\r\n                errors.password = \"Como minimo 6 caracteres\";\r\n            } else if (data.password.length > 255) {\r\n                errors.password = \"Como maximo 255 caracteres\";\r\n            }\r\n\r\n            return errors;\r\n        },\r\n        onSubmit: (data) => {\r\n            if(Search(data)){\r\n                history.push('/');\r\n            }else{\r\n                formik.resetForm();  \r\n            }\r\n        },\r\n      });\r\n\r\n    const Search=(data)=>{\r\n        let res;\r\n        if (users?.length) {\r\n            users.map((u) => {\r\n               if (u.email.toLowerCase() === data.email.toLowerCase() && u.password === data.password) {\r\n                    res = true;\r\n               }else{\r\n                    res = false;\r\n                }\r\n            })\r\n        }  \r\n        return res;  \r\n    }\r\n\r\n\r\n    const  fetchSearch = (data) =>{\r\n        login( {\r\n                email:     `${data.email}`,\r\n                password:  `${data.password}`\r\n        })\r\n        .then(json =>{\r\n            if(json.error){\r\n                console.log(\"Error\");\r\n            }else{\r\n                setSearch(json.data);\r\n                console.log('-----------------data search-----------');\r\n                console.log(search);\r\n                console.log('-----------------1 search-----------');\r\n                console.log(search.id);\r\n                console.log(search.nombre);\r\n                console.log(search.apellido);\r\n                console.log(search.email);\r\n                console.log(search.password);\r\n                console.log(search.rol);\r\n            }\r\n        })\r\n    } \r\n\r\n    const isFormFieldValid = (name) => !!(formik.touched[name] && formik.errors[name]);\r\n    const getFormErrorMessage = (name) => {\r\n        return isFormFieldValid(name) && <small className=\"ml-3 p-error\" style={{'color': '#ff0000'}}>{formik.errors[name]}</small>;\r\n    };\r\n\r\n    useEffect(()=>{\r\n        fetchUsers();\r\n    },[])\r\n\r\n    const fetchUsers = () =>{\r\n        getUsers().then(json =>{\r\n            if(json.error){\r\n                console.log(\"Error\");\r\n            }else{\r\n                console.log(\"---------Users insertados-----------\");\r\n                setUsers(json.data);\r\n            }\r\n        })\r\n    }\r\n\r\n    return(\r\n        <div className=\"grid justify-content-evenly\">\r\n            <div className=\"lg:col-3\"></div>\r\n            <div className=\" lg:col-3 md:col-3\">\r\n                <div className=\"card p-fluid\" style={props.layoutColorMode === 'light' ?{ 'border': 'black 2px outset' }:{ 'border': 'white 2px outset' }}>\r\n                    <form onSubmit={formik.handleSubmit}>\r\n                        <div className='grid flex justify-content-center'>\r\n                            <div className=\"flex align-items-center justify-content-center  m-2\">\r\n                                <h2 className=\"p-text-center p-p-1\">Iniciar sesión</h2>        \r\n                            </div>\r\n                        </div>\r\n                        <div className='grid flex justify-content-center'>\r\n                            <div className=\"flex align-items-center justify-content-center  m-2\">\r\n                                <img src={props.layoutColorMode === 'light' ? 'assets/layout/images/avatar.png' : 'assets/layout/images/avatar-dark.png'} className=\"p-avatar-xl\"  shape=\"circle\"  size=\"xlarge\" style={{'height': '8em','width':'8em',}}/>               \r\n                            </div>\r\n                        </div>\r\n                        <div className='grid flex justify-content-center'>\r\n                            <div className=\"flex align-items-center justify-content-center\">\r\n                                <div className=\"p-field mt-1 lg:col-11\">\r\n                                    <div className=\"p-inputgroup\">\r\n                                            <span className=\"p-inputgroup-addon\">\r\n                                                <img   src={props.layoutColorMode === 'light' ? 'assets/layout/images/gmail.png' : 'assets/layout/images/gmail-dark.png'} style={{'height': '1.2em','width':'1.2em',}}/>   \r\n                                            </span>\r\n                                            <InputText id=\"email\" name='email' placeholder=\"Correo electronico\" value={formik.values.email} onChange={formik.handleChange} autoFocus/>\r\n                                    </div>       \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {getFormErrorMessage('email')}\r\n                        \r\n                        <div className='grid flex justify-content-center'>\r\n                            <div className=\"flex align-items-center justify-content-center\">\r\n                                <div className=\"p-field mt-1 lg:col-10\">\r\n                                    <div className=\"p-inputgroup\">\r\n                                            <span className=\"p-inputgroup-addon\">\r\n                                                <img   src={props.layoutColorMode === 'light' ? 'assets/layout/images/password.png' : 'assets/layout/images/password-dark.png'} style={{'height': '1.2em','width':'1.2em',}}/>      \r\n                                            </span>\r\n                                            <Password id=\"password\" name='password' placeholder=\"Contraseña\" value={formik.values.password} onChange={formik.handleChange} toggleMask  promptLabel=\"Por favor ingrese una contraseña\" weakLabel=\"Débil\" mediumLabel=\"Medio\" strongLabel=\"Fuerte\"/>\r\n                                    </div>       \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {getFormErrorMessage('password')}\r\n                        \r\n                        <div className='grid flex justify-content-center'>\r\n                            <div className=\"flex align-items-center justify-content-center  m-2\">\r\n                                <Button type=\"submit\" id=\"buttonSubmit\" icon=\"pi pi-arrow-right\"  className=\"p-button-raised mt-4 p-button-lg\"  style={{'fontSize': '1.5em', 'background-color':'#d13639', 'color':'#ffffff', 'border':'1px solid hsl(0deg 0% 100% / 12%)'}}/>\r\n                            </div>\r\n                        </div>          \r\n                    </form>\r\n                </div>\r\n            </div>\r\n            <div className=\"lg:col-3\"></div>\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\n","import React,{useEffect,useState,useRef}   from 'react';\r\n\r\nimport { Avatar }           from 'primereact/avatar';\r\nimport { InputText }        from 'primereact/inputtext';\r\nimport { Password }         from 'primereact/password';\r\nimport { Button }           from 'primereact/button';\r\nimport { Toast }            from 'primereact/toast';\r\n\r\nimport { useFormik }        from \"formik\";\r\nimport uniqid               from 'uniqid';\r\n\r\nimport { createUser,getUsers} from '../service/apiUser';\r\n\r\nexport const Register = (props) =>{\r\n\r\n    const toast                           = useRef(null);\r\n    const [users, setUsers]               = useState(null);\r\n    const [emailUpdate, setEmailUpdate]   = useState(\"\");\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            nombre:    \"\",\r\n            apellido:  \"\",\r\n            email:     \"\",\r\n            password:  \"\",\r\n            confirmPassword : \"\"\r\n        },\r\n        validate: (data) => {\r\n            let errors = {};\r\n\r\n            if (!data.nombre) {\r\n                errors.nombre = \"Se requiero el nombre\";\r\n            } else if (data.nombre.length < 2) {\r\n                errors.nombre = \"Como minimo 2 caracteres\";\r\n            } else if (data.nombre.length > 30) {\r\n                errors.nombre = \"Como maximo 30 caracteres\";\r\n            } else if (!/^^[a-zA-Z\\s]+$/i.test(data.nombre)) {\r\n                errors.nombre = \"No se permiten numero o caracteres especiales\";\r\n            }\r\n\r\n            if (!data.apellido) {\r\n                errors.apellido = \"Se requiero el apellido\";\r\n            } else if (data.apellido.length < 2) {\r\n                errors.apellido = \"Como minimo 2 caracteres\";\r\n            } else if (data.apellido.length > 30) {\r\n                errors.apellido = \"Como maximo 30 caracteres\";\r\n            }else if (!/^^[a-zA-Z\\s]+$/i.test(data.apellido)) {\r\n                errors.apellido = \"No se permiten numero o caracteres especiales\";\r\n            }\r\n\r\n            if (!data.email) {\r\n                errors.email = \"Se requiero el correo electronico\";\r\n            } else if (data.email.length > 255) {\r\n                errors.email = \"Como maximo 255 caracteres\";\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(data.email)) {\r\n                errors.email = 'Dirección de correo electrónico inválida. P.ej. ejemplo@email.com';\r\n            }else if(!esRepetido(data.email)){\r\n                errors.email = \"Ya existe el correo electronico\";\r\n            }\r\n\r\n            if (!data.password) {\r\n                errors.password = \"Se requiero el contraseña\";\r\n            } else if (data.password.length < 6) {\r\n                errors.password = \"Como minimo 6 caracteres\";\r\n            } else if (data.password.length > 255) {\r\n                errors.password = \"Como maximo 255 caracteres\";\r\n            }\r\n\r\n            if (!data.confirmPassword) {\r\n                errors.confirmPassword = \"Se requiero la confirmacion de la contraseña\";\r\n            }else if (data.confirmPassword != data.password) {\r\n                errors.confirmPassword = \"Las contraseñas deben coincidir\";\r\n            } \r\n\r\n            return errors;\r\n        },\r\n\r\n        onSubmit: (data) => {\r\n            let idUser = uniqid(\"user-\");\r\n            let rolUser= \"rol-kvjva7f6\"; \r\n            createUser({id:`${idUser}`,nombre:`${data.nombre}`,apellido:`${data.apellido}`,email:`${data.email}`,password:`${data.password}`,rol:`${rolUser}`});\r\n            toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Registrado Exitosamente', life: 3000 });\r\n            formik.resetForm();    \r\n        },\r\n      });\r\n\r\n\r\n    const isFormFieldValid = (name) => !!(formik.touched[name] && formik.errors[name]);\r\n    const getFormErrorMessage = (name) => {\r\n        return isFormFieldValid(name) && <small className=\"ml-2 p-error\" style={{'color': '#ff0000'}}>{formik.errors[name]}</small>;\r\n    };\r\n\r\n\r\n    const esRepetido =(value)=>{\r\n        var _users = [...users];\r\n        let res = _users.find(i => (i.email).toLowerCase() === (value).toLowerCase() );\r\n         if(res === undefined){\r\n             return true;\r\n         }else{\r\n             return false;\r\n         }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        fetchUsers();\r\n    },[])\r\n\r\n    const fetchUsers = () =>{\r\n        getUsers().then(json =>{\r\n            if(json.error){\r\n                console.log(\"Error\");\r\n            }else{\r\n                console.log(\"---------Users insertados-----------\");\r\n                setUsers(json.data);\r\n            }\r\n        })\r\n    }\r\n\r\n    return(\r\n        <div className=\"grid justify-content-evenly\">\r\n            <Toast ref={toast} />\r\n            <div className=\"lg:col-3\"></div>\r\n            <div className=\" lg:col-3 md:col-3\">\r\n                <div className=\"card p-fluid\" style={props.layoutColorMode === 'light' ?{ 'border': 'black 2px outset' }:{ 'border': 'white 2px outset' }}>\r\n                    <form onSubmit={formik.handleSubmit}>\r\n                        <div className='grid flex justify-content-center'>\r\n                            <div className=\"flex align-items-center justify-content-center  \">\r\n                                <h2 className=\"p-text-center p-p-1\">Registrarse</h2>        \r\n                            </div>\r\n                        </div>\r\n                        <div className='grid flex justify-content-center'>\r\n                            <div className=\"flex align-items-center justify-content-center  \">\r\n                                <div className=\"p-field mt-2 lg:col-12\">\r\n                                    <div className=\"p-inputgroup\">\r\n                                            <span className=\"p-inputgroup-addon\">\r\n                                                <i className=\"pi pi-user\"></i>\r\n                                            </span>\r\n                                            <InputText id=\"nombre\" name='nombre' placeholder=\"Nombre\" value={formik.values.nombre} onChange={formik.handleChange} autoFocus/>\r\n                                    </div>       \r\n                                </div>\r\n                            </div>   \r\n                        </div>\r\n                        {getFormErrorMessage('nombre')}\r\n                        \r\n                        <div className='grid flex justify-content-center'>\r\n                            <div className=\"flex align-items-center justify-content-center  \">\r\n                                <div className=\"p-field mt-1 lg:col-12\">\r\n                                    <div className=\"p-inputgroup\">\r\n                                            <span className=\"p-inputgroup-addon\">\r\n                                                <i className=\"pi pi-user\"></i>\r\n                                            </span>\r\n                                            <InputText id=\"apellido\" name='apellido' placeholder=\"Apellido\" value={formik.values.apellido} onChange={formik.handleChange}/>\r\n                                    </div>       \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {getFormErrorMessage('apellido')}\r\n                        \r\n                        <div className='grid flex justify-content-center'>\r\n                            <div className=\"flex align-items-center justify-content-center  \">\r\n                                <div className=\"p-field mt-1 lg:col-12\">\r\n                                    <div className=\"p-inputgroup\">\r\n                                            <span className=\"p-inputgroup-addon\">\r\n                                                <img   src={props.layoutColorMode === 'light' ? 'assets/layout/images/gmail.png' : 'assets/layout/images/gmail-dark.png'} style={{'height': '1.2em','width':'1.2em',}}/>   \r\n                                            </span>\r\n                                            <InputText id=\"email\" name='email' placeholder=\"Correo electronico\" value={formik.values.email} onChange={formik.handleChange}/>\r\n                                    </div>       \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {getFormErrorMessage('email')}\r\n\r\n                        <div className='grid flex justify-content-center'>\r\n                            <div className=\"flex align-items-center justify-content-center  \">\r\n                                <div className=\"p-field mt-1 lg:col-11\">\r\n                                    <div className=\"p-inputgroup\">\r\n                                            <span className=\"p-inputgroup-addon\">\r\n                                                <img   src={props.layoutColorMode === 'light' ? 'assets/layout/images/password.png' : 'assets/layout/images/password-dark.png'} style={{'height': '1.2em','width':'1.2em',}}/>   \r\n                                            </span>\r\n                                            <Password id=\"password\" name='password' placeholder=\"Contraseña\" value={formik.values.password} onChange={formik.handleChange} toggleMask  promptLabel=\"Por favor ingrese una contraseña\" weakLabel=\"Débil\" mediumLabel=\"Medio\" strongLabel=\"Fuerte\"/>\r\n                                    </div>       \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {getFormErrorMessage('password')}\r\n\r\n                        <div className='grid flex justify-content-center'>\r\n                            <div className=\"flex align-items-center justify-content-center  \">\r\n                                <div className=\"p-field mt-1 lg:col-11\">\r\n                                    <div className=\"p-inputgroup\">\r\n                                            <span className=\"p-inputgroup-addon\">\r\n                                                <img   src={props.layoutColorMode === 'light' ? 'assets/layout/images/password.png' : 'assets/layout/images/password-dark.png'} style={{'height': '1.2em','width':'1.2em',}}/>   \r\n                                            </span>\r\n                                            <Password id=\"confirmPassword\" name='confirmPassword' placeholder=\"Repite la contraseña\" value={formik.values.confirmPassword} onChange={formik.handleChange} toggleMask  promptLabel=\"Por favor ingrese una contraseña\" weakLabel=\"Débil\" mediumLabel=\"Medio\" strongLabel=\"Fuerte\"/>\r\n                                    </div>       \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {getFormErrorMessage('confirmPassword')}\r\n                       \r\n                        <div className='grid flex justify-content-center'>\r\n                            <div className=\"flex align-items-center justify-content-center  \">\r\n                                <div className=\"p-field mt-3 lg:col-11\">\r\n                                    <Button label=\"Registrar\"  icon=\"pi pi-check\" type=\"submit\" className=\"p-button-text\"  style={{'background': '#13af4e','color':'#ffffff'}}/>  \r\n                                </div>\r\n                            </div>\r\n                        </div>      \r\n                    </form>\r\n                </div>\r\n            </div>\r\n            <div className=\"lg:col-3\"></div>\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { Link }          from 'react-router-dom';\r\nimport classNames        from 'classnames';\r\nimport { Button }        from 'primereact/button';\r\nimport { useHistory }    from 'react-router-dom';\r\nimport { Sidebar }       from 'primereact/sidebar';\r\nimport {LoginApp}        from './components/LoginApp';\r\nimport {Register}        from './components/Register';\r\n\r\n\r\nexport const AppTopbar = (props) => {\r\n    const [login, setLogin]    = useState(false);\r\n    const history              = useHistory();\r\n    const [visibleRight, setVisibleRight] = useState(false);\r\n    const [visibleLeft , setVisibleLeft]  = useState(false);\r\n    \r\n\r\n\r\n    const customIconsRight = (\r\n        <React.Fragment>\r\n            <button className=\"p-sidebar-icon p-link p-mr-1\"  onClick={() => setVisibleRight(false)} style={{'background': '#d13639','color':'#ffffff'}}>\r\n                <span className=\"pi pi-times\" />\r\n            </button>\r\n        </React.Fragment>\r\n    );\r\n\r\n    const customIconsLeft = (\r\n        <React.Fragment>\r\n            <button className=\"p-sidebar-icon p-link p-mr-1\"  onClick={() => setVisibleLeft(false)} style={{'background': '#d13639','color':'#ffffff'}}>\r\n                <span className=\"pi pi-times\" />\r\n            </button>\r\n        </React.Fragment>\r\n    );\r\n    const handleLogin = () =>{\r\n        history.push('/LoginApp');\r\n    };\r\n\r\n    return (\r\n        <div className=\"layout-topbar\">\r\n\r\n            <button type=\"button\" className=\"p-link  layout-menu-button layout-topbar-button\" onClick={props.onToggleMenuClick}>\r\n                <i className=\"pi pi-bars\"/>\r\n            </button>\r\n        \r\n\r\n            <button type=\"button\" className=\"p-link layout-topbar-menu-button layout-topbar-button\" onClick={props.onMobileTopbarMenuClick}>\r\n                <i className=\"pi pi-ellipsis-v\" />\r\n            </button>\r\n\r\n            <Link to=\"/\" className=\"layout-topbar-logo ml-6 \">\r\n                <img src={props.layoutColorMode === 'light' ? 'assets/layout/images/MagicTech.png' : 'assets/layout/images/MagicTech.png'} alt=\"logo\" style={{'height': '1.8em','width':'2.0em',}}/>\r\n                <span>MAGIC TECH</span>\r\n            </Link>\r\n                {(login)? \r\n                 ( \r\n                    <ul className={classNames(\"layout-topbar-menu lg:flex origin-top\", {'layout-topbar-menu-mobile-active': props.mobileTopbarMenuActive })}>\r\n                        <li>\r\n                            <button className=\"p-link layout-topbar-button\" onClick={props.onMobileSubTopbarMenuClick}>\r\n                                <i className=\"pi pi-calendar\"/>\r\n                                <span>Events</span>\r\n                            </button>\r\n                        </li>\r\n                        <li>\r\n                            <button className=\"p-link layout-topbar-button\" onClick={props.onMobileSubTopbarMenuClick}>\r\n                                <i className=\"pi pi-cog\"/>\r\n                                <span>Settings</span>\r\n                            </button>\r\n                        </li>\r\n                        <li>\r\n                            <button className=\"p-link layout-topbar-button\" onClick={props.onMobileSubTopbarMenuClick}>\r\n                                <i className=\"pi pi-user\"/>\r\n                                <span>Profile</span>\r\n                            </button>\r\n                        </li>\r\n                    </ul>\r\n                )\r\n                :\r\n                (\r\n                    <ul className={classNames(\"layout-topbar-menu lg:flex origin-top\", {'layout-topbar-menu-mobile-active': props.mobileTopbarMenuActive })}>\r\n                        <li>\r\n                            <button className=\"p-link layout-topbar-button\"  onClick={() => setVisibleLeft(true)}>\r\n                                <i className=\"pi pi-user-plus\"/>\r\n                                <span>Registrarse</span>\r\n                            </button>\r\n                        </li>\r\n                        <li>\r\n                            <button className=\"p-link layout-topbar-button\"  onClick={() => setVisibleRight(true)}>\r\n                                <i className=\"pi pi-user\"/>\r\n                                <span>Iniciar Sesion</span>\r\n                            </button>\r\n                        </li>\r\n                    </ul>\r\n                ) \r\n                }\r\n                {         \r\n                    <Sidebar visible={visibleRight} fullScreen onHide={() => setVisibleRight(false)} icons={customIconsRight} showCloseIcon={false}>\r\n                        <LoginApp {...props}/>\r\n                    </Sidebar>\r\n                }\r\n                {\r\n                    <Sidebar visible={visibleLeft} fullScreen  onHide={() => setVisibleLeft(false)} icons={customIconsLeft} showCloseIcon={false}>\r\n                        <Register {...props}/>\r\n                    </Sidebar>\r\n                }\r\n\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\n\r\nexport const AppFooter = (props) => {\r\n\r\n    return (\r\n        <div className=\"layout-footer\">\r\n            <img src={props.layoutColorMode === 'light' ? 'assets/layout/images/MagicTech.png' : 'assets/layout/images/MagicTech.png'} alt=\"Logo\" height=\"20\" className=\"mr-2\" style={{'height': '2.7em','width':'3em',}}/>\r\n            por\r\n            <span className=\"font-medium ml-2\">MAGIC TECH</span>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport classNames from 'classnames';\r\nimport {Ripple} from \"primereact/ripple\";\r\n\r\nconst AppSubmenu = (props) => {\r\n\r\n    const [activeIndex, setActiveIndex] = useState(null)\r\n\r\n    const onMenuItemClick = (event, item, index) => {\r\n        //avoid processing disabled items\r\n        if (item.disabled) {\r\n            event.preventDefault();\r\n            return true;\r\n        }\r\n\r\n        //execute command\r\n        if (item.command) {\r\n            item.command({ originalEvent: event, item: item });\r\n        }\r\n\r\n        if (index === activeIndex)\r\n            setActiveIndex(null);\r\n        else\r\n            setActiveIndex(index);\r\n\r\n        if (props.onMenuItemClick) {\r\n            props.onMenuItemClick({\r\n                originalEvent: event,\r\n                item: item\r\n            });\r\n        }\r\n    }\r\n\r\n    const renderLinkContent = (item) => {\r\n        let submenuIcon = item.items && <i className=\"pi pi-fw pi-angle-down menuitem-toggle-icon\"></i>;\r\n        let badge = item.badge && <span className=\"menuitem-badge\">{item.badge}</span>;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <i className={item.icon}></i>\r\n                <span>{item.label}</span>\r\n                {submenuIcon}\r\n                {badge}\r\n                <Ripple/>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    const renderLink = (item, i) => {\r\n        let content = renderLinkContent(item);\r\n\r\n        if (item.to) {\r\n            return (\r\n                <NavLink className=\"p-ripple\" activeClassName=\"router-link-active router-link-exact-active\" to={item.to} onClick={(e) => onMenuItemClick(e, item, i)} exact target={item.target}>\r\n                    {content}\r\n                </NavLink>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <a href={item.url} className=\"p-ripple\" onClick={(e) => onMenuItemClick(e, item, i)} target={item.target}>\r\n                    {content}\r\n                </a>\r\n            );\r\n        }\r\n    }\r\n\r\n    let items = props.items && props.items.map((item, i) => {\r\n        let active = activeIndex === i;\r\n        let styleClass = classNames(item.badgeStyleClass, {'layout-menuitem-category': props.root, 'active-menuitem': active && !item.to });\r\n\r\n        if(props.root) {\r\n            return (\r\n                <li className={styleClass} key={i}>\r\n                    {props.root === true && <React.Fragment>\r\n                        <div className=\"layout-menuitem-root-text\">{item.label}</div>\r\n                        <AppSubmenu items={item.items} onMenuItemClick={props.onMenuItemClick} />\r\n                    </React.Fragment>}\r\n                </li>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <li className={styleClass} key={i}>\r\n                    {renderLink(item, i)}\r\n                    <CSSTransition classNames=\"layout-submenu-wrapper\" timeout={{ enter: 1000, exit: 450 }} in={active} unmountOnExit>\r\n                        <AppSubmenu items={item.items} onMenuItemClick={props.onMenuItemClick} />\r\n                    </CSSTransition>\r\n                </li>\r\n            );\r\n        }\r\n    });\r\n\r\n    return items ? <ul className={props.className}>{items}</ul> : null;\r\n}\r\n\r\nexport const AppMenu = (props) => {\r\n    return (\r\n        <div className=\"layout-menu-container\">\r\n            <AppSubmenu items={props.model} className=\"layout-menu\" onMenuItemClick={props.onMenuItemClick} root={true} />\r\n\r\n        </div>\r\n    );\r\n}\r\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\r\nimport { RadioButton } from 'primereact/radiobutton';\r\nimport { InputSwitch } from 'primereact/inputswitch';\r\nimport classNames from 'classnames';\r\nimport {Button} from \"primereact/button\";\r\n\r\nexport const AppConfig = (props) => {\r\n\r\n    const [active, setActive] = useState(false);\r\n    const [scale, setScale] = useState(16);\r\n    const [scales] = useState([12,13,14,15,16]);\r\n    const [themeScheme, setThemeScheme] = useState('saga');\r\n    const [themeColor, setThemeColor] = useState('blue');\r\n    const config = useRef(null);\r\n    let outsideClickListener = useRef(null);\r\n\r\n    const unbindOutsideClickListener = useCallback(() => {\r\n        if (outsideClickListener.current) {\r\n            document.removeEventListener('click', outsideClickListener.current);\r\n            outsideClickListener.current = null;\r\n        }\r\n    }, []);\r\n\r\n    const hideConfigurator = useCallback((event) => {\r\n        setActive(false);\r\n        unbindOutsideClickListener();\r\n        event.preventDefault();\r\n    }, [unbindOutsideClickListener]);\r\n\r\n    const bindOutsideClickListener = useCallback(() => {\r\n        if (!outsideClickListener.current) {\r\n            outsideClickListener.current = (event) => {\r\n                if (active && isOutsideClicked(event)) {\r\n                    hideConfigurator(event);\r\n                }\r\n            };\r\n            document.addEventListener('click', outsideClickListener.current);\r\n        }\r\n    }, [active, hideConfigurator]);\r\n\r\n    useEffect(() => {\r\n        if (active) {\r\n            bindOutsideClickListener()\r\n        }\r\n        else {\r\n            unbindOutsideClickListener()\r\n        }\r\n    }, [active, bindOutsideClickListener, unbindOutsideClickListener]);\r\n\r\n    const isOutsideClicked = (event) => {\r\n        return !(config.current.isSameNode(event.target) || config.current.contains(event.target));\r\n    }\r\n\r\n    const decrementScale = () => {\r\n        setScale((prevState) => --prevState);\r\n    }\r\n\r\n    const incrementScale = () => {\r\n        setScale((prevState) => ++prevState);\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.documentElement.style.fontSize = scale + 'px';\r\n    }, [scale])\r\n\r\n    const toggleConfigurator = (event) => {\r\n        setActive(prevState => !prevState);\r\n    }\r\n\r\n    const configClassName = classNames('layout-config', {\r\n        'layout-config-active': active\r\n    });\r\n\r\n    useEffect(() => {\r\n        let theme = themeScheme + '-' + themeColor;\r\n        let themeElement = document.getElementById('theme-link');\r\n        const themeHref = 'assets/themes/' + theme + '/theme.css';\r\n        replaceLink(themeElement, themeHref);\r\n\r\n    })\r\n\r\n    const replaceLink = (linkElement, href, callback) => {\r\n        if (isIE()) {\r\n            linkElement.setAttribute('href', href);\r\n\r\n            if (callback) {\r\n                callback();\r\n            }\r\n        }\r\n        else {\r\n            const id = linkElement.getAttribute('id');\r\n            const cloneLinkElement = linkElement.cloneNode(true);\r\n\r\n            cloneLinkElement.setAttribute('href', href);\r\n            cloneLinkElement.setAttribute('id', id + '-clone');\r\n\r\n            linkElement.parentNode.insertBefore(cloneLinkElement, linkElement.nextSibling);\r\n\r\n            cloneLinkElement.addEventListener('load', () => {\r\n                linkElement.remove();\r\n                cloneLinkElement.setAttribute('id', id);\r\n\r\n                if (callback) {\r\n                    callback();\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    const isIE = () => {\r\n        return /(MSIE|Trident\\/|Edge\\/)/i.test(window.navigator.userAgent)\r\n    }\r\n\r\n    const changeThemeScheme = (e, theme) => {\r\n        props.onColorModeChange(e.value);\r\n        setThemeScheme(theme);\r\n    }\r\n\r\n    const changeThemeColor = (e, color) => {\r\n        setThemeColor(color);\r\n    }\r\n\r\n    return (\r\n        <div ref={config} className={configClassName} id={\"layout-config\"}>\r\n            <button className=\"layout-config-button p-link\" id=\"layout-config-button\" onClick={toggleConfigurator}>\r\n                <i className=\"pi pi-cog\"></i>\r\n            </button>\r\n            <Button className=\"p-button-danger layout-config-close p-button-rounded p-button-text\" icon=\"pi pi-times\" onClick={hideConfigurator}/>\r\n\r\n            <div className=\"layout-config-content\">\r\n                <h6 className=\"mt-0\">Escala de Componentes</h6>\r\n                <div className=\"config-scale\">\r\n                    <Button icon=\"pi pi-minus\" onClick={decrementScale} className=\"p-button-text\" disabled={scale === scales[0]} />\r\n                    {\r\n                        scales.map((item) => {\r\n                            return <i className={classNames('pi pi-circle-on', {'scale-active': item === scale})} key={item}/>\r\n                        })\r\n                    }\r\n                    <Button icon=\"pi pi-plus\" onClick={incrementScale} className=\"p-button-text\" disabled={scale === scales[scales.length - 1]} />\r\n                </div>\r\n\r\n            \r\n\r\n                <h6>Tipo de Menu</h6>\r\n                <div className=\"p-formgroup-inline\">\r\n                    <div className=\"field-radiobutton\">\r\n                        <RadioButton inputId=\"static\" name=\"layoutMode\" value=\"static\" onChange={(e) => props.onLayoutModeChange(e.value)} checked={props.layoutMode === 'static'} />\r\n                        <label htmlFor=\"static\">Estatico</label>\r\n                    </div>\r\n                    <div className=\"field-radiobutton\">\r\n                        <RadioButton inputId=\"overlay\" name=\"layoutMode\" value=\"overlay\" onChange={(e) => props.onLayoutModeChange(e.value)} checked={props.layoutMode === 'overlay'} />\r\n                        <label htmlFor=\"overlay\">Dinamico</label>\r\n                    </div>\r\n                </div>\r\n\r\n                <h6>Tema</h6>\r\n                <div className=\"p-formgroup-inline\">\r\n                    <div className=\"field-radiobutton\">\r\n                        <RadioButton inputId=\"light\" name=\"layoutColorMode\" value=\"light\" onChange={e => changeThemeScheme(e, 'saga')} checked={props.layoutColorMode === 'light'} />\r\n                        <label htmlFor=\"light\">Claro</label>\r\n                    </div>\r\n                    <div className=\"field-radiobutton\">\r\n                        <RadioButton inputId=\"dim\" name=\"layoutColorMode\" value=\"dim\" onChange={e => changeThemeScheme(e, 'vela')} checked={props.layoutColorMode === 'dim'} />\r\n                        <label htmlFor=\"dark\">Noche</label>\r\n                    </div>\r\n                    <div className=\"field-radiobutton\">\r\n                        <RadioButton inputId=\"dark\" name=\"layoutColorMode\" value=\"dark\" onChange={e => changeThemeScheme(e, 'arya')} checked={props.layoutColorMode === 'dark'} />\r\n                        <label htmlFor=\"dark\">Oscuro</label>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <h6>Colores Primarios</h6>\r\n                <div className=\"flex\">\r\n                    <div style={{width: '2rem', height: '2rem', borderRadius:'6px'}} className=\"bg-blue-500 mr-3 cursor-pointer\" onClick={e => changeThemeColor(e, 'blue')}/>\r\n                    <div style={{width: '2rem', height: '2rem', borderRadius:'6px'}} className=\"bg-green-500 mr-3 cursor-pointer\" onClick={e => changeThemeColor(e, 'green')}/>\r\n                    <div style={{width: '2rem', height: '2rem', borderRadius:'6px'}} className=\"bg-orange-500 mr-3 cursor-pointer\" onClick={e => changeThemeColor(e, 'orange')}/>\r\n                    <div style={{width: '2rem', height: '2rem', borderRadius:'6px'}} className=\"bg-purple-500 mr-3 cursor-pointer\" onClick={e => changeThemeColor(e, 'purple')}/>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react';\r\n\r\n\r\nexport const Dashboard = () => {\r\n\r\n    return (\r\n        <div className=\"grid\">\r\n             <h1>Estamos trabajando - En el Tablero</h1>\r\n        </div>\r\n    );\r\n}\r\n","import axios from 'axios';\r\n\r\n export const getRoles = () =>{\r\n     return axios.get('https://magic-tech-backend.herokuapp.com/api/getRoles');\r\n }\r\n\r\n export const getRolID =(id) =>{\r\n     return axios.get(`https://magic-tech-backend.herokuapp.com/api/getRolId/${id}`);\r\n }\r\n\r\n export const createRol=(data)=>{\r\n    return axios.post('https://magic-tech-backend.herokuapp.com/api/createRol', \r\n      {\r\n         id:  `${data.id}`,\r\n         rol: `${data.rol}`,\r\n      }\r\n      )\r\n      .then(function (response) {\r\n        console.log(response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n }\r\n\r\nexport const updateRolID =(data,id) =>{\r\n    return axios.put(`https://magic-tech-backend.herokuapp.com/api/updateRol/${id}`, \r\n    {\r\n       rol: `${data.rol}`\r\n    }\r\n    )\r\n    .then(function (response) {\r\n      console.log(response);\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error);\r\n    });\r\n}\r\n\r\nexport const deleteRolID =(id) =>{\r\n    return axios.delete(`https://magic-tech-backend.herokuapp.com/api/deleteRolId/${id}`);\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport classNames           from 'classnames';\r\nimport { DataTable }        from 'primereact/datatable';\r\nimport { Column }           from 'primereact/column';\r\nimport { Toast }            from 'primereact/toast';\r\nimport { Button }           from 'primereact/button';\r\nimport { Toolbar }          from 'primereact/toolbar';\r\nimport { Dialog }           from 'primereact/dialog';\r\nimport { InputText }        from 'primereact/inputtext';\r\nimport { ColumnGroup }      from 'primereact/columngroup';\r\nimport { Row }              from 'primereact/row';\r\nimport { useFormik }        from \"formik\";\r\n\r\nimport uniqid               from 'uniqid';\r\n\r\nimport { getRoles,createRol,updateRolID,deleteRolID } from '../service/apiRole';\r\n\r\nexport const Role = (props) => {\r\n\r\n    \r\n    let emptyRole = {\r\n        id: null,\r\n        rol: ''\r\n    };\r\n\r\n    const [roles, setRoles]                          = useState(null);\r\n    const [roleDialog, setRoleDialog]                = useState(false);\r\n    const [deleteRoleDialog, setDeleteRoleDialog]    = useState(false);\r\n\r\n    const [role, setRole]                            = useState(emptyRole);\r\n    const [selectedRoles, setSelectedRoles]          = useState(null);\r\n    const [submitted, setSubmitted]                  = useState(false);\r\n    const toast                                      = useRef(null);\r\n    const dt                                         = useRef(null);\r\n    const [stateRole,setStateRole]                   = useState(false);\r\n    const [showMessage, setShowMessage]              = useState(false);\r\n    const [rolUpdate, setRolUpdate]                  = useState(\"\");\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n          rol: \"\"\r\n        },\r\n        validate: (data) => {\r\n            let errors = {};\r\n\r\n            if (!data.rol) {\r\n                errors.rol = \"Se requiero el Rol\";\r\n            } else if (data.rol.length < 2) {\r\n                errors.rol = \"Como minimo 2 caracteres\";\r\n            } else if (data.rol.length > 30) {\r\n                errors.rol = \"Como maximo 30 caracteres\";\r\n            } else if (!/^^[a-zA-Z\\s]+$/i.test(data.rol)) {\r\n                errors.rol = \"No se permiten numero o caracteres especiales\";\r\n            }else if(!esRepetidoUpdate(data.rol,rolUpdate)&&stateRole === true){\r\n                errors.rol = \"Ya existe el rol\";  \r\n            }else if(!esRepetido(data.rol)){\r\n                errors.rol = \"Ya existe el rol\";\r\n            }\r\n\r\n            return errors;\r\n        },\r\n        onSubmit: (data) => {\r\n            setSubmitted(true);\r\n            setShowMessage(true);\r\n            let _roles = [...roles];\r\n            let _role  = {...role };\r\n            _role['rol'] = data.rol;\r\n\r\n            if (_role.rol.trim()) {\r\n                if (role.id) {\r\n                    setRole({ ...role });\r\n                    console.log(role);\r\n                    const index = findIndexById(role.id);\r\n                    \r\n                    _roles[index] = _role;\r\n                    updateRolID({rol:`${_role.rol}`},role.id);\r\n                    toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Rol Actualizado', life: 3000 });\r\n                }\r\n                else {\r\n\r\n                    _role.id = uniqid(\"rol-\"); \r\n                    _roles.push(_role);\r\n                    createRol({id:_role.id, rol:`${_role.rol}`});\r\n                    toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Rol Creado', life: 3000 });\r\n                }\r\n            }\r\n            setRoles(_roles);\r\n            setRoleDialog(false);\r\n            setRole(emptyRole);\r\n            formik.resetForm();\r\n            \r\n        },\r\n      });\r\n\r\n    const isFormFieldValid = (name) => !!(formik.touched[name] && formik.errors[name]);\r\n    const getFormErrorMessage = (name) => {\r\n         return isFormFieldValid(name) && <small className=\"ml-1 p-error\" style={{'color': '#ff0000'}}>{formik.errors[name]}</small>;\r\n    };\r\n\r\n    const esRepetido =(value)=>{\r\n        var _roles = [...roles];\r\n        let res = _roles.find(i => (i.rol).toLowerCase().trim() === (value).toLowerCase().trim() );\r\n         if(res === undefined){\r\n             return true;\r\n         }else{\r\n             return false;\r\n         }\r\n    }\r\n    const esRepetidoUpdate =(value,original)=>{\r\n        var _roles = [...roles];\r\n        let aux = _roles.filter(i =>(i.rol).toLowerCase() != (original).toLowerCase())\r\n        let res = aux.find(i => (i.rol).toLowerCase().trim() === (value).toLowerCase().trim() );\r\n         if(res === undefined || res === original){\r\n             return true;\r\n         }else{\r\n             return false;\r\n         }\r\n    }\r\n\r\n\r\n    useEffect(()=>{\r\n        fetchRoles();\r\n    },[])\r\n\r\n\r\n    const fetchRoles = () =>{\r\n        getRoles().then(json =>{\r\n            if(json.error){\r\n                console.log(\"Error\");\r\n            }else{\r\n                console.log(\"---------roles insertados-----------\");\r\n                setRoles(json.data);\r\n            }\r\n        })\r\n    }\r\n\r\n    const openNew = () => {\r\n        setRole(emptyRole);\r\n        setSubmitted(false);\r\n        setStateRole(false);\r\n        formik.resetForm();\r\n        setRoleDialog(true);      \r\n    }\r\n\r\n    const hideDialog = () => {\r\n        setSubmitted(false);\r\n        setRoleDialog(false);\r\n    }\r\n\r\n    const hideDeleteRoleDialog = () => {\r\n        setDeleteRoleDialog(false);\r\n    }\r\n\r\n\r\n    const editRole = (role) => {\r\n        setRole({ ...role });\r\n        formik.setValues({rol:''});\r\n        formik.setValues({rol:`${role.rol}`});\r\n        setRolUpdate(`${role.rol}`);\r\n        setStateRole(true);\r\n        setRoleDialog(true);\r\n    }\r\n\r\n    const confirmDeleteRole = (role) => {\r\n        setRole(role);\r\n        setDeleteRoleDialog(true);\r\n    }\r\n\r\n    const deleteRole = () => {\r\n        let _roles = roles.filter(val => val.id !== role.id);\r\n        setRoles(_roles);\r\n        setDeleteRoleDialog(false);\r\n\r\n        if (role.rol.trim()) {\r\n            if (role.id) {\r\n                deleteRolID(role.id);\r\n            }\r\n        }\r\n        setRole(emptyRole);\r\n        \r\n        toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Rol Eliminado', life: 3000 });\r\n    }\r\n\r\n    const findIndexById = (id) => {\r\n        let index = -1;\r\n        for (let i = 0; i < roles.length; i++) {\r\n            if (roles[i].id === id) {\r\n\r\n                index = i;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return index;\r\n    }\r\n\r\n\r\n    const idBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">id</span>\r\n                {rowData.id}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const roleBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Rol</span>\r\n                {rowData.rol}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const leftToolbarTemplate = () => {\r\n        return (\r\n            <React.Fragment>\r\n                <Button style={{'background': '#13af4e'}} label=\"Nuevo\" icon=\"pi pi-plus\" className=\"p-button-success p-mr-2\" onClick={openNew} />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    const actionBodyTemplate = (rowData) => {\r\n        return (\r\n            <div className=\"actions\">\r\n                <Button icon=\"pi pi-pencil\" style={{'background': '#13af4e'}} className=\"p-button-rounded p-button-success p-mr-2\"   onClick={() => editRole(rowData)} />\r\n                <Button icon=\"pi pi-trash\"  style={{'background': '#eee500'}} className=\"p-button-rounded p-button-warning\"          onClick={() => confirmDeleteRole(rowData)} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const deleteRoleDialogFooter = (\r\n        <>\r\n            <Button label=\"No\" icon=\"pi pi-times\" style={{'background': '#d13639','color':'#ffffff'}} className=\"p-button-text\" onClick={hideDeleteRoleDialog} />\r\n            <Button label=\"Si\" icon=\"pi pi-check\" style={props.layoutColorMode === 'light' ? {'color':'#13af4e','border-color':'#13af4e'} : {'color':'#13af4e','border-color':'#13af4e'}} className=\"p-button-text\" onClick={deleteRole} />\r\n        </>\r\n    );\r\n\r\n\r\n    let headerGroup = <ColumnGroup>\r\n                        <Row>\r\n                            <Column header=\"ID\"                 style={{ 'background-color': '#13af4e', width:'20%'}} />\r\n                            <Column header=\"ROL\"                style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                            <Column header=\"Editar/Eliminar\"    style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                        </Row>\r\n                    </ColumnGroup>;\r\n\r\nconst headerDialog =()=>{\r\n    return (stateRole)?\"Actualizando Rol\":\"Añadir Rol\"\r\n}\r\n\r\n    return (\r\n        <div className=\"p-grid crud-demo\">\r\n            <div className=\"p-col-12\">\r\n                <div className=\"card\">\r\n                \r\n                    <Toast ref={toast} />\r\n                    <Toolbar className=\"p-mb-4\" left={leftToolbarTemplate}></Toolbar>\r\n\r\n                    <DataTable headerColumnGroup={headerGroup} ref={dt} value={roles} selection={selectedRoles}  onSelectionChange={(e) => setSelectedRoles(e.value)}\r\n                        dataKey=\"id\" paginator rows={10} rowsPerPageOptions={[5, 10, 25]} className=\"datatable-responsive p-datatable-sm\"\r\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\r\n                        currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} roles\" resizableColumns columnResizeMode=\"fit\" showGridlines>\r\n\r\n                        <Column style={{width:'20%'}} field=\"id\"   header=\"ID\"  sortable body={idBodyTemplate}></Column>\r\n                        <Column style={{width:'20%'}} field=\"role\" header=\"ROL\" sortable body={roleBodyTemplate}></Column>\r\n                        <Column style={{width:'20%'}} body={actionBodyTemplate}></Column>\r\n\r\n                    </DataTable>\r\n\r\n\r\n                    <Dialog visible={roleDialog} style={{ width: '450px' }} header={headerDialog} modal className=\"p-fluid\" onHide={hideDialog}>  \r\n                        <form onSubmit={formik.handleSubmit}>\r\n                            <div className=\"form-group\">\r\n                                <div className=\"p-field mt-2\">\r\n                                    <div className=\"p-inputgroup\">\r\n                                            <span className=\"p-inputgroup-addon\">\r\n                                                <img   src={props.layoutColorMode === 'light' ? 'assets/layout/images/rol.png' : 'assets/layout/images/rol-dark.png'} style={{'height': '1.2em','width':'1.2em',}}/>   \r\n                                                \r\n                                            </span>\r\n                                            <InputText id=\"rol\" type=\"text\" name=\"rol\" value={formik.values.rol} onChange={formik.handleChange} placeholder=\"Rol\" autoFocus/>\r\n                                    </div>       \r\n                                </div>\r\n                                {getFormErrorMessage('rol')}\r\n                            </div>\r\n                            <div className='mt-2'>\r\n                                <div className=\"flex justify-content-center flex-wrap\">\r\n                                    <div className=\"flex align-items-center justify-content-center  m-2\">\r\n                                        <Button label=\"Cancelar\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDialog} style={props.layoutColorMode === 'light' ? {'color':'#d13639','border-color':'#d13639'} : {'color':'#d13639','border-color':'#d13639'}}/>\r\n                                    </div>\r\n                                    <div className=\"flex align-items-center justify-content-center  m-2\">\r\n                                        <Button label=\"Guardar\"  icon=\"pi pi-check\" type=\"submit\" className=\"p-button-text\" style={{'background': '#13af4e','color':'#ffffff'}}/>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </Dialog>\r\n\r\n                    <Dialog visible={deleteRoleDialog} style={{ width: '450px' }} header=\"Confirm\" modal footer={deleteRoleDialogFooter} onHide={hideDeleteRoleDialog}>\r\n                        <div className=\"confirmation-content\">\r\n                            <i className=\"pi pi-exclamation-triangle p-mr-3\" style={{ fontSize: '2rem' }} />\r\n                            {role && <span>¿Estás segura de que quieres eliminar? <b>{role.rol}</b>?</span>}\r\n                        </div>\r\n                    </Dialog>\r\n    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport classNames           from 'classnames';\r\nimport { DataTable }        from 'primereact/datatable';\r\nimport { Column }           from 'primereact/column';\r\nimport { Toast }            from 'primereact/toast';\r\nimport { Button }           from 'primereact/button';\r\nimport { Toolbar }          from 'primereact/toolbar';\r\nimport { Dialog }           from 'primereact/dialog';\r\nimport { InputText }        from 'primereact/inputtext';\r\nimport { Password }         from 'primereact/password';\r\nimport { ColumnGroup }      from 'primereact/columngroup';\r\nimport { Row }              from 'primereact/row';\r\nimport { Dropdown }         from 'primereact/dropdown';\r\nimport { useFormik }        from \"formik\";\r\n\r\nimport uniqid               from 'uniqid';\r\n\r\nimport { getUsers,getUserID,createUser,updateUserID,deleteUserID } from '../service/apiUser';\r\nimport { getRoles }         from '../service/apiRole';\r\n\r\nexport const User = (props) => {\r\n\r\n    let emptyUser = {\r\n        id:       null,\r\n        nombre:     '',\r\n        apellido:     '',\r\n        email:    '',\r\n        password: '',\r\n        rol:      ''\r\n    };\r\n    \r\n    const [roles,setRoles]                           = useState(null);\r\n    const [rol, setRol]                              = useState(null);\r\n    const [users, setUsers]                          = useState(null);\r\n    const [userDialog, setUserDialog]                = useState(false);\r\n    const [deleteUserDialog, setDeleteUserDialog]    = useState(false);\r\n\r\n    const [user, setUser]                            = useState(emptyUser);\r\n    const [selectedUsers, setSelectedUsers]          = useState(null);\r\n    const [submitted, setSubmitted]                  = useState(false);\r\n    const toast                                      = useRef(null);\r\n    const dt                                         = useRef(null);\r\n    const [stateUser,setStateUser]                   = useState(false);\r\n    const [emailUpdate, setEmailUpdate]              = useState(\"\");\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            nombre:    \"\",\r\n            apellido:  \"\",\r\n            email:     \"\",\r\n            password:  \"\",\r\n            confirmPassword : \"\"\r\n        },\r\n         validate: (data) => {\r\n            let errors = {};\r\n\r\n            if (!data.nombre) {\r\n                errors.nombre = \"Se requiero el nombre\";\r\n            } else if (data.nombre.length < 2) {\r\n                errors.nombre = \"Como minimo 2 caracteres\";\r\n            } else if (data.nombre.length > 30) {\r\n                errors.nombre = \"Como maximo 30 caracteres\";\r\n            } else if (!/^^[a-zA-Z\\s]+$/i.test(data.nombre)) {\r\n                errors.nombre = \"No se permiten numero o caracteres especiales\";\r\n            }\r\n\r\n            if (!data.apellido) {\r\n                errors.apellido = \"Se requiero el apellido\";\r\n            } else if (data.apellido.length < 2) {\r\n                errors.apellido = \"Como minimo 2 caracteres\";\r\n            } else if (data.apellido.length > 30) {\r\n                errors.apellido = \"Como maximo 30 caracteres\";\r\n            }else if (!/^^[a-zA-Z\\s]+$/i.test(data.apellido)) {\r\n                errors.apellido = \"No se permiten numero o caracteres especiales\";\r\n            }\r\n\r\n            if (!data.email) {\r\n                errors.email = \"Se requiero el correo electronico\";\r\n            } else if (data.email.length > 255) {\r\n                errors.email = \"Como maximo 255 caracteres\";\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(data.email)) {\r\n                errors.email = 'Dirección de correo electrónico inválida. P.ej. ejemplo@email.com';\r\n            }else if(!esRepetido(data.email)){\r\n                errors.email = \"Ya existe el correo electronico\";\r\n            } else if(!esRepetidoUpdate(data.email,emailUpdate) && stateUser === true){\r\n                errors.email = \"Ya existe el correo electronico\";  \r\n            }\r\n\r\n            if (!data.password) {\r\n                errors.password = \"Se requiero el contraseña\";\r\n            } else if (data.password.length < 6) {\r\n                errors.password = \"Como minimo 6 caracteres\";\r\n            } else if (data.password.length > 255) {\r\n                errors.password = \"Como maximo 255 caracteres\";\r\n            }\r\n\r\n            if (!data.confirmPassword) {\r\n                errors.confirmPassword = \"Se requiero la confirmacion de la contraseña\";\r\n            }else if (data.confirmPassword != data.password) {\r\n                errors.confirmPassword = \"Las contraseñas deben coincidir\";\r\n            } \r\n\r\n            return errors;\r\n        },\r\n\r\n        onSubmit: (data) => {\r\n            if(submitted === true){\r\n                let _users = [...users];\r\n                let _user  = {...user };\r\n                _user['nombre']     = data.nombre;\r\n                _user['apellido']   = data.apellido;\r\n                _user['email']      = data.email;\r\n                _user['password']   = data.password;\r\n\r\n                if (_user.nombre.trim()) {\r\n                    if (user.id) {\r\n\r\n                        setUser({ ...user });\r\n                        console.log(user);\r\n                        const index = findIndexById(user.id);\r\n                        \r\n\r\n                        _users[index] = _user;\r\n                        _user.rol=rol.id;\r\n                        updateUserID({nombre:`${_user.nombre}`,apellido:`${_user.apellido}`,email:`${_user.email}`,password:`${_user.password}`,rol:`${rol.id}`},user.id);\r\n                        toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Usuario Actualizado', life: 3000 });\r\n                    }\r\n                    else {\r\n\r\n                        _user.id = uniqid(\"user-\");\r\n                        _user.rol=rol.id; \r\n                        _users.push(_user);\r\n                        createUser({id:`${_user.id}`,nombre:`${_user.nombre}`,apellido:`${_user.apellido}`,email:`${_user.email}`,password:`${_user.password}`,rol:`${rol.id}`});\r\n                        toast.current.show({ severity: 'success', summary: 'Successful', detail: 'usuario Creado', life: 3000 });\r\n                    }\r\n                }\r\n                setUsers(_users);\r\n                setUserDialog(false);\r\n                setUser(emptyUser);\r\n                formik.resetForm();\r\n        }\r\n            \r\n        },\r\n      });\r\n\r\n    const isFormFieldValid = (name) => !!(formik.touched[name] && formik.errors[name]);\r\n    const getFormErrorMessage = (name) => {\r\n        return isFormFieldValid(name) && <small className=\"ml-1 p-error\" style={{'color': '#ff0000'}}>{formik.errors[name]}</small>;\r\n    };\r\n\r\n    const esRepetido =(value)=>{\r\n        var _users = [...users];\r\n        let res = _users.find(i => (i.email).toLowerCase() === (value).toLowerCase() );\r\n         if(res === undefined){\r\n             return true;\r\n         }else{\r\n             return false;\r\n         }\r\n    }\r\n    const esRepetidoUpdate =(value,original)=>{\r\n        var _users = [...users];\r\n        let aux = _users.filter(i =>(i.email).toLowerCase() != (original).toLowerCase())\r\n        let res = aux.find(i => (i.email).toLowerCase() === (value).toLowerCase() );\r\n         if(res === undefined || res === original){\r\n             return true;\r\n         }else{\r\n             return false;\r\n         }\r\n    }\r\n\r\n\r\n    useEffect(()=>{\r\n        fetchRoles();\r\n    },[])\r\n\r\n    const fetchRoles = () =>{\r\n        getRoles().then(json =>{\r\n            if(json.error){\r\n                console.log(\"Error\");\r\n            }else{\r\n                console.log(\"---------roles insertados-----------\");\r\n                setRoles(json.data);\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        fetchUsers();\r\n    },[])\r\n\r\n    const fetchUsers = () =>{\r\n        getUsers().then(json =>{\r\n            if(json.error){\r\n                console.log(\"Error\");\r\n            }else{\r\n                console.log(\"---------Users insertados-----------\");\r\n                setUsers(json.data);\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(stateUser); //esta línea se ejecuta la primera vez que se renderiza y en todos los cambios que location tenga, aqui siempre tendrás el ultimo valor de location\r\n     }, [stateUser])\r\n\r\n    const openNew = () => {\r\n        setUser(emptyUser);\r\n        formik.resetForm();\r\n        setSubmitted(false);\r\n        setStateUser(false); \r\n        setUserDialog(true);    \r\n    }\r\n\r\n    const hideDialog = () => {\r\n        setSubmitted(false);\r\n        setUserDialog(false);\r\n    }\r\n\r\n    const showDialog = () => {\r\n        setSubmitted(true);\r\n        formik.handleSubmit();\r\n    }\r\n\r\n    const hideDeleteUserDialog = () => {\r\n        setDeleteUserDialog(false);\r\n    }\r\n\r\n    const editUser = (user) => {\r\n        setUser({ ...user });\r\n        setSubmitted(true);\r\n        \r\n        formik.setValues(\r\n            {nombre:`${user.nombre}`,\r\n            apellido:`${user.apellido}`,\r\n            email:`${user.email}`,\r\n            password:`${user.password}`,\r\n            confirmPassword:`${user.password}`,\r\n        });\r\n        let r = findRol(`${user.rol}`);\r\n\r\n        setEmailUpdate(`${user.email}`);\r\n        setRol(r);\r\n        user.rol=`${user.rol}`;\r\n        setStateUser(true);\r\n        setUserDialog(true);\r\n    }\r\n\r\n    const confirmDeleteUser = (user) => {\r\n        setUser(user);\r\n        setDeleteUserDialog(true);\r\n    }\r\n\r\n    const deleteUser = () => {\r\n        let _users = users.filter(val => val.id !== user.id);\r\n        setUsers(_users);\r\n        setDeleteUserDialog(false);\r\n\r\n        if (user.email.trim()) {\r\n            if (user.id) {\r\n                deleteUserID(user.id);\r\n            }\r\n        }\r\n        setUser(emptyUser);\r\n        toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Usuario Eliminado', life: 3000 });\r\n    }\r\n\r\n    const findIndexById = (id) => {\r\n        let index = -1;\r\n        for (let i = 0; i < users.length; i++) {\r\n            if (users[i].id === id) {\r\n\r\n                index = i;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return index;\r\n    }\r\n\r\n    const onRolChange = (e) => {\r\n        setRol(e.value);\r\n    }\r\n\r\n\r\n    const idBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">id</span>\r\n                {rowData.id}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const nombreBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Nombre</span>\r\n                {rowData.nombre}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const apellidoBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Apellido</span>\r\n                {rowData.apellido}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const emailBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Correo electronico</span>\r\n                {rowData.email}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const passwordBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Contrasena</span>\r\n                {rowData.password}\r\n                \r\n            </>\r\n        );\r\n    }\r\n\r\n    \r\n\r\n\r\n    const rolBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Rol</span>\r\n                {rowData.rol}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const findRol = (rolFind) => {\r\n        \r\n        var _roles = [...roles]\r\n\r\n        let res = _roles.find(el => el.id === rolFind);\r\n        console.log(res[\"rol\"]);\r\n        return res;\r\n    }\r\n\r\n    const leftToolbarTemplate = () => {\r\n        return (\r\n            <React.Fragment>\r\n                <Button style={{'background': '#13af4e'}} label=\"Nuevo\" icon=\"pi pi-plus\" className=\"p-button-success p-mr-2\" onClick={openNew} />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    const actionBodyTemplate = (rowData) => {\r\n        return (\r\n            <div className=\"actions\">\r\n                <Button icon=\"pi pi-pencil\" style={{'background': '#13af4e'}} className=\"p-button-rounded p-button-success p-mr-2\"   onClick={() => editUser(rowData)} />\r\n                <Button icon=\"pi pi-trash\"  style={{'background': '#eee500'}} className=\"p-button-rounded p-button-warning\"          onClick={() => confirmDeleteUser(rowData)} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const deleteUserDialogFooter = (\r\n        <>\r\n            <Button label=\"No\" icon=\"pi pi-times\" style={{'background': '#d13639','color':'#ffffff'}} className=\"p-button-text\" onClick={hideDeleteUserDialog} />\r\n            <Button label=\"Si\" icon=\"pi pi-check\" style={props.layoutColorMode === 'light' ? {'color':'#13af4e','border-color':'#13af4e'} : {'color':'#13af4e','border-color':'#13af4e'}} className=\"p-button-text\" onClick={deleteUser} />\r\n        </>\r\n    );\r\n\r\n\r\n    let headerGroup = <ColumnGroup>\r\n                        <Row>\r\n                            <Column header=\"ID\"                 style={{ 'background-color': '#13af4e', width:'20%'}} />\r\n                            <Column header=\"NOMBRE\"             style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                            <Column header=\"APELLIDO\"           style={{ 'background-color': '#13af4e', width:'20%'}} />\r\n                            <Column header=\"CORREO ELECTRONICO\" style={{ 'background-color': '#13af4e', width:'40%'}}/>\r\n                            <Column header=\"CONTRASENA\"         style={{ 'background-color': '#13af4e', width:'20%'}} />\r\n                            <Column header=\"ROL\"                style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                            <Column header=\"Editar/Eliminar\"    style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                        </Row>\r\n                    </ColumnGroup>;\r\n\r\n\r\n    const headerDialog =()=>{\r\n        return (stateUser)?\"Actualizando usuario\":\"Añadir Usuario\"\r\n    }\r\n\r\n    return (\r\n        <div className=\"p-grid crud-demo\">\r\n            <div className=\"p-col-12\">\r\n                <div className=\"card\">\r\n                \r\n                    <Toast ref={toast} />\r\n                    <Toolbar className=\"\" left={leftToolbarTemplate}></Toolbar>\r\n\r\n                    <DataTable headerColumnGroup={headerGroup} ref={dt} value={users} selection={selectedUsers}  onSelectionChange={(e) => setSelectedUsers(e.value)}\r\n                        dataKey=\"id\" paginator rows={10} rowsPerPageOptions={[5, 10, 25]} className=\"datatable-responsive p-datatable-sm col-12\"\r\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\r\n                        currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} users\" resizableColumns columnResizeMode=\"fit\" showGridlines>\r\n                    \r\n                        <Column style={{width:'20%'}} field=\"id\"         header=\"ID\"                 sortable body={idBodyTemplate}></Column>\r\n                        <Column style={{width:'20%'}} field=\"apellido\"   header=\"APELLIDO\"           sortable body={nombreBodyTemplate}></Column>\r\n                        <Column style={{width:'20%'}} field=\"nombre\"     header=\"NOMBRE\"             sortable body={apellidoBodyTemplate}></Column>\r\n                        <Column style={{width:'40%'}} field=\"email\"      header=\"CORREO ELECTRONICO\" sortable body={emailBodyTemplate}></Column>\r\n                        <Column style={{width:'20%'}} field=\"password\"   header=\"CONTRASENA\"         sortable body={passwordBodyTemplate}></Column>\r\n                        <Column style={{width:'20%'}} field=\"rol\"        header=\"ROL\"                sortable body={rolBodyTemplate}></Column>\r\n                        <Column style={{width:'20%'}} body={actionBodyTemplate}></Column>\r\n\r\n                    </DataTable>\r\n\r\n\r\n                    <Dialog visible={userDialog} style={{ width: '450px' }} header={headerDialog} modal className=\"p-fluid\" onHide={hideDialog}>\r\n                        <form onSubmit={formik.handleSubmit}>\r\n                            <div className=\"p-field mt-2\" >\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <i className=\"pi pi-user\"></i>\r\n                                        </span>\r\n                                        <InputText id=\"nombre\" name='nombre' placeholder=\"Nombre\" value={formik.values.nombre} onChange={formik.handleChange} autoFocus/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('nombre')}\r\n\r\n                            <div className=\"p-field mt-2\">\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <i className=\"pi pi-user\"></i>\r\n                                        </span>\r\n                                        <InputText id=\"apellido\" name='apellido' placeholder=\"Apellido\" value={formik.values.apellido} onChange={formik.handleChange}/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('apellido')}\r\n\r\n                            <div className=\"p-field mt-2\">\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <img   src={props.layoutColorMode === 'light' ? 'assets/layout/images/gmail.png' : 'assets/layout/images/gmail-dark.png'} style={{'height': '1.2em','width':'1.2em',}}/>  \r\n                                        </span>\r\n                                        <InputText id=\"email\" name='email' placeholder=\"Correo electronico\"  value={formik.values.email} onChange={formik.handleChange}/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('email')}\r\n\r\n                            <div className=\"p-field mt-2\">\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <img   src={props.layoutColorMode === 'light' ? 'assets/layout/images/password.png' : 'assets/layout/images/password-dark.png'} style={{'height': '1.2em','width':'1.2em',}}/>  \r\n                                        </span>\r\n                                        <Password id=\"password\" name='password' placeholder=\"Contraseña\"  value={formik.values.password} onChange={formik.handleChange} toggleMask  promptLabel=\"Por favor ingrese una contraseña\" weakLabel=\"Débil\" mediumLabel=\"Medio\" strongLabel=\"Fuerte\"/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('password')}\r\n\r\n                            <div className=\"p-field mt-2\">\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <img   src={props.layoutColorMode === 'light' ? 'assets/layout/images/password.png' : 'assets/layout/images/password-dark.png'} style={{'height': '1.2em','width':'1.2em',}}/>   \r\n                                        </span>\r\n                                        <Password id=\"confirmPassword\" name='confirmPassword' placeholder=\"Confirmar contraseña\"  value={formik.values.confirmPassword} onChange={formik.handleChange} toggleMask  promptLabel=\"Por favor ingrese una contraseña\" weakLabel=\"Débil\" mediumLabel=\"Medio\" strongLabel=\"Fuerte\"/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('confirmPassword')}\r\n\r\n                            <div className=\"p-field mt-2\">\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <img   src={props.layoutColorMode === 'light' ? 'assets/layout/images/rol.png' : 'assets/layout/images/rol-dark.png'} style={{'height': '1.2em','width':'1.2em',}}/>   \r\n                                        </span>\r\n                                        <Dropdown value={rol} options={roles} onChange={onRolChange} optionLabel=\"rol\" placeholder=\"Rol\" required/>   \r\n                                </div>       \r\n                            </div>\r\n                            <div className='mt-2'>\r\n                                <div className=\"flex justify-content-center flex-wrap\">\r\n                                    <div className=\"flex align-items-center justify-content-center  m-2\">\r\n                                        <Button label=\"Cancelar\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDialog} style={props.layoutColorMode === 'light' ? {'color':'#d13639','border-color':'#d13639'} : {'color':'#d13639','border-color':'#d13639'}}/>\r\n                                    </div>\r\n                                    <div className=\"flex align-items-center justify-content-center  m-2\">\r\n                                        <Button label=\"Guardar\"  icon=\"pi pi-check\" type=\"submit\" className=\"p-button-text\" onClick={showDialog} style={{'background': '#13af4e','color':'#ffffff'}}/>  \r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </Dialog>\r\n\r\n\r\n                    <Dialog className=\"mt-2\" visible={deleteUserDialog} style={{ width: '450px' }} header=\"Confirm\" modal footer={deleteUserDialogFooter} onHide={hideDeleteUserDialog}>\r\n                        <div className=\"confirmation-content\">\r\n                            <i className=\"pi pi-exclamation-triangle p-mr-3\" style={{ fontSize: '2rem' }} />\r\n                            {user && <span>¿Estás segura de que quieres eliminar? <b>{user.nombre}</b> <b>{user.apellido}</b>?</span>}\r\n                        </div>\r\n                    </Dialog>\r\n    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import axios from 'axios';\r\n\r\n export const getEmpresas = () =>{\r\n     return axios.get('https://magic-tech-backend.herokuapp.com/api/getEmpresas');\r\n }\r\n\r\n export const getEmpresaID =(id) =>{\r\n     return axios.get(`https://magic-tech-backend.herokuapp.com/api/getEmpresaId/${id}`);\r\n }\r\n\r\n\r\n\r\n export const createEmpresa=(data)=>{\r\n    return axios.post('https://magic-tech-backend.herokuapp.com/api/createEmpresa', \r\n      {\r\n         id:          `${data.id}`,\r\n         nombre:      `${data.nombre}`,\r\n         nombreCorto: `${data.nombreCorto}`,\r\n         nombreLargo: `${data.nombreLargo}`,\r\n         tipoSociedad:`${data.tipoSociedad}`,\r\n         direccion:   `${data.direccion}`,\r\n         email:       `${data.email}`,\r\n         password:    `${data.password}`,\r\n         informacion: `${data.informacion}`,\r\n         user:        `${data.user}`\r\n       \r\n      }\r\n      )\r\n      .then(function (response) {\r\n        console.log(response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n }\r\n\r\nexport const updateEmpresaID =(data,id) =>{\r\n    return axios.put(`https://magic-tech-backend.herokuapp.com/api/updateEmpresa/${id}`, \r\n    {\r\n      nombre:      `${data.nombre}`,\r\n      nombreCorto: `${data.nombreCorto}`,\r\n      nombreLargo: `${data.nombreLargo}`,\r\n      tipoSociedad:`${data.tipoSociedad}`,\r\n      direccion:   `${data.direccion}`,\r\n      email:       `${data.email}`,\r\n      password:    `${data.password}`,\r\n      informacion: `${data.informacion}`,\r\n      user:        `${data.user}`\r\n    }\r\n    )\r\n    .then(function (response) {\r\n      console.log(response);\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error);\r\n    });\r\n}\r\n\r\nexport const deleteEmpresaID =(id) =>{\r\n    return axios.delete(`https://magic-tech-backend.herokuapp.com/api/deleteEmpresaId/${id}`);\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport classNames           from 'classnames';\r\nimport { DataTable }        from 'primereact/datatable';\r\nimport { Column }           from 'primereact/column';\r\nimport { Toast }            from 'primereact/toast';\r\nimport { Button }           from 'primereact/button';\r\nimport { Toolbar }          from 'primereact/toolbar';\r\nimport { Dialog }           from 'primereact/dialog';\r\nimport { InputText }        from 'primereact/inputtext';\r\nimport { InputTextarea }    from 'primereact/inputtextarea';\r\nimport { Password }         from 'primereact/password';\r\nimport { ColumnGroup }      from 'primereact/columngroup';\r\nimport { Row }              from 'primereact/row';\r\nimport { Dropdown }         from 'primereact/dropdown';\r\nimport { useFormik }        from \"formik\";\r\n\r\nimport uniqid               from 'uniqid';\r\n\r\nimport { getUsers,getUserID,createUser,updateUserID,deleteUserID }   from '../service/apiUser';\r\nimport { getEmpresas,createEmpresa,updateEmpresaID,deleteEmpresaID } from '../service/apiEmpresa';\r\n\r\nexport const Empresa = (props) => {\r\n\r\n    let emptyEmpresa = {\r\n        id:              null,\r\n        nombre:          '',\r\n        nombreCorto:     '',\r\n        nombreLargo:     '',\r\n        tipoSociedad:    '',\r\n        direccion:       '',\r\n        email:           '',\r\n        password:        '',\r\n        informacion:     '',\r\n        user:            ''\r\n    };\r\n    \r\n    const Sociedades = [\r\n        {name: \"Sociedad de Responsabilidad Limitada\"       , tipo:\"S.R.L.\"},\r\n        {name: \"Sociedad Anónima\"                           , tipo:\"S.A.\"},\r\n        {name: \"Sociedad Colectiva\"                         , tipo:\"S.C.\"},\r\n        {name: \"Sociedad Anónima Mixta o de Economía Mixta\" , tipo:\"S.A.M.\"},\r\n        {name: \"Sociedad en Comandita Simple\"               , tipo:\"S.C.S.\"}\r\n    ];\r\n\r\n    const [users, setUsers]                             = useState(null);\r\n\r\n    const [empresas, setEmpresas]                       = useState(null);\r\n    const [empresaDialog, setEmpresaDialog]             = useState(false);\r\n    const [deleteEmpresaDialog, setDeleteEmpresaDialog] = useState(false);\r\n\r\n    const [empresa, setEmpresa]                         = useState(emptyEmpresa);\r\n    const [selectedEmpresas, setSelectedEmpresas]       = useState(null);\r\n    const [submitted, setSubmitted]                     = useState(false);\r\n    const toast                                         = useRef(null);\r\n    const dt                                            = useRef(null);\r\n    const [stateEmpresa,setStateEmpresa]                = useState(false);\r\n    const [emailUpdate, setEmailUpdate]                 = useState(\"\");\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            nombre:          '',\r\n            nombreCorto:     '',\r\n            nombreLargo:     '',\r\n            tipoSociedad:    '',\r\n            direccion:       '',\r\n            email:           '',\r\n            password:        '',\r\n            confirmPassword :'',\r\n            informacion:     '',\r\n            user:            ''\r\n            \r\n        },\r\n         validate: (data) => {\r\n            let errors = {};\r\n\r\n            if (!data.nombre) {\r\n                errors.nombre = \"Se requiero el nombre\";\r\n            } else if (data.nombre.length < 2) {\r\n                errors.nombre = \"Como minimo 2 caracteres\";\r\n            } else if (data.nombre.length > 30) {\r\n                errors.nombre = \"Como maximo 30 caracteres\";\r\n            } else if (!/^^[a-zA-Z\\s]+$/i.test(data.nombre)) {\r\n                errors.nombre = \"No se permiten numero o caracteres especiales\";\r\n            }\r\n\r\n            if (!data.nombreCorto) {\r\n                errors.nombreCorto = \"Se requiero el nombre corto\";\r\n            } else if (data.nombreCorto.length < 2) {\r\n                errors.nombreCorto = \"Como minimo 2 caracteres\";\r\n            } else if (data.nombreCorto.length > 30) {\r\n                errors.nombreCorto = \"Como maximo 30 caracteres\";\r\n            } else if (!/^^[a-zA-Z\\s]+$/i.test(data.nombreCorto)) {\r\n                errors.nombreCorto = \"No se permiten numero o caracteres especiales\";\r\n            }\r\n\r\n            if (!data.nombreLargo) {\r\n                errors.nombreLargo = \"Se requiero el nombre largo\";\r\n            } else if (data.nombreLargo.length < 2) {\r\n                errors.nombreLargo = \"Como minimo 2 caracteres\";\r\n            } else if (data.nombreLargo.length > 30) {\r\n                errors.nombreLargo = \"Como maximo 30 caracteres\";\r\n            } else if (!/^^[a-zA-Z\\s]+$/i.test(data.nombreLargo)) {\r\n                errors.nombreLargo = \"No se permiten numero o caracteres especiales\";\r\n            }\r\n\r\n            if (!data.tipoSociedad) {\r\n                errors.tipoSociedad = \"Se requiero el tipo de sociedad\";\r\n            } else if (data.tipoSociedad.length < 2) {\r\n                errors.tipoSociedad = \"Como minimo 2 caracteres\";\r\n            } else if (data.tipoSociedad.length > 30) {\r\n                errors.tipoSociedad = \"Como maximo 30 caracteres\";\r\n            } else if (!/^^[a-zA-Z.\\s]+$/i.test(data.tipoSociedad)) {\r\n                errors.tipoSociedad = \"No se permiten numero o caracteres especiales\";\r\n            }\r\n\r\n            if (!data.direccion) {\r\n                errors.direccion = \"Se requiero la direccion\";\r\n            } else if (data.direccion.length < 2) {\r\n                errors.direccion = \"Como minimo 2 caracteres\";\r\n            } else if (data.direccion.length > 50) {\r\n                errors.direccion = \"Como maximo 50 caracteres\";\r\n            }else if (!/^^[a-zA-Z0-9.\\s]+$/i.test(data.direccion)) {\r\n                errors.direccion = \"No se permiten numero o caracteres especiales\";\r\n            }\r\n\r\n            if (!data.email) {\r\n                errors.email = \"Se requiero el correo electronico\";\r\n            } else if (data.email.length > 255) {\r\n                errors.email = \"Como maximo 255 caracteres\";\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(data.email)) {\r\n                errors.email = 'Dirección de correo electrónico inválida. P.ej. ejemplo@email.com';\r\n            }else if(!esRepetido(data.email)){\r\n                errors.email = \"Ya existe el correo electronico\";\r\n            } else if(!esRepetidoUpdate(data.email,emailUpdate) && stateEmpresa === true){\r\n                errors.email = \"Ya existe el correo electronico\";  \r\n            }\r\n\r\n            if (!data.password) {\r\n                errors.password = \"Se requiero el contraseña\";\r\n            } else if (data.password.length < 6) {\r\n                errors.password = \"Como minimo 6 caracteres\";\r\n            } else if (data.password.length > 255) {\r\n                errors.password = \"Como maximo 255 caracteres\";\r\n            }\r\n\r\n            if (!data.confirmPassword) {\r\n                errors.confirmPassword = \"Se requiero la confirmacion de la contraseña\";\r\n            }else if (data.confirmPassword != data.password) {\r\n                errors.confirmPassword = \"Las contraseñas deben coincidir\";\r\n            } \r\n\r\n            if (!data.informacion) {\r\n                errors.informacion = \"Se requiero la informacion de la empresa\";\r\n            } else if (data.informacion.length < 2) {\r\n                errors.informacion = \"Como minimo 2 caracteres\";\r\n            } else if (data.informacion.length > 255) {\r\n                errors.informacion = \"Como maximo 30 caracteres\";\r\n            } else if (!/^^[a-zA-Z0-9.\\s]+$/i.test(data.informacion)) {\r\n                errors.informacion = \"No se permiten numero o caracteres especiales\";\r\n            }\r\n\r\n            if (!data.user) {\r\n                errors.user = \"Se requiero el user\";\r\n            } else if (data.user.length < 2) {\r\n                errors.user = \"Como minimo 2 caracteres\";\r\n            } else if (data.user.length > 30) {\r\n                errors.user = \"Como maximo 30 caracteres\";\r\n            }else if (!/^^[a-zA-Z0-9\\s-]+$/i.test(data.user)) {\r\n                errors.user = \"No se permiten numero o caracteres especiales\";\r\n            }\r\n\r\n\r\n            return errors;\r\n        },\r\n\r\n        onSubmit: (data) => {\r\n            if(submitted === true){\r\n                let _empresas = [...empresas];\r\n                let _empresa  = {...empresa };\r\n                _empresa['nombre']            = data.nombre;\r\n                _empresa['nombreCorto']       = data.nombreCorto;\r\n                _empresa['nombreLargo']       = data.nombreLargo;\r\n                _empresa['tipoSociedad']      = data.tipoSociedad;\r\n                _empresa['direccion']         = data.direccion;\r\n                _empresa['email']             = data.email;\r\n                _empresa['password']          = data.password;\r\n                _empresa['confirmPassword']   = data.confirmPassword;\r\n                _empresa['informacion']       = data.informacion;\r\n                _empresa['user']              = data.user;\r\n\r\n\r\n                if (_empresa.nombre.trim()) {\r\n                    if (empresa.id) {\r\n\r\n                        setEmpresa({ ...empresa });\r\n                        console.log(empresa);\r\n                        const index = findIndexById(empresa.id);\r\n                        _empresas[index] = _empresa;\r\n                        updateEmpresaID({nombre:`${_empresa.nombre}`,nombreCorto:`${_empresa.nombreCorto}`,nombreLargo:`${_empresa.nombreLargo}`,tipoSociedad:`${_empresa.tipoSociedad}`,direccion:`${_empresa.direccion}`,email:`${_empresa.email}`,password:`${_empresa.password}`,informacion:`${_empresa.informacion}`,user:`${_empresa.user}`},empresa.id);\r\n                        toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Empresa Actualizado', life: 3000 });\r\n                    }\r\n                    else {\r\n\r\n                        _empresa.id = uniqid(\"empresa-\");\r\n                        _empresas.push(_empresa);\r\n                        console.log({id:`${_empresa.id}`,nombre:`${_empresa.nombre}`,nombreCorto:`${_empresa.nombreCorto}`,nombreLargo:`${_empresa.nombreLargo}`,tipoSociedad:`${_empresa.tipoSociedad}`,direccion:`${_empresa.direccion}`,email:`${_empresa.email}`,password:`${_empresa.password}`,informacion:`${_empresa.informacion}`,user:`${_empresa.user}`});\r\n                        createEmpresa({id:`${_empresa.id}`,nombre:`${_empresa.nombre}`,nombreCorto:`${_empresa.nombreCorto}`,nombreLargo:`${_empresa.nombreLargo}`,tipoSociedad:`${_empresa.tipoSociedad}`,direccion:`${_empresa.direccion}`,email:`${_empresa.email}`,password:`${_empresa.password}`,informacion:`${_empresa.informacion}`,user:`${_empresa.user}`});\r\n                        toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Empresa Creado', life: 3000 });\r\n                    }\r\n                }\r\n                setEmpresas(_empresas);\r\n                setEmpresaDialog(false);\r\n                setEmpresa(emptyEmpresa);\r\n                formik.resetForm();\r\n        }\r\n            \r\n        },\r\n      });\r\n\r\n    const isFormFieldValid = (name) => !!(formik.touched[name] && formik.errors[name]);\r\n    const getFormErrorMessage = (name) => {\r\n        return isFormFieldValid(name) && <small className=\"ml-1 p-error\" style={{'color': '#ff0000'}}>{formik.errors[name]}</small>;\r\n    };\r\n\r\n    const esRepetido =(value)=>{\r\n        var _empresas = [...empresas];\r\n        let res = _empresas.find(i => (i.email).toLowerCase() === (value).toLowerCase() );\r\n         if(res === undefined){\r\n             return true;\r\n         }else{\r\n             return false;\r\n         }\r\n    }\r\n    const esRepetidoUpdate =(value,original)=>{\r\n        var _empresas = [...empresas];\r\n        let aux = _empresas.filter(i =>(i.email).toLowerCase() != (original).toLowerCase())\r\n        let res = aux.find(i => (i.email).toLowerCase() === (value).toLowerCase() );\r\n         if(res === undefined || res === original){\r\n             return true;\r\n         }else{\r\n             return false;\r\n         }\r\n    }\r\n\r\n\r\n    useEffect(()=>{\r\n        fetchUsers();\r\n    },[])\r\n\r\n    const fetchUsers = () =>{\r\n        getUsers().then(json =>{\r\n            if(json.error){\r\n                console.log(\"Error\");\r\n            }else{\r\n                console.log(\"---------Usuarios insertados-----------\");\r\n                setUsers(json.data);\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        fetchEmpresas();\r\n    },[])\r\n\r\n    const fetchEmpresas = () =>{\r\n        getEmpresas().then(json =>{\r\n            if(json.error){\r\n                console.log(\"Error\");\r\n            }else{\r\n                console.log(\"---------Empresas insertados-----------\");\r\n                setEmpresas(json.data);\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(stateEmpresa); //esta línea se ejecuta la primera vez que se renderiza y en todos los cambios que location tenga, aqui siempre tendrás el ultimo valor de location\r\n     }, [stateEmpresa])\r\n\r\n    const openNew = () => {\r\n        setEmpresa(emptyEmpresa);\r\n        formik.resetForm();\r\n        setSubmitted(false);\r\n        setStateEmpresa(false); \r\n        setEmpresaDialog(true);    \r\n    }\r\n\r\n    const hideDialog = () => {\r\n        setSubmitted(false);\r\n        setEmpresaDialog(false);\r\n    }\r\n\r\n    const showDialog = () => {\r\n        setSubmitted(true);\r\n        formik.handleSubmit();\r\n    }\r\n\r\n    const hideDeleteEmpresaDialog = () => {\r\n        setDeleteEmpresaDialog(false);\r\n    }\r\n\r\n    const editEmpresa = (empresa) => {\r\n        setEmpresa({ ...empresa });\r\n        setSubmitted(true);\r\n        \r\n        formik.setValues(\r\n        {\r\n            nombre:         `${empresa.nombre}`,\r\n            nombreCorto:    `${empresa.nombreCorto}`,\r\n            nombreLargo:    `${empresa.nombreLargo}`,\r\n            tipoSociedad:   `${empresa.tipoSociedad}`,\r\n            direccion:      `${empresa.direccion}`,\r\n            email:          `${empresa.email}`,\r\n            password:       `${empresa.password}`,\r\n            confirmPassword:`${empresa.password}`,\r\n            informacion:    `${empresa.informacion}`,\r\n            user:           `${empresa.user}`\r\n        });\r\n\r\n        setEmailUpdate(`${empresa.email}`);\r\n        setStateEmpresa(true);\r\n        setEmpresaDialog(true);\r\n    }\r\n\r\n    const confirmDeleteEmpresa = (empresa) => {\r\n        setEmpresa(empresa);\r\n        setDeleteEmpresaDialog(true);\r\n    }\r\n\r\n    const deleteEmpresa = () => {\r\n        let _empresas = empresas.filter(val => val.id !== empresa.id);\r\n        setEmpresas(_empresas);\r\n        setDeleteEmpresaDialog(false);\r\n\r\n        if (empresa.email.trim()) {\r\n            if (empresa.id) {\r\n                deleteEmpresaID(empresa.id);\r\n            }\r\n        }\r\n        setEmpresa(emptyEmpresa);\r\n        toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Usuario Eliminado', life: 3000 });\r\n    }\r\n\r\n    const findIndexById = (id) => {\r\n        let index = -1;\r\n        for (let i = 0; i < empresas.length; i++) {\r\n            if (empresas[i].id === id) {\r\n\r\n                index = i;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return index;\r\n    }\r\n\r\n    const idBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">id</span>\r\n                {rowData.id}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const nombreBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Nombre</span>\r\n                {rowData.nombre}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const nombreCortoBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Nombre Corto</span>\r\n                {rowData.nombreCorto}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const nombreLargoBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Nombre Largo</span>\r\n                {rowData.nombreLargo}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const tipoSociedadBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Tipo Sociedad</span>\r\n                {rowData.tipoSociedad}\r\n                \r\n            </>\r\n        );\r\n    }\r\n\r\n    \r\n\r\n\r\n    const direccionBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Direccion</span>\r\n                {rowData.direccion}\r\n               \r\n\r\n            </>\r\n        );\r\n    }\r\n\r\n    const emailBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Correo electronico</span>\r\n                {rowData.email}\r\n               \r\n\r\n            </>\r\n        );\r\n    }\r\n\r\n    const passwordBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">contraseña</span>\r\n                {rowData.password}\r\n               \r\n\r\n            </>\r\n        );\r\n    }\r\n\r\n    const informacionBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Informacion</span>\r\n                {rowData.informacion}\r\n               \r\n\r\n            </>\r\n        );\r\n    }\r\n\r\n    const userBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Usuario</span>\r\n                {rowData.user}\r\n               \r\n\r\n            </>\r\n        );\r\n    }\r\n\r\n\r\n    const leftToolbarTemplate = () => {\r\n        return (\r\n            <React.Fragment>\r\n                <Button style={{'background': '#13af4e'}} label=\"Nuevo\" icon=\"pi pi-plus\" className=\"p-button-success p-mr-2\" onClick={openNew} />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    const actionBodyTemplate = (rowData) => {\r\n        return (\r\n            <div className=\"actions\">\r\n                <Button icon=\"pi pi-pencil\" style={{'background': '#13af4e'}} className=\"p-button-rounded p-button-success p-mr-2\"   onClick={() => editEmpresa(rowData)} />\r\n                <Button icon=\"pi pi-trash\"  style={{'background': '#eee500'}} className=\"p-button-rounded p-button-warning\"          onClick={() => confirmDeleteEmpresa(rowData)} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const deleteEmpresaDialogFooter = (\r\n        <>\r\n            <Button label=\"No\" icon=\"pi pi-times\" style={{'background': '#d13639','color':'#ffffff'}} className=\"p-button-text\" onClick={hideDeleteEmpresaDialog} />\r\n            <Button label=\"Si\" icon=\"pi pi-check\" style={props.layoutColorMode === 'light' ? {'color':'#13af4e','border-color':'#13af4e'} : {'color':'#13af4e','border-color':'#13af4e'}} className=\"p-button-text\" onClick={deleteEmpresa} />\r\n        </>\r\n    );\r\n\r\n\r\n    let headerGroup = <ColumnGroup>\r\n                        <Row>\r\n                            <Column header=\"ID\"                 style={{ 'background-color': '#13af4e', width:'20%'}} />\r\n                            <Column header=\"NOMBRE\"             style={{ 'background-color': '#13af4e', width:'20%'}} />\r\n                            <Column header=\"SOCIEDAD\"           style={{ 'background-color': '#13af4e', width:'20%'}} />\r\n                            <Column header=\"DIRECCION\"          style={{ 'background-color': '#13af4e', width:'20%'}} />\r\n                            <Column header=\"CORREO ELECTRONICO\" style={{ 'background-color': '#13af4e', width:'25%'}} />\r\n                            <Column header=\"USUARIO\"            style={{ 'background-color': '#13af4e', width:'20%'}} />\r\n                            <Column header=\"Editar/Eliminar\"    style={{ 'background-color': '#13af4e', width:'20%'}} />\r\n                        </Row>\r\n                    </ColumnGroup>;\r\n\r\n\r\n    const headerDialog =()=>{\r\n        return (stateEmpresa)?\"Actualizando Empresa\":\"Añadir Empresa\"\r\n    }\r\n\r\n    return (\r\n        <div className=\"p-grid crud-demo\">\r\n            <div className=\"p-col-12\">\r\n                <div className=\"card\">\r\n                \r\n                    <Toast ref={toast} />\r\n                    <Toolbar className=\"\" left={leftToolbarTemplate}></Toolbar>\r\n\r\n                    <DataTable headerColumnGroup={headerGroup} ref={dt} value={empresas} selection={selectedEmpresas}  onSelectionChange={(e) => setSelectedEmpresas(e.value)}\r\n                        dataKey=\"id\" paginator rows={10} rowsPerPageOptions={[5, 10, 25]} className=\"datatable-responsive p-datatable-sm col-12\"\r\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\r\n                        currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} users\" resizableColumns columnResizeMode=\"fit\" showGridlines>\r\n                    \r\n                        <Column style={{width:'20%'}} field=\"id\"              header=\"ID\"                 sortable body={idBodyTemplate}            ></Column>\r\n                        <Column style={{width:'20%'}} field=\"nombre\"          header=\"NOMBRE\"             sortable body={nombreBodyTemplate}        ></Column>\r\n                        <Column style={{width:'20%'}} field=\"tipoSociedad\"    header=\"SOCIEDAD\"           sortable body={tipoSociedadBodyTemplate}  ></Column>\r\n                        <Column style={{width:'20%'}} field=\"direccion\"       header=\"DIRECCION\"          sortable body={direccionBodyTemplate}     ></Column>\r\n                        <Column style={{width:'25%'}} field=\"email\"           header=\"CORREO ELECTRONICO\" sortable body={emailBodyTemplate}         ></Column>\r\n                        <Column style={{width:'20%'}} field=\"user\"            header=\"USUARIO\"            sortable body={userBodyTemplate}          ></Column>\r\n\r\n                        <Column style={{width:'20%'}} body={actionBodyTemplate}></Column>\r\n\r\n                    </DataTable>\r\n\r\n\r\n                    <Dialog visible={empresaDialog} style={{ width: '450px' }} header={headerDialog} modal className=\"p-fluid\" onHide={hideDialog}>\r\n                        <form onSubmit={formik.handleSubmit}>\r\n                            <div className=\"p-field mt-2\" >\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <i className=\"pi pi-user\"></i>\r\n                                        </span>\r\n                                        <InputText id=\"nombre\" name='nombre' placeholder=\"Nombre\" value={formik.values.nombre} onChange={formik.handleChange} autoFocus/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('nombre')}\r\n\r\n                            <div className=\"p-field mt-2\" >\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <i className=\"pi pi-user\"></i>\r\n                                        </span>\r\n                                        <InputText id=\"nombreCorto\" name='nombreCorto' placeholder=\"Nombre Corto\" value={formik.values.nombreCorto} onChange={formik.handleChange}/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('nombreCorto')}\r\n\r\n                            <div className=\"p-field mt-2\" >\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <i className=\"pi pi-user\"></i>\r\n                                        </span>\r\n                                        <InputText id=\"nombreLargo\" name='nombreLargo' placeholder=\"Nombre Largo\" value={formik.values.nombreLargo} onChange={formik.handleChange}/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('nombreLargo')}\r\n\r\n                            <div className=\"p-field mt-2\" >\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <i className=\"pi pi-briefcase\"></i>\r\n                                        </span>\r\n                                        <Dropdown id=\"tipoSociedad\" name=\"tipoSociedad\" placeholder=\"Seleccione el tipo de sociedad\" value={formik.values.tipoSociedad} onChange={formik.handleChange} options={Sociedades} optionLabel=\"tipo\"  optionValue=\"tipo\"/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('tipoSociedad')}\r\n\r\n                            <div className=\"p-field mt-2\" >\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <i className=\"pi pi-map-marker\"></i>\r\n                                        </span>\r\n                                        <InputText id=\"direccion\" name='direccion' placeholder=\"Direccion\" value={formik.values.direccion} onChange={formik.handleChange}/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('direccion')}\r\n\r\n\r\n                            <div className=\"p-field mt-2\">\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <img   src={props.layoutColorMode === 'light' ? 'assets/layout/images/gmail.png' : 'assets/layout/images/gmail-dark.png'} style={{'height': '1.2em','width':'1.2em',}}/>  \r\n                                        </span>\r\n                                        <InputText id=\"email\" name='email' placeholder=\"Correo electronico\"  value={formik.values.email} onChange={formik.handleChange}/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('email')}\r\n\r\n                            <div className=\"p-field mt-2\">\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <img   src={props.layoutColorMode === 'light' ? 'assets/layout/images/password.png' : 'assets/layout/images/password-dark.png'} style={{'height': '1.2em','width':'1.2em',}}/>  \r\n                                        </span>\r\n                                        <Password id=\"password\" name='password' placeholder=\"Contraseña\"  value={formik.values.password} onChange={formik.handleChange} toggleMask  promptLabel=\"Por favor ingrese una contraseña\" weakLabel=\"Débil\" mediumLabel=\"Medio\" strongLabel=\"Fuerte\"/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('password')}\r\n\r\n                            <div className=\"p-field mt-2\">\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <img   src={props.layoutColorMode === 'light' ? 'assets/layout/images/password.png' : 'assets/layout/images/password-dark.png'} style={{'height': '1.2em','width':'1.2em',}}/>   \r\n                                        </span>\r\n                                        <Password id=\"confirmPassword\" name='confirmPassword' placeholder=\"Confirmar contraseña\"  value={formik.values.confirmPassword} onChange={formik.handleChange} toggleMask  promptLabel=\"Por favor ingrese una contraseña\" weakLabel=\"Débil\" mediumLabel=\"Medio\" strongLabel=\"Fuerte\"/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('confirmPassword')}\r\n\r\n                            <div className=\"p-field mt-2\" >\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <i className=\"pi pi-info\"></i>\r\n                                        </span>\r\n                                        <InputTextarea id=\"informacion\" name='informacion' placeholder=\"Informacion\" value={formik.values.informacion} onChange={formik.handleChange}/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('informacion')}\r\n\r\n                            <div className=\"p-field mt-2\" >\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <i className=\"pi pi-user\"></i>\r\n                                        </span>\r\n                                        <Dropdown id=\"user\" name=\"user\" placeholder=\"Seleccione un usuario\" value={formik.values.user} onChange={formik.handleChange} options={users} optionLabel=\"nombre\"  optionValue=\"id\"/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('user')}\r\n\r\n\r\n\r\n                            <div className='mt-2'>\r\n                                <div className=\"flex justify-content-center flex-wrap\">\r\n                                    <div className=\"flex align-items-center justify-content-center  m-2\">\r\n                                        <Button label=\"Cancelar\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDialog} style={props.layoutColorMode === 'light' ? {'color':'#d13639','border-color':'#d13639'} : {'color':'#d13639','border-color':'#d13639'}}/>\r\n                                    </div>\r\n                                    <div className=\"flex align-items-center justify-content-center  m-2\">\r\n                                        <Button label=\"Guardar\"  icon=\"pi pi-check\" type=\"submit\" className=\"p-button-text\" onClick={showDialog} style={{'background': '#13af4e','color':'#ffffff'}}/>  \r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </Dialog>\r\n\r\n\r\n                    <Dialog className=\"mt-2\" visible={deleteEmpresaDialog} style={{ width: '450px' }} header=\"Confirm\" modal footer={deleteEmpresaDialogFooter} onHide={hideDeleteEmpresaDialog}>\r\n                        <div className=\"confirmation-content\">\r\n                            <i className=\"pi pi-exclamation-triangle p-mr-3\" style={{ fontSize: '2rem' }} />\r\n                            {empresa && <span>¿Estás segura de que quieres eliminar? <b>{empresa.nombre}</b> <b>{empresa.tipoSociedadad}</b>?</span>}\r\n                        </div>\r\n                    </Dialog>\r\n    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport classNames           from 'classnames';\r\nimport { DataTable }        from 'primereact/datatable';\r\nimport { Column }           from 'primereact/column';\r\nimport { Toast }            from 'primereact/toast';\r\nimport { Button }           from 'primereact/button';\r\nimport { Toolbar }          from 'primereact/toolbar';\r\nimport { Dialog }           from 'primereact/dialog';\r\nimport { InputText }        from 'primereact/inputtext';\r\nimport { InputTextarea }    from 'primereact/inputtextarea';\r\nimport { Password }         from 'primereact/password';\r\nimport { ColumnGroup }      from 'primereact/columngroup';\r\nimport { Row }              from 'primereact/row';\r\nimport { Dropdown }         from 'primereact/dropdown';\r\nimport { useFormik }        from \"formik\";\r\n\r\nimport uniqid               from 'uniqid';\r\n\r\nimport { getConvocatorias,getConvocatoriaID,createConvocatoria,updateConvocatoriaID,deleteConvocatoriaID} from '../service/apiConvocatoria';\r\nimport { getUsers } from '../service/apiUser';\r\n\r\nexport const Convocatoria = (props) => {\r\n\r\n    let emptyConvocatoria = {\r\n        id:        null,\r\n        titulo:    '',\r\n        codigo:    '',\r\n        semestre:  '',\r\n        link:      '',\r\n        user:      ''\r\n    };\r\n\r\n    const semestres = [\r\n        { name: \"I-2020\" },\r\n        { name: \"II-2020\"},\r\n        { name: \"I-2021\"},\r\n        { name: \"II-2021\"},\r\n        { name: \"I-2022\"},\r\n        { name: \"II-2022\"}\r\n    ];\r\n\r\n    const [convocatorias, setConvocatorias]                          = useState(null);\r\n    const [users, setUsers]                                          = useState(null);\r\n    const [convocatoriaDialog, setConvocatoriaDialog]                = useState(false);\r\n    const [deleteConvocatoriaDialog, setDeleteConvocatoriaDialog]    = useState(false);\r\n\r\n    const [convocatoria, setConvocatoria]                            = useState(emptyConvocatoria);\r\n    const [selectedConvocatorias, setSelectedConvocatorias]          = useState(null);\r\n    const [submitted, setSubmitted]                                  = useState(false);\r\n    const toast                                                      = useRef(null);\r\n    const dt                                                         = useRef(null);\r\n    const [stateConvocatoria,setStateConvocatoria]                   = useState(false);\r\n    const [convocatoriaUpdate, setConvocatoriaUpdate]                = useState(\"\");\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            titulo:    '',\r\n            codigo:    '',\r\n            semestre:  '',\r\n            link:      '',\r\n            user:      ''\r\n        },\r\n         validate: (data) => {\r\n            let errors = {};\r\n\r\n            if (!data.titulo) {\r\n                errors.titulo = \"Se requiero el titulo\";\r\n            } else if (data.titulo.length < 2) {\r\n                errors.titulo = \"Como minimo 2 caracteres\";\r\n            } else if (data.titulo.length > 30) {\r\n                errors.titulo = \"Como maximo 30 caracteres\";\r\n            } else if (!/^^[a-zA-Z0-9\\s]+$/i.test(data.titulo)) {\r\n                errors.titulo = \"No se permiten numero o caracteres especiales\";\r\n            }\r\n\r\n            if (!data.codigo) {\r\n                errors.codigo = \"Se requiero el codigo\";\r\n            } else if (data.codigo.length < 2) {\r\n                errors.codigo = \"Como minimo 2 caracteres\";\r\n            } else if (data.codigo.length > 30) {\r\n                errors.codigo = \"Como maximo 30 caracteres\";\r\n            }else if (!/^^[a-zA-Z0-9\\s-]+$/i.test(data.codigo)) {\r\n                errors.codigo = \"No se permiten numero o caracteres especiales\";\r\n            }\r\n\r\n            \r\n            if (!data.semestre) {\r\n                errors.semestre = \"Se requiero el semestre\";\r\n            } else if (data.semestre.length < 2) {\r\n                errors.semestre = \"Como minimo 2 caracteres\";\r\n            } else if (data.semestre.length > 30) {\r\n                errors.semestre = \"Como maximo 30 caracteres\";\r\n            }else if (!/^^[a-zA-Z0-9\\s-]+$/i.test(data.semestre)) {\r\n                errors.semestre = \"No se permiten numero o caracteres especiales\";\r\n            }\r\n\r\n            if (!data.link) {\r\n                errors.link = \"Se requiero el link\";\r\n            }else if (data.link.length > 500) {\r\n                errors.link = \"Como maximo 500 caracteres\";\r\n            }\r\n            //else if (!/^((http|https):\\/\\/)?(www.)?(?!.*(http|https|www.))[a-zA-Z0-9_-]+(\\.[a-zA-Z]+)+(\\/)?.([\\w\\?[a-zA-Z-_%\\/@?]+)*([^\\/\\w\\?[a-zA-Z0-9_-]+=\\w+(&[a-zA-Z0-9_]+=\\w+)*)?$/.test(data.link)) {\r\n            //    errors.link = \"El link no es valido\";\r\n            //}\r\n\r\n            if (!data.user) {\r\n                errors.user = \"Se requiero el user\";\r\n            } else if (data.user.length < 2) {\r\n                errors.user = \"Como minimo 2 caracteres\";\r\n            } else if (data.user.length > 30) {\r\n                errors.user = \"Como maximo 30 caracteres\";\r\n            }else if (!/^^[a-zA-Z0-9\\s-]+$/i.test(data.user)) {\r\n                errors.user = \"No se permiten numero o caracteres especiales\";\r\n            }\r\n\r\n            return errors;\r\n        },\r\n\r\n        onSubmit: (data) => {\r\n            if(submitted === true){\r\n                let _convocatorias = [...convocatorias];\r\n                let _convocatoria  = {...convocatoria };\r\n                _convocatoria['titulo']     = data.titulo;\r\n                _convocatoria['codigo']     = data.codigo;\r\n                _convocatoria['semestre']   = data.semestre;\r\n                _convocatoria['link']       = data.link;\r\n                _convocatoria['user']       = data.user;\r\n\r\n                if (_convocatoria.titulo.trim()) {\r\n                    if (convocatoria.id) {\r\n\r\n                        setConvocatoria({ ...convocatoria });\r\n                        const index = findIndexById(convocatoria.id);\r\n                        _convocatorias[index] = _convocatoria;\r\n                        updateConvocatoriaID({titulo:`${_convocatoria.titulo}`,codigo:`${_convocatoria.codigo}`,semestre:`${_convocatoria.semestre}`,link:`${_convocatoria.link}`,user:`${_convocatoria.user}`},convocatoria.id);\r\n                        toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Convocatoria Actualizada', life: 3000 });\r\n                    }\r\n                    else {\r\n\r\n                        _convocatoria.id = uniqid(\"conv-\");\r\n                        _convocatorias.push(_convocatoria);\r\n                        console.log({id:`${_convocatoria.id}`,titulo:`${_convocatoria.titulo}`,codigo:`${_convocatoria.codigo}`,semestre:`${_convocatoria.semestre}`,link:`${_convocatoria.link}`,user:`${_convocatoria.user}`});\r\n                        createConvocatoria({id:`${_convocatoria.id}`,titulo:`${_convocatoria.titulo}`,codigo:`${_convocatoria.codigo}`,semestre:`${_convocatoria.semestre}`,link:`${_convocatoria.link}`,user:`${_convocatoria.user}`});\r\n                        toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Convocatoria Creada', life: 3000 });\r\n                    }\r\n                }\r\n                setConvocatorias(_convocatorias);\r\n                setConvocatoriaDialog(false);\r\n                setConvocatoria(emptyConvocatoria);\r\n                formik.resetForm();\r\n        }\r\n            \r\n        },\r\n      });\r\n\r\n    const isFormFieldValid = (name) => !!(formik.touched[name] && formik.errors[name]);\r\n    const getFormErrorMessage = (name) => {\r\n        return isFormFieldValid(name) && <small className=\"ml-1 p-error\" style={{'color': '#ff0000'}}>{formik.errors[name]}</small>;\r\n    };\r\n\r\n    useEffect(()=>{\r\n        fetchConvocatorias();\r\n    },[])\r\n\r\n    const fetchConvocatorias = () =>{\r\n        getConvocatorias().then(json =>{\r\n            if(json.error){\r\n                console.log(\"Error\");\r\n            }else{\r\n                console.log(\"---------Convocatorias insertados-----------\");\r\n                setConvocatorias(json.data);\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        fetchUsers();\r\n    },[])\r\n\r\n    const fetchUsers = () =>{\r\n        getUsers().then(json =>{\r\n            if(json.error){\r\n                console.log(\"Error\");\r\n            }else{\r\n                console.log(\"---------Users insertados-----------\");\r\n                setUsers(json.data);\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(stateConvocatoria); //esta línea se ejecuta la primera vez que se renderiza y en todos los cambios que location tenga, aqui siempre tendrás el ultimo valor de location\r\n     }, [stateConvocatoria])\r\n\r\n    const openNew = () => {\r\n        setConvocatoria(emptyConvocatoria);\r\n        formik.resetForm();\r\n        setSubmitted(false);\r\n        setStateConvocatoria(false); \r\n        setConvocatoriaDialog(true);    \r\n    }\r\n\r\n    const hideDialog = () => {\r\n        setSubmitted(false);\r\n        setConvocatoriaDialog(false);\r\n    }\r\n\r\n    const showDialog = () => {\r\n        setSubmitted(true);\r\n        formik.handleSubmit();\r\n    }\r\n\r\n    const hideDeleteConvocatoriaDialog = () => {\r\n        setDeleteConvocatoriaDialog(false);\r\n    }\r\n\r\n    const editConvocatoria = (convocatoria) => {\r\n        setConvocatoria({ ...convocatoria });\r\n        setSubmitted(true);\r\n        \r\n        formik.setValues(\r\n        {\r\n            titulo:    `${convocatoria.titulo}`,\r\n            codigo:    `${convocatoria.codigo}`,\r\n            semestre:  `${convocatoria.semestre}`,\r\n            link:      `${convocatoria.link}`,\r\n            user:      `${convocatoria.user}`\r\n        });\r\n        //setConvocatoriaUpdate(`${user.email}`);\r\n        setStateConvocatoria(true);\r\n        setConvocatoriaDialog(true);\r\n    }\r\n\r\n    const confirmDeleteConvocatoria = (convocatoria) => {\r\n        setConvocatoria(convocatoria);\r\n        setDeleteConvocatoriaDialog(true);\r\n    }\r\n\r\n    const deleteConvocatoria = () => {\r\n        let _convocatorias = convocatorias.filter(val => val.id !== convocatoria.id);\r\n        setConvocatorias(_convocatorias);\r\n        setDeleteConvocatoriaDialog(false);\r\n\r\n        if (convocatoria.titulo.trim()) {\r\n            if (convocatoria.id) {\r\n                deleteConvocatoriaID(convocatoria.id);\r\n            }\r\n        }\r\n        setConvocatoria(emptyConvocatoria);\r\n        toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Convocatoria Eliminada', life: 3000 });\r\n    }\r\n\r\n    const findIndexById = (id) => {\r\n        let index = -1;\r\n        for (let i = 0; i < convocatorias.length; i++) {\r\n            if (convocatorias[i].id === id) {\r\n\r\n                index = i;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return index;\r\n    }\r\n\r\n    const idBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">id</span>\r\n                {rowData.id}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const tituloBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Titulo</span>\r\n                {rowData.titulo}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const codigoBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Codigo</span>\r\n                {rowData.codigo}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const semestreBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Semestre</span>\r\n                {rowData.semestre}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const linkBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Link</span>\r\n                {rowData.link}\r\n                \r\n            </>\r\n        );\r\n    }\r\n\r\n    \r\n\r\n\r\n    const userBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">User</span>\r\n                {rowData.user}\r\n               \r\n\r\n            </>\r\n        );\r\n    }\r\n\r\n    const leftToolbarTemplate = () => {\r\n        return (\r\n            <React.Fragment>\r\n                <Button style={{'background': '#13af4e'}} label=\"Nuevo\" icon=\"pi pi-plus\" className=\"p-button-success p-mr-2\" onClick={openNew} />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    const actionBodyTemplate = (rowData) => {\r\n        return (\r\n            <div className=\"actions\">\r\n                <Button icon=\"pi pi-pencil\" style={{'background': '#13af4e'}} className=\"p-button-rounded p-button-success p-mr-2\"   onClick={() => editConvocatoria(rowData)} />\r\n                <Button icon=\"pi pi-trash\"  style={{'background': '#eee500'}} className=\"p-button-rounded p-button-warning\"          onClick={() => confirmDeleteConvocatoria(rowData)} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const deleteConvocatoriaDialogFooter = (\r\n        <>\r\n            <Button label=\"No\" icon=\"pi pi-times\" style={{'background': '#d13639','color':'#ffffff'}} className=\"p-button-text\" onClick={hideDeleteConvocatoriaDialog} />\r\n            <Button label=\"Si\" icon=\"pi pi-check\" style={props.layoutColorMode === 'light' ? {'color':'#13af4e','border-color':'#13af4e'} : {'color':'#13af4e','border-color':'#13af4e'}} className=\"p-button-text\" onClick={deleteConvocatoria} />\r\n        </>\r\n    );\r\n\r\n\r\n    let headerGroup = <ColumnGroup>\r\n                        <Row>\r\n                            <Column header=\"ID\"                 style={{ 'background-color': '#13af4e', width:'20%'}} />\r\n                            <Column header=\"TITULO\"             style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                            <Column header=\"CODIGO\"             style={{ 'background-color': '#13af4e', width:'20%'}} />\r\n                            <Column header=\"SEMESTRE\"           style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                            <Column header=\"LINK\"               style={{ 'background-color': '#13af4e', width:'40%'}} />\r\n                            <Column header=\"USER\"               style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                            <Column header=\"Editar/Eliminar\"    style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                        </Row>\r\n                    </ColumnGroup>;\r\n\r\n\r\n    const headerDialog =()=>{\r\n        return (stateConvocatoria)?\"Actualizando convocatoria\":\"Añadir convocatoria\"\r\n    }\r\n\r\n    return (\r\n        <div className=\"p-grid crud-demo\">\r\n            <div className=\"p-col-12\">\r\n                <div className=\"card\">\r\n                \r\n                    <Toast ref={toast} />\r\n                    <Toolbar className=\"\" left={leftToolbarTemplate}></Toolbar>\r\n\r\n                    <DataTable headerColumnGroup={headerGroup} ref={dt} value={convocatorias} selection={selectedConvocatorias}  onSelectionChange={(e) => setSelectedConvocatorias(e.value)}\r\n                        dataKey=\"id\" paginator rows={10} rowsPerPageOptions={[5, 10, 25]} className=\"datatable-responsive p-datatable-sm col-12\"\r\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\r\n                        currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} users\" resizableColumns columnResizeMode=\"fit\" showGridlines>\r\n                    \r\n                        <Column style={{width:'20%'}} field=\"id\"       header=\"ID\"       sortable body={idBodyTemplate}></Column>\r\n                        <Column style={{width:'20%'}} field=\"titulo\"   header=\"TITULO\"   sortable body={tituloBodyTemplate}></Column>\r\n                        <Column style={{width:'20%'}} field=\"codigo\"   header=\"CODIGO\"   sortable body={codigoBodyTemplate}></Column>\r\n                        <Column style={{width:'20%'}} field=\"semestre\" header=\"SEMESTRE\" sortable body={semestreBodyTemplate}></Column>\r\n                        <Column style={{width:'40%'}} field=\"link\"     header=\"LINK\"     sortable body={linkBodyTemplate}></Column>\r\n                        <Column style={{width:'20%'}} field=\"user\"     header=\"USER\"     sortable body={userBodyTemplate}></Column>\r\n                        <Column style={{width:'20%'}} body={actionBodyTemplate}></Column>\r\n\r\n                    </DataTable>\r\n\r\n\r\n                    <Dialog visible={convocatoriaDialog} style={{ width: '450px' }} header={headerDialog} modal className=\"p-fluid\" onHide={hideDialog}>\r\n                        <form onSubmit={formik.handleSubmit}>\r\n                            <div className=\"p-field mt-2\" >\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <img   src={props.layoutColorMode === 'light' ? 'assets/layout/images/title.png' : 'assets/layout/images/title-dark.png'} style={{'height': '1.2em','width':'1.2em',}}/>  \r\n                                        </span>\r\n                                        <InputText id=\"titulo\" name='titulo' placeholder=\"Titulo\" value={formik.values.titulo} onChange={formik.handleChange} autoFocus/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('titulo')}\r\n\r\n                            <div className=\"p-field mt-2\">\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <img   src={props.layoutColorMode === 'light' ? 'assets/layout/images/code.png' : 'assets/layout/images/code-dark.png'} style={{'height': '1.2em','width':'1.2em',}}/>  \r\n                                        </span>\r\n                                        <InputText id=\"codigo\" name='codigo' placeholder=\"Codigo\" value={formik.values.codigo} onChange={formik.handleChange}/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('codigo')}\r\n\r\n                            \r\n                            <div className=\"p-field mt-2\">\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <i className=\"pi pi-calendar\"></i>\r\n                                        </span>\r\n                                        <Dropdown id=\"semestre\" name=\"semestre\" placeholder=\"Seleccione el semestre\" value={formik.values.semestre} onChange={formik.handleChange} options={semestres} optionLabel=\"name\"  optionValue=\"name\"/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('semestre')}\r\n\r\n                            <div className=\"p-field mt-2\">\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <i className=\"pi pi-link\"></i>\r\n                                        </span>\r\n                                        <InputTextarea id=\"link\" name='link' placeholder=\"Link\"  value={formik.values.link} onChange={formik.handleChange}/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('link')}\r\n\r\n                            <div className=\"p-field mt-2\">\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <i className=\"pi pi-user\"></i>\r\n                                        </span>\r\n                                        <Dropdown id=\"user\" name=\"user\" placeholder=\"Seleccione un usuario\" value={formik.values.user} onChange={formik.handleChange} options={users} optionLabel=\"nombre\"  optionValue=\"id\"/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('user')}\r\n\r\n\r\n                            <div className='mt-2'>\r\n                                <div className=\"flex justify-content-center flex-wrap\">\r\n                                    <div className=\"flex align-items-center justify-content-center  m-2\">\r\n                                        <Button label=\"Cancelar\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDialog} style={props.layoutColorMode === 'light' ? {'color':'#d13639','border-color':'#d13639'} : {'color':'#d13639','border-color':'#d13639'}}/>\r\n                                    </div>\r\n                                    <div className=\"flex align-items-center justify-content-center  m-2\">\r\n                                        <Button label=\"Guardar\"  icon=\"pi pi-check\" type=\"submit\" className=\"p-button-text\" onClick={showDialog} style={{'background': '#13af4e','color':'#ffffff'}}/>  \r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </Dialog>\r\n\r\n\r\n                    <Dialog className=\"mt-2\" visible={deleteConvocatoriaDialog} style={{ width: '450px' }} header=\"Confirm\" modal footer={deleteConvocatoriaDialogFooter} onHide={hideDeleteConvocatoriaDialog}>\r\n                        <div className=\"confirmation-content\">\r\n                            <i className=\"pi pi-exclamation-triangle p-mr-3\" style={{ fontSize: '2rem' }} />\r\n                            {convocatoria && <span>¿Estás segura de que quieres eliminar? <b>{convocatoria.titulo}</b> <b>{convocatoria.semestre}</b>?</span>}\r\n                        </div>\r\n                    </Dialog>\r\n    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import axios from 'axios';\r\n\r\n export const getConvocatorias = () =>{\r\n     return axios.get('https://magic-tech-backend.herokuapp.com/api/getConvocatorias');\r\n }\r\n\r\n export const getConvocatoriaID =(id) =>{\r\n     return axios.get(`https://magic-tech-backend.herokuapp.com/api/getConvocatoriaId/${id}`);\r\n }\r\n\r\n\r\n\r\n export const createConvocatoria=(data)=>{\r\n    return axios.post('https://magic-tech-backend.herokuapp.com/api/createConvocatoria', \r\n      {\r\n         id:        `${data.id}`,\r\n         titulo:    `${data.titulo}`,\r\n         codigo:    `${data.codigo}`,\r\n         semestre:  `${data.semestre}`,\r\n         link:      `${data.link}`,\r\n         user:      `${data.user}`     \r\n      }\r\n      )\r\n      .then(function (response) {\r\n        console.log(response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n }\r\n\r\nexport const updateConvocatoriaID =(data,id) =>{\r\n    return axios.put(`https://magic-tech-backend.herokuapp.com/api/updateConvocatoria/${id}`, \r\n    {\r\n        titulo:    `${data.titulo}`,\r\n        codigo:    `${data.codigo}`,\r\n        semestre:  `${data.semestre}`,\r\n        link:      `${data.link}`,\r\n        user:      `${data.user}`\r\n    }\r\n    )\r\n    .then(function (response) {\r\n      console.log(response);\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error);\r\n    });\r\n}\r\n\r\nexport const deleteConvocatoriaID =(id) =>{\r\n    return axios.delete(`https://magic-tech-backend.herokuapp.com/api/deleteConvocatoriaId/${id}`);\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport classNames           from 'classnames';\r\nimport { DataTable }        from 'primereact/datatable';\r\nimport { Column }           from 'primereact/column';\r\nimport { Toast }            from 'primereact/toast';\r\nimport { Button }           from 'primereact/button';\r\nimport { Toolbar }          from 'primereact/toolbar';\r\nimport { Dialog }           from 'primereact/dialog';\r\nimport { InputText }        from 'primereact/inputtext';\r\nimport { InputTextarea }    from 'primereact/inputtextarea';\r\nimport { Password }         from 'primereact/password';\r\nimport { ColumnGroup }      from 'primereact/columngroup';\r\nimport { Row }              from 'primereact/row';\r\nimport { Dropdown }         from 'primereact/dropdown';\r\nimport { useFormik }        from \"formik\";\r\n\r\nimport uniqid               from 'uniqid';\r\n\r\nimport { getPliegos,createPliego,updatePliegoID,deletePliegoID} from '../service/apiPliego';\r\nimport { getUsers } from '../service/apiUser';\r\n\r\nexport const PliegoEspecificacion = (props) => {\r\n\r\n    let emptyPliego = {\r\n        id:        null,\r\n        titulo:    '',\r\n        codigo:    '',\r\n        semestre:  '',\r\n        link:      '',\r\n        user:      ''\r\n    };\r\n\r\n    const semestres = [\r\n        { name: \"I-2020\" },\r\n        { name: \"II-2020\"},\r\n        { name: \"I-2021\"},\r\n        { name: \"II-2021\"},\r\n        { name: \"I-2022\"},\r\n        { name: \"II-2022\"}\r\n    ];\r\n\r\n    const [pliegos, setPliegos]                          = useState(null);\r\n    const [users, setUsers]                              = useState(null);\r\n    const [pliegoDialog, setPliegoDialog]                = useState(false);\r\n    const [deletePliegoDialog, setDeletePliegoDialog]    = useState(false);\r\n\r\n    const [pliego, setPliego]                            = useState(emptyPliego);\r\n    const [selectedPliegos, setSelectedPliegos]          = useState(null);\r\n    const [submitted, setSubmitted]                      = useState(false);\r\n    const toast                                          = useRef(null);\r\n    const dt                                             = useRef(null);\r\n    const [statePliego,setStatePliego]                   = useState(false);\r\n    const [pliegoUpdate, setPliegoUpdate]                = useState(\"\");\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            titulo:    '',\r\n            codigo:    '',\r\n            semestre:  '',\r\n            link:      '',\r\n            user:      ''\r\n        },\r\n         validate: (data) => {\r\n            let errors = {};\r\n\r\n            if (!data.titulo) {\r\n                errors.titulo = \"Se requiero el titulo\";\r\n            } else if (data.titulo.length < 2) {\r\n                errors.titulo = \"Como minimo 2 caracteres\";\r\n            } else if (data.titulo.length > 30) {\r\n                errors.titulo = \"Como maximo 30 caracteres\";\r\n            } else if (!/^^[a-zA-Z0-9\\s]+$/i.test(data.titulo)) {\r\n                errors.titulo = \"No se permiten numero o caracteres especiales\";\r\n            }\r\n\r\n            if (!data.codigo) {\r\n                errors.codigo = \"Se requiero el codigo\";\r\n            } else if (data.codigo.length < 2) {\r\n                errors.codigo = \"Como minimo 2 caracteres\";\r\n            } else if (data.codigo.length > 30) {\r\n                errors.codigo = \"Como maximo 30 caracteres\";\r\n            }else if (!/^^[a-zA-Z0-9\\s-]+$/i.test(data.codigo)) {\r\n                errors.codigo = \"No se permiten numero o caracteres especiales\";\r\n            }\r\n\r\n            \r\n            if (!data.semestre) {\r\n                errors.semestre = \"Se requiero el semestre\";\r\n            } else if (data.semestre.length < 2) {\r\n                errors.semestre = \"Como minimo 2 caracteres\";\r\n            } else if (data.semestre.length > 30) {\r\n                errors.semestre = \"Como maximo 30 caracteres\";\r\n            }else if (!/^^[a-zA-Z0-9\\s-]+$/i.test(data.semestre)) {\r\n                errors.semestre = \"No se permiten numero o caracteres especiales\";\r\n            }\r\n\r\n            if (!data.link) {\r\n                errors.link = \"Se requiero el link\";\r\n            }else if (data.link.length > 500) {\r\n                errors.link = \"Como maximo 500 caracteres\";\r\n            }\r\n\r\n            if (!data.user) {\r\n                errors.user = \"Se requiero el user\";\r\n            } else if (data.user.length < 2) {\r\n                errors.user = \"Como minimo 2 caracteres\";\r\n            } else if (data.user.length > 30) {\r\n                errors.user = \"Como maximo 30 caracteres\";\r\n            }else if (!/^^[a-zA-Z0-9\\s-]+$/i.test(data.user)) {\r\n                errors.user = \"No se permiten numero o caracteres especiales\";\r\n            }\r\n\r\n            return errors;\r\n        },\r\n\r\n        onSubmit: (data) => {\r\n            if(submitted === true){\r\n                let _pliegos = [...pliegos];\r\n                let _pliego  = {...pliego };\r\n                _pliego['titulo']     = data.titulo;\r\n                _pliego['codigo']     = data.codigo;\r\n                _pliego['semestre']   = data.semestre;\r\n                _pliego['link']       = data.link;\r\n                _pliego['user']       = data.user;\r\n\r\n                if (_pliego.titulo.trim()) {\r\n                    if (pliego.id) {\r\n\r\n                        setPliego({ ...pliego });\r\n                        const index = findIndexById(pliego.id);\r\n                        _pliegos[index] = _pliego;\r\n                        updatePliegoID({titulo:`${_pliego.titulo}`,codigo:`${_pliego.codigo}`,semestre:`${_pliego.semestre}`,link:`${_pliego.link}`,user:`${_pliego.user}`},pliego.id);\r\n                        toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Pliego de especificaciones Actualizada', life: 3000 });\r\n                    }\r\n                    else {\r\n\r\n                        _pliego.id = uniqid(\"plieg-\");\r\n                        _pliegos.push(_pliego);\r\n                        createPliego({id:`${_pliego.id}`,titulo:`${_pliego.titulo}`,codigo:`${_pliego.codigo}`,semestre:`${_pliego.semestre}`,link:`${_pliego.link}`,user:`${_pliego.user}`});\r\n                        toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Pliego de especificaciones Creada', life: 3000 });\r\n                    }\r\n                }\r\n                setPliegos(_pliegos);\r\n                setPliegoDialog(false);\r\n                setPliego(emptyPliego);\r\n                formik.resetForm();\r\n        }\r\n            \r\n        },\r\n      });\r\n\r\n    const isFormFieldValid = (name) => !!(formik.touched[name] && formik.errors[name]);\r\n    const getFormErrorMessage = (name) => {\r\n        return isFormFieldValid(name) && <small className=\"ml-1 p-error\" style={{'color': '#ff0000'}}>{formik.errors[name]}</small>;\r\n    };\r\n\r\n    useEffect(()=>{\r\n        fetchPliegos();\r\n    },[])\r\n\r\n    const fetchPliegos = () =>{\r\n        getPliegos().then(json =>{\r\n            if(json.error){\r\n                console.log(\"Error\");\r\n            }else{\r\n                console.log(\"---------Pliego de espeficiaciones insertados-----------\");\r\n                setPliegos(json.data);\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        fetchUsers();\r\n    },[])\r\n\r\n    const fetchUsers = () =>{\r\n        getUsers().then(json =>{\r\n            if(json.error){\r\n                console.log(\"Error\");\r\n            }else{\r\n                console.log(\"---------Users insertados-----------\");\r\n                setUsers(json.data);\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(statePliego); //esta línea se ejecuta la primera vez que se renderiza y en todos los cambios que location tenga, aqui siempre tendrás el ultimo valor de location\r\n     }, [statePliego])\r\n\r\n    const openNew = () => {\r\n        setPliego(emptyPliego);\r\n        formik.resetForm();\r\n        setSubmitted(false);\r\n        setStatePliego(false); \r\n        setPliegoDialog(true);    \r\n    }\r\n\r\n    const hideDialog = () => {\r\n        setSubmitted(false);\r\n        setPliegoDialog(false);\r\n    }\r\n\r\n    const showDialog = () => {\r\n        setSubmitted(true);\r\n        formik.handleSubmit();\r\n    }\r\n\r\n    const hideDeletePliegoDialog = () => {\r\n        setDeletePliegoDialog(false);\r\n    }\r\n\r\n    const editPliego = (pliego) => {\r\n        setPliego({ ...pliego });\r\n        setSubmitted(true);\r\n        \r\n        formik.setValues(\r\n        {\r\n            titulo:    `${pliego.titulo}`,\r\n            codigo:    `${pliego.codigo}`,\r\n            semestre:  `${pliego.semestre}`,\r\n            link:      `${pliego.link}`,\r\n            user:      `${pliego.user}`\r\n        });\r\n        //setConvocatoriaUpdate(`${user.email}`);\r\n        setStatePliego(true);\r\n        setPliegoDialog(true);\r\n    }\r\n\r\n    const confirmDeletePliego = (pliego) => {\r\n        setPliego(pliego);\r\n        setDeletePliegoDialog(true);\r\n    }\r\n\r\n    const deletePliego = () => {\r\n        let _pliegos = pliegos.filter(val => val.id !== pliego.id);\r\n        setPliegos(_pliegos);\r\n        setDeletePliegoDialog(false);\r\n\r\n        if (pliego.titulo.trim()) {\r\n            if (pliego.id) {\r\n                deletePliegoID(pliego.id);\r\n            }\r\n        }\r\n        setPliego(emptyPliego);\r\n        toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Pliego de espeficiacion Eliminada', life: 3000 });\r\n    }\r\n\r\n    const findIndexById = (id) => {\r\n        let index = -1;\r\n        for (let i = 0; i < pliegos.length; i++) {\r\n            if (pliegos[i].id === id) {\r\n\r\n                index = i;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return index;\r\n    }\r\n\r\n    const idBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">id</span>\r\n                {rowData.id}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const tituloBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Titulo</span>\r\n                {rowData.titulo}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const codigoBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Codigo</span>\r\n                {rowData.codigo}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const semestreBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Semestre</span>\r\n                {rowData.semestre}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const linkBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Link</span>\r\n                {rowData.link}\r\n                \r\n            </>\r\n        );\r\n    }\r\n\r\n    \r\n\r\n\r\n    const userBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">User</span>\r\n                {rowData.user}\r\n               \r\n\r\n            </>\r\n        );\r\n    }\r\n\r\n    const leftToolbarTemplate = () => {\r\n        return (\r\n            <React.Fragment>\r\n                <Button style={{'background': '#13af4e'}} label=\"Nuevo\" icon=\"pi pi-plus\" className=\"p-button-success p-mr-2\" onClick={openNew} />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    const actionBodyTemplate = (rowData) => {\r\n        return (\r\n            <div className=\"actions\">\r\n                <Button icon=\"pi pi-pencil\" style={{'background': '#13af4e'}} className=\"p-button-rounded p-button-success p-mr-2\"   onClick={() => editPliego(rowData)} />\r\n                <Button icon=\"pi pi-trash\"  style={{'background': '#eee500'}} className=\"p-button-rounded p-button-warning\"          onClick={() => confirmDeletePliego(rowData)} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const deletePliegoDialogFooter = (\r\n        <>\r\n            <Button label=\"No\" icon=\"pi pi-times\" style={{'background': '#d13639','color':'#ffffff'}} className=\"p-button-text\" onClick={hideDeletePliegoDialog} />\r\n            <Button label=\"Si\" icon=\"pi pi-check\" style={props.layoutColorMode === 'light' ? {'color':'#13af4e','border-color':'#13af4e'} : {'color':'#13af4e','border-color':'#13af4e'}} className=\"p-button-text\" onClick={deletePliego} />\r\n        </>\r\n    );\r\n\r\n\r\n    let headerGroup = <ColumnGroup>\r\n                        <Row>\r\n                            <Column header=\"ID\"                 style={{ 'background-color': '#13af4e', width:'20%'}} />\r\n                            <Column header=\"TITULO\"             style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                            <Column header=\"CODIGO\"             style={{ 'background-color': '#13af4e', width:'20%'}} />\r\n                            <Column header=\"SEMESTRE\"           style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                            <Column header=\"LINK\"               style={{ 'background-color': '#13af4e', width:'40%'}} />\r\n                            <Column header=\"USER\"               style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                            <Column header=\"Editar/Eliminar\"    style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                        </Row>\r\n                    </ColumnGroup>;\r\n\r\n\r\n    const headerDialog =()=>{\r\n        return (statePliego)?\"Actualizando convocatoria\":\"Añadir convocatoria\"\r\n    }\r\n\r\n    return (\r\n        <div className=\"p-grid crud-demo\">\r\n            <div className=\"p-col-12\">\r\n                <div className=\"card\">\r\n                \r\n                    <Toast ref={toast} />\r\n                    <Toolbar className=\"\" left={leftToolbarTemplate}></Toolbar>\r\n\r\n                    <DataTable headerColumnGroup={headerGroup} ref={dt} value={pliegos} selection={selectedPliegos}  onSelectionChange={(e) => setSelectedPliegos(e.value)}\r\n                        dataKey=\"id\" paginator rows={10} rowsPerPageOptions={[5, 10, 25]} className=\"datatable-responsive p-datatable-sm col-12\"\r\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\r\n                        currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} users\" resizableColumns columnResizeMode=\"fit\" showGridlines>\r\n                    \r\n                        <Column style={{width:'20%'}} field=\"id\"       header=\"ID\"       sortable body={idBodyTemplate}></Column>\r\n                        <Column style={{width:'20%'}} field=\"titulo\"   header=\"TITULO\"   sortable body={tituloBodyTemplate}></Column>\r\n                        <Column style={{width:'20%'}} field=\"codigo\"   header=\"CODIGO\"   sortable body={codigoBodyTemplate}></Column>\r\n                        <Column style={{width:'20%'}} field=\"semestre\" header=\"SEMESTRE\" sortable body={semestreBodyTemplate}></Column>\r\n                        <Column style={{width:'40%'}} field=\"link\"     header=\"LINK\"     sortable body={linkBodyTemplate}></Column>\r\n                        <Column style={{width:'20%'}} field=\"user\"     header=\"USER\"     sortable body={userBodyTemplate}></Column>\r\n                        <Column style={{width:'20%'}} body={actionBodyTemplate}></Column>\r\n\r\n                    </DataTable>\r\n\r\n\r\n                    <Dialog visible={pliegoDialog} style={{ width: '450px' }} header={headerDialog} modal className=\"p-fluid\" onHide={hideDialog}>\r\n                        <form onSubmit={formik.handleSubmit}>\r\n                            <div className=\"p-field mt-2\" >\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <img   src={props.layoutColorMode === 'light' ? 'assets/layout/images/title.png' : 'assets/layout/images/title-dark.png'} style={{'height': '1.2em','width':'1.2em',}}/>  \r\n                                        </span>\r\n                                        <InputText id=\"titulo\" name='titulo' placeholder=\"Titulo\" value={formik.values.titulo} onChange={formik.handleChange} autoFocus/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('titulo')}\r\n\r\n                            <div className=\"p-field mt-2\">\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <img   src={props.layoutColorMode === 'light' ? 'assets/layout/images/code.png' : 'assets/layout/images/code-dark.png'} style={{'height': '1.2em','width':'1.2em',}}/>  \r\n                                        </span>\r\n                                        <InputText id=\"codigo\" name='codigo' placeholder=\"Codigo\" value={formik.values.codigo} onChange={formik.handleChange}/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('codigo')}\r\n\r\n                            \r\n                            <div className=\"p-field mt-2\">\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <i className=\"pi pi-calendar\"></i>\r\n                                        </span>\r\n                                        <Dropdown id=\"semestre\" name=\"semestre\" placeholder=\"Seleccione el semestre\" value={formik.values.semestre} onChange={formik.handleChange} options={semestres} optionLabel=\"name\"  optionValue=\"name\"/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('semestre')}\r\n\r\n                            <div className=\"p-field mt-2\">\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <i className=\"pi pi-link\"></i>\r\n                                        </span>\r\n                                        <InputTextarea id=\"link\" name='link' placeholder=\"Link\"  value={formik.values.link} onChange={formik.handleChange}/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('link')}\r\n\r\n                            <div className=\"p-field mt-2\">\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <i className=\"pi pi-user\"></i>\r\n                                        </span>\r\n                                        <Dropdown id=\"user\" name=\"user\" placeholder=\"Seleccione un usuario\" value={formik.values.user} onChange={formik.handleChange} options={users} optionLabel=\"nombre\"  optionValue=\"id\"/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('user')}\r\n\r\n\r\n                            <div className='mt-2'>\r\n                                <div className=\"flex justify-content-center flex-wrap\">\r\n                                    <div className=\"flex align-items-center justify-content-center  m-2\">\r\n                                        <Button label=\"Cancelar\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDialog} style={props.layoutColorMode === 'light' ? {'color':'#d13639','border-color':'#d13639'} : {'color':'#d13639','border-color':'#d13639'}}/>\r\n                                    </div>\r\n                                    <div className=\"flex align-items-center justify-content-center  m-2\">\r\n                                        <Button label=\"Guardar\"  icon=\"pi pi-check\" type=\"submit\" className=\"p-button-text\" onClick={showDialog} style={{'background': '#13af4e','color':'#ffffff'}}/>  \r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </Dialog>\r\n\r\n\r\n                    <Dialog className=\"mt-2\" visible={deletePliegoDialog} style={{ width: '450px' }} header=\"Confirm\" modal footer={deletePliegoDialogFooter} onHide={hideDeletePliegoDialog}>\r\n                        <div className=\"confirmation-content\">\r\n                            <i className=\"pi pi-exclamation-triangle p-mr-3\" style={{ fontSize: '2rem' }} />\r\n                            {pliego && <span>¿Estás segura de que quieres eliminar? <b>{pliego.titulo}</b> <b>{pliego.semestre}</b>?</span>}\r\n                        </div>\r\n                    </Dialog>\r\n    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import axios from 'axios';\r\n\r\n export const getPliegos = () =>{\r\n     return axios.get('https://magic-tech-backend.herokuapp.com/api/getPliegos');\r\n }\r\n\r\n export const getPliegoID =(id) =>{\r\n     return axios.get(`https://magic-tech-backend.herokuapp.com/api/getPliegoId/${id}`);\r\n }\r\n\r\n\r\n\r\n export const createPliego=(data)=>{\r\n    return axios.post('https://magic-tech-backend.herokuapp.com/api/createPliego', \r\n      {\r\n        id:        `${data.id}`,\r\n        titulo:    `${data.titulo}`,\r\n        codigo:    `${data.codigo}`,\r\n        semestre:  `${data.semestre}`,\r\n        link:      `${data.link}`,\r\n        user:      `${data.user}` \r\n      }\r\n      )\r\n      .then(function (response) {\r\n        console.log(response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n }\r\n\r\nexport const updatePliegoID =(data,id) =>{\r\n    return axios.put(`https://magic-tech-backend.herokuapp.com/api/updatePliego/${id}`, \r\n    {\r\n        titulo:    `${data.titulo}`,\r\n        codigo:    `${data.codigo}`,\r\n        semestre:  `${data.semestre}`,\r\n        link:      `${data.link}`,\r\n        user:      `${data.user}` \r\n    }\r\n    )\r\n    .then(function (response) {\r\n      console.log(response);\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error);\r\n    });\r\n}\r\n\r\nexport const deletePliegoID =(id) =>{\r\n    return axios.delete(`https://magic-tech-backend.herokuapp.com/api/deletePliegoId/${id}`);\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react';\r\n\r\n\r\nexport const Aviso = () => {\r\n\r\n    return (\r\n        <div className=\"grid\">\r\n             <h1>Estamos trabajando - En los Avisos</h1>\r\n        </div>\r\n    );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport classNames           from 'classnames';\r\nimport { Route}             from 'react-router-dom';\r\nimport { CSSTransition }    from 'react-transition-group';\r\n\r\nimport { AppTopbar }        from './AppTopbar';\r\nimport { AppFooter }        from './AppFooter';\r\nimport { AppMenu }          from './AppMenu';\r\nimport { AppConfig }        from './AppConfig';\r\n\r\nimport { Dashboard }             from './components/Dashboard';\r\nimport { Role }                  from './components/Role';\r\nimport { User }                  from './components/User';\r\nimport {Empresa}                 from './components/Empresa';\r\nimport { Convocatoria }          from './components/Convocatoria';\r\nimport { PliegoEspecificacion }  from './components/PliegoEspecificacion';\r\nimport { Aviso }                 from './components/Aviso';\r\n\r\n\r\nimport PrimeReact           from 'primereact/api';\r\n\r\nimport 'primereact/resources/primereact.min.css';\r\nimport 'primeicons/primeicons.css';\r\nimport 'primeflex/primeflex.css';\r\nimport 'prismjs/themes/prism-coy.css';\r\nimport './layout/flags/flags.css';\r\nimport './layout/layout.scss';\r\nimport './App.scss';\r\n\r\n\r\nconst App = () => {\r\n\r\n    const [layoutMode, setLayoutMode] = useState('static');\r\n    const [layoutColorMode, setLayoutColorMode] = useState('light')\r\n    const [inputStyle, setInputStyle] = useState('outlined');\r\n    const [ripple, setRipple] = useState(true);\r\n    const [staticMenuInactive, setStaticMenuInactive] = useState(false);\r\n    const [overlayMenuActive, setOverlayMenuActive] = useState(false);\r\n    const [mobileMenuActive, setMobileMenuActive] = useState(false);\r\n    const [mobileTopbarMenuActive, setMobileTopbarMenuActive] = useState(false);\r\n\r\n    PrimeReact.ripple = true;\r\n\r\n    let menuClick = false;\r\n    let mobileTopbarMenuClick = false;\r\n\r\n    useEffect(() => {\r\n        if (mobileMenuActive) {\r\n            addClass(document.body, \"body-overflow-hidden\");\r\n        } else {\r\n            removeClass(document.body, \"body-overflow-hidden\");\r\n        }\r\n    }, [mobileMenuActive]);\r\n\r\n    const onInputStyleChange = (inputStyle) => {\r\n        setInputStyle(inputStyle);\r\n    }\r\n\r\n    const onRipple = (e) => {\r\n        PrimeReact.ripple = e.value;\r\n        setRipple(e.value)\r\n    }\r\n\r\n    const onLayoutModeChange = (mode) => {\r\n        setLayoutMode(mode)\r\n    }\r\n\r\n    const onColorModeChange = (mode) => {\r\n        setLayoutColorMode(mode)\r\n    }\r\n\r\n    const onWrapperClick = (event) => {\r\n        if (!menuClick) {\r\n            setOverlayMenuActive(false);\r\n            setMobileMenuActive(false);\r\n        }\r\n\r\n        if (!mobileTopbarMenuClick) {\r\n            setMobileTopbarMenuActive(false);\r\n        }\r\n\r\n        mobileTopbarMenuClick = false;\r\n        menuClick = false;\r\n    }\r\n\r\n    const onToggleMenuClick = (event) => {\r\n        menuClick = true;\r\n\r\n        if (isDesktop()) {\r\n            if (layoutMode === 'overlay') {\r\n                if(mobileMenuActive === true) {\r\n                    setOverlayMenuActive(true);\r\n                }\r\n\r\n                setOverlayMenuActive((prevState) => !prevState);\r\n                setMobileMenuActive(false);\r\n            }\r\n            else if (layoutMode === 'static') {\r\n                setStaticMenuInactive((prevState) => !prevState);\r\n            }\r\n        }\r\n        else {\r\n            setMobileMenuActive((prevState) => !prevState);\r\n        }\r\n\r\n        event.preventDefault();\r\n    }\r\n\r\n    const onSidebarClick = () => {\r\n        menuClick = true;\r\n    }\r\n\r\n    const onMobileTopbarMenuClick = (event) => {\r\n        mobileTopbarMenuClick = true;\r\n\r\n        setMobileTopbarMenuActive((prevState) => !prevState);\r\n        event.preventDefault();\r\n    }\r\n\r\n    const onMobileSubTopbarMenuClick = (event) => {\r\n        mobileTopbarMenuClick = true;\r\n\r\n        event.preventDefault();\r\n    }\r\n\r\n    const onMenuItemClick = (event) => {\r\n        if (!event.item.items) {\r\n            setOverlayMenuActive(false);\r\n            setMobileMenuActive(false);\r\n        }\r\n    }\r\n    const isDesktop = () => {\r\n        return window.innerWidth >= 992;\r\n    }\r\n\r\n    const menu0 = [\r\n        {\r\n            label: 'Home',\r\n            items: [{\r\n                label: 'Tablero', icon: 'pi pi-fw pi-home', to: '/'\r\n            }]\r\n        }\r\n    ];\r\n\r\n    const menu = [\r\n        {\r\n            label: 'Home',\r\n            items: [{\r\n                label: 'Tablero', icon: 'pi pi-fw pi-home', to: '/'\r\n            }]\r\n        },\r\n        {\r\n            label: 'Gestion de Roles', icon: 'pi pi-fw pi-sitemap',\r\n            items: [\r\n                {label: 'Roles', icon: 'pi pi-fw pi-users', to: '/Role'},\r\n               \r\n            ]\r\n        },\r\n        {\r\n            label: 'Gestion de Usuario', icon: 'pi pi-fw pi-sitemap',\r\n            items: [\r\n                {label: 'Usuarios', icon: 'pi pi-fw pi-user', to: '/User'},\r\n            ]\r\n        },\r\n        {\r\n            label: 'Gestion de Empresa', icon: 'pi pi-fw pi-sitemap',\r\n            items: [\r\n                {label: 'Empresas', icon: 'pi pi-fw pi-user', to: '/Empresa'},\r\n            ]\r\n        },\r\n        {\r\n            label: 'Gestion Publicacion', icon: 'pi pi-fw pi-sitemap',\r\n            items: [\r\n                {label: 'Convocatoria', icon: 'pi pi-fw pi-id-card', to: '/Convocatoria'},\r\n                {label: 'Pliego de Especificaciones', icon: 'pi pi-fw pi-check-square', to: '/PliegoEspecificacion'}\r\n            ]\r\n        },\r\n        {\r\n            label: 'Gestion Avisos', icon: 'pi pi-fw pi-sitemap',\r\n            items: [\r\n                {label: 'Avisos', icon: 'pi pi-fw pi-id-card', to: '/Aviso'}\r\n            ]\r\n        },\r\n    ];\r\n\r\n    const addClass = (element, className) => {\r\n        if (element.classList)\r\n            element.classList.add(className);\r\n        else\r\n            element.className += ' ' + className;\r\n    }\r\n\r\n    const removeClass = (element, className) => {\r\n        if (element.classList)\r\n            element.classList.remove(className);\r\n        else\r\n            element.className = element.className.replace(new RegExp('(^|\\\\b)' + className.split(' ').join('|') + '(\\\\b|$)', 'gi'), ' ');\r\n    }\r\n\r\n    const wrapperClass = classNames('layout-wrapper', {\r\n        'layout-overlay': layoutMode === 'overlay',\r\n        'layout-static': layoutMode === 'static',\r\n        'layout-static-sidebar-inactive': staticMenuInactive && layoutMode === 'static',\r\n        'layout-overlay-sidebar-active': overlayMenuActive && layoutMode === 'overlay',\r\n        'layout-mobile-sidebar-active': mobileMenuActive,\r\n        'p-input-filled': inputStyle === 'filled',\r\n        'p-ripple-disabled': ripple === false,\r\n        'layout-theme-light': layoutColorMode === 'light'\r\n    });\r\n\r\n    return (\r\n        <div className={wrapperClass} onClick={onWrapperClick}>\r\n            <AppTopbar onToggleMenuClick={onToggleMenuClick} layoutColorMode={layoutColorMode}\r\n                       mobileTopbarMenuActive={mobileTopbarMenuActive} onMobileTopbarMenuClick={onMobileTopbarMenuClick} onMobileSubTopbarMenuClick={onMobileSubTopbarMenuClick}/>\r\n\r\n            <div className=\"layout-sidebar\" onClick={onSidebarClick}>\r\n                <AppMenu model={menu} onMenuItemClick={onMenuItemClick} layoutColorMode={layoutColorMode} />\r\n            </div>\r\n\r\n            <div className=\"layout-main-container\">\r\n                <div className=\"layout-main\">\r\n                    <Route path=\"/\"                      exact component={Dashboard}/>\r\n                    <Route path=\"/Role\"                  exact={true} render={props => <Role                 layoutColorMode={layoutColorMode} {...props} />}/>\r\n                    <Route path=\"/User\"                  exact={true} render={props => <User                 layoutColorMode={layoutColorMode} {...props} />}/>\r\n                    <Route path=\"/Empresa\"               exact={true} render={props => <Empresa              layoutColorMode={layoutColorMode} {...props} />}/>\r\n                    <Route path=\"/Convocatoria\"          exact={true} render={props => <Convocatoria         layoutColorMode={layoutColorMode} {...props} />}/>\r\n                    <Route path=\"/PliegoEspecificacion\"  exact={true} render={props => <PliegoEspecificacion layoutColorMode={layoutColorMode} {...props} />}/>\r\n                    <Route path=\"/Aviso\"                 component={Aviso}/>\r\n\r\n                </div>\r\n\r\n                <AppFooter layoutColorMode={layoutColorMode}/>\r\n            </div>\r\n\r\n            <AppConfig rippleEffect={ripple} onRippleEffect={onRipple} inputStyle={inputStyle} onInputStyleChange={onInputStyleChange}\r\n                       layoutMode={layoutMode} onLayoutModeChange={onLayoutModeChange} layoutColorMode={layoutColorMode} onColorModeChange={onColorModeChange} />\r\n\r\n            <CSSTransition classNames=\"layout-mask\" timeout={{ enter: 200, exit: 200 }} in={mobileMenuActive} unmountOnExit>\r\n                <div className=\"layout-mask p-component-overlay\"></div>\r\n            </CSSTransition>\r\n\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default App;\r\n","import { useEffect } from 'react';\r\nimport { useLocation, withRouter } from 'react-router-dom';\r\n\r\nconst ScrollToTop = (props) => {\r\n\r\n    let location = useLocation();\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0)\r\n    }, [location]);\r\n\r\n    return props.children;\r\n}\r\n\r\nexport default withRouter(ScrollToTop);\r\n","import 'react-app-polyfill/ie11';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n//import * as serviceWorker from './serviceWorker';\r\nimport { HashRouter } from 'react-router-dom'\r\nimport ScrollToTop from './ScrollToTop';\r\n\r\nReactDOM.render(\r\n    <HashRouter>\r\n        <ScrollToTop>\r\n            <App></App>\r\n        </ScrollToTop>\r\n    </HashRouter>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\n//serviceWorker.unregister();"],"sourceRoot":""}