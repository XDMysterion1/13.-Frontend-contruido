{"version":3,"sources":["AppTopbar.js","AppFooter.js","AppMenu.js","AppConfig.js","components/Dashboard.js","service/apiRole.js","components/Role.js","service/apiUser.js","components/User.js","service/apiEmpresa.js","components/Empresa.js","components/Convocatoria.js","service/apiConvocatoria.js","components/PliegoEspecificacion.js","service/apiPliego.js","components/Aviso.js","components/ListEmpresa.js","components/ListConvocatoria.js","components/ListPliego.js","service/Menu.js","App.js","ScrollToTop.js","components/LoginApp.js","components/Register.js","index.js"],"names":["AppTopbar","props","login","setLogin","useState","history","useHistory","cookies","Cookies","className","type","onClick","onToggleMenuClick","onMobileTopbarMenuClick","to","src","layoutColorMode","alt","style","set","classNames","mobileTopbarMenuActive","onMobileSubTopbarMenuClick","push","AppFooter","height","AppSubmenu","activeIndex","setActiveIndex","onMenuItemClick","event","item","index","disabled","preventDefault","command","originalEvent","renderLink","i","content","submenuIcon","items","badge","Fragment","icon","label","renderLinkContent","activeClassName","e","exact","target","href","url","map","active","styleClass","badgeStyleClass","root","key","CSSTransition","timeout","enter","exit","in","unmountOnExit","AppMenu","model","AppConfig","setActive","scale","setScale","scales","themeScheme","setThemeScheme","themeColor","setThemeColor","config","useRef","outsideClickListener","unbindOutsideClickListener","useCallback","current","document","removeEventListener","hideConfigurator","bindOutsideClickListener","isOutsideClicked","addEventListener","useEffect","isSameNode","contains","documentElement","fontSize","configClassName","theme","themeElement","getElementById","replaceLink","linkElement","callback","isIE","setAttribute","id","getAttribute","cloneLinkElement","cloneNode","parentNode","insertBefore","nextSibling","remove","test","window","navigator","userAgent","changeThemeScheme","onColorModeChange","value","changeThemeColor","color","ref","prevState","length","inputId","name","onChange","onLayoutModeChange","checked","layoutMode","htmlFor","width","borderRadius","Dashboard","getRoles","axios","get","Role","emptyRole","rol","roles","setRoles","roleDialog","setRoleDialog","deleteRoleDialog","setDeleteRoleDialog","globalFilter","setGlobalFilter","loading","setLoading","role","setRole","selectedRoles","setSelectedRoles","submitted","setSubmitted","toast","dt","stateRole","setStateRole","showMessage","setShowMessage","rolUpdate","setRolUpdate","formik","useFormik","initialValues","validate","data","errors","esRepetidoUpdate","esRepetido","onSubmit","_roles","_role","trim","console","log","findIndexById","put","then","response","catch","error","updateRolID","show","severity","summary","detail","life","uniqid","post","createRol","resetForm","undefined","find","toLowerCase","original","res","filter","fetchRoles","json","openNew","hideDialog","hideDeleteRoleDialog","deleteRoleDialogFooter","val","delete","showHeader","onInput","placeholder","headerGroup","header","colSpan","field","sortable","left","selection","onSelectionChange","dataKey","rowHover","paginator","rows","rowsPerPageOptions","paginatorTemplate","currentPageReportTemplate","resizableColumns","columnResizeMode","showGridlines","emptyMessage","headerColumnGroup","body","rowData","setValues","editRole","confirmDeleteRole","visible","modal","onHide","handleSubmit","values","handleChange","autoFocus","touched","isFormFieldValid","footer","getUsers","User","emptyUser","nombre","apellido","email","password","setRol","users","setUsers","userDialog","setUserDialog","deleteUserDialog","setDeleteUserDialog","user","setUser","selectedUsers","setSelectedUsers","stateUser","setStateUser","emailUpdate","setEmailUpdate","confirmPassword","_users","_user","updateUserID","createUser","getFormErrorMessage","fetchUsers","hideDeleteUserDialog","deleteUserDialogFooter","editUser","confirmDeleteUser","toggleMask","promptLabel","weakLabel","mediumLabel","strongLabel","options","optionLabel","optionValue","getEmpresas","Empresa","emptyEmpresa","nombreCorto","nombreLargo","tipoSociedad","direccion","informacion","empresas","setEmpresas","empresaDialog","setEmpresaDialog","deleteEmpresaDialog","setDeleteEmpresaDialog","empresa","setEmpresa","selectedEmpresas","setSelectedEmpresas","stateEmpresa","setStateEmpresa","empresaUpdate","setEmpresaUpdate","esRepetidoEmpresa","esRepetidoUpdateEmpresa","_empresas","_empresa","updateEmpresaID","createEmpresa","fetchEmpresas","hideDeleteEmpresaDialog","deleteEmpresaDialogFooter","editEmpresa","confirmDeleteEmpresa","tipo","tipoSociedadad","Convocatoria","emptyConvocatoria","titulo","codigo","semestre","link","estado","convocatorias","setConvocatorias","convocatoriaDialog","setConvocatoriaDialog","deleteConvocatoriaDialog","setDeleteConvocatoriaDialog","convocatoria","setConvocatoria","selectedConvocatorias","setSelectedConvocatorias","stateConvocatoria","setStateConvocatoria","convocatoriaUpdate","setConvocatoriaUpdate","_convocatorias","_convocatoria","updateConvocatoriaID","createConvocatoria","fetchConvocatorias","hideDeleteConvocatoriaDialog","deleteConvocatoriaDialogFooter","open","editConvocatoria","confirmDeleteConvocatoria","PliegoEspecificacion","emptyPliego","pliegos","setPliegos","pliegoDialog","setPliegoDialog","deletePliegoDialog","setDeletePliegoDialog","pliego","setPliego","selectedPliegos","setSelectedPliegos","statePliego","setStatePliego","pliegoUpdate","setPliegoUpdate","_pliegos","_pliego","updatePliegoID","createPliego","fetchPliegos","hideDeletePliegoDialog","deletePliegoDialogFooter","editPliego","confirmDeletePliego","Aviso","ListEmpresa","ListConvocatoria","ListPliego","MenuService","getMenusAdmin","getMenusUser","getMenusDocente","App","setLayoutMode","setLayoutColorMode","inputStyle","setInputStyle","ripple","setRipple","staticMenuInactive","setStaticMenuInactive","overlayMenuActive","setOverlayMenuActive","mobileMenuActive","setMobileMenuActive","setMobileTopbarMenuActive","menus","setMenus","menuService","PrimeReact","menuClick","mobileTopbarMenuClick","addClass","removeClass","isDesktop","innerWidth","element","classList","add","replace","RegExp","split","join","wrapperClass","path","component","render","rippleEffect","onRippleEffect","onInputStyleChange","mode","withRouter","location","useLocation","scrollTo","children","LoginApp","isPush","setIsPush","setTimeout","status","clearTimeout","shape","size","feedback","stroke","strokeWidth","fill","animationDuration","Register","idUser","ReactDOM"],"mappings":"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","file":"static/js/main.e1ff50da.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { Link }          from 'react-router-dom';\r\nimport classNames        from 'classnames';\r\nimport { useHistory }    from 'react-router-dom';\r\nimport Cookies           from 'universal-cookie';\r\n\r\nexport const AppTopbar = (props) => {\r\n    const [login, setLogin]    = useState(false);\r\n    const history              = useHistory();\r\n    const cookies              = new Cookies();\r\n    \r\n    \r\n    return (\r\n        <div className=\"layout-topbar\">\r\n\r\n            <button type=\"button\" className=\"p-link  layout-menu-button layout-topbar-button\" onClick={props.onToggleMenuClick}>\r\n                <i className=\"pi pi-bars\"/>\r\n            </button>\r\n        \r\n\r\n            <button type=\"button\" className=\"p-link layout-topbar-menu-button layout-topbar-button\" onClick={props.onMobileTopbarMenuClick}>\r\n                <i className=\"pi pi-ellipsis-v\" />\r\n            </button>\r\n\r\n            <Link to=\"/\" className=\"layout-topbar-logo ml-6 \">\r\n                <img src={props.layoutColorMode === 'light' ? 'assets/layout/images/MagicTech.png' : 'assets/layout/images/MagicTech.png'} alt=\"logo\" style={{'height': '1.8em','width':'2.0em',}}/>\r\n                {(props.layoutColorMode === 'light')?cookies.set('theme', 'light'):cookies.set('theme', 'dark')}\r\n                <span>MAGIC TECH</span>\r\n            </Link>\r\n                {(login)? \r\n                 ( \r\n                    <ul className={classNames(\"layout-topbar-menu lg:flex origin-top\", {'layout-topbar-menu-mobile-active': props.mobileTopbarMenuActive })}>\r\n                        <li>\r\n                            <button className=\"p-link layout-topbar-button\" onClick={props.onMobileSubTopbarMenuClick}>\r\n                                <i className=\"pi pi-calendar\"/>\r\n                                <span>Events</span>\r\n                            </button>\r\n                        </li>\r\n                        <li>\r\n                            <button className=\"p-link layout-topbar-button\" onClick={props.onMobileSubTopbarMenuClick}>\r\n                                <i className=\"pi pi-cog\"/>\r\n                                <span>Settings</span>\r\n                            </button>\r\n                        </li>\r\n                        <li>\r\n                            <button className=\"p-link layout-topbar-button\" onClick={props.onMobileSubTopbarMenuClick}>\r\n                                <i className=\"pi pi-user\"/>\r\n                                <span>Profile</span>\r\n                            </button>\r\n                        </li>\r\n                    </ul>\r\n                )\r\n                :\r\n                (\r\n                    <ul className={classNames(\"layout-topbar-menu lg:flex origin-top\", {'layout-topbar-menu-mobile-active': props.mobileTopbarMenuActive })}>\r\n                        <li>\r\n                            <button className=\"p-link layout-topbar-button\"  onClick={() => history.push('/Register')}>\r\n                                <i className=\"pi pi-user-plus\"/>\r\n                                <span>Registrarse</span>\r\n                            </button>\r\n                        </li>\r\n                        <li>\r\n                            <button className=\"p-link layout-topbar-button\"  onClick={() => history.push('/Login')}>\r\n                                <i className=\"pi pi-user\"/>\r\n                                <span>Iniciar Sesion</span>\r\n                            </button>\r\n                        </li>\r\n                    </ul>\r\n                ) \r\n                }\r\n\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\n\r\nexport const AppFooter = (props) => {\r\n\r\n    return (\r\n        <div className=\"layout-footer\">\r\n            <img src={props.layoutColorMode === 'light' ? 'assets/layout/images/MagicTech.png' : 'assets/layout/images/MagicTech.png'} alt=\"Logo\" height=\"20\" className=\"mr-2\" style={{'height': '2.7em','width':'3em',}}/>\r\n            por\r\n            <span className=\"font-medium ml-2\">MAGIC TECH</span>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport classNames from 'classnames';\r\nimport {Ripple} from \"primereact/ripple\";\r\n\r\nconst AppSubmenu = (props) => {\r\n\r\n    const [activeIndex, setActiveIndex] = useState(null)\r\n\r\n    const onMenuItemClick = (event, item, index) => {\r\n        //avoid processing disabled items\r\n        if (item.disabled) {\r\n            event.preventDefault();\r\n            return true;\r\n        }\r\n\r\n        //execute command\r\n        if (item.command) {\r\n            item.command({ originalEvent: event, item: item });\r\n        }\r\n\r\n        if (index === activeIndex)\r\n            setActiveIndex(null);\r\n        else\r\n            setActiveIndex(index);\r\n\r\n        if (props.onMenuItemClick) {\r\n            props.onMenuItemClick({\r\n                originalEvent: event,\r\n                item: item\r\n            });\r\n        }\r\n    }\r\n\r\n    const renderLinkContent = (item) => {\r\n        let submenuIcon = item.items && <i className=\"pi pi-fw pi-angle-down menuitem-toggle-icon\"></i>;\r\n        let badge = item.badge && <span className=\"menuitem-badge\">{item.badge}</span>;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <i className={item.icon}></i>\r\n                <span>{item.label}</span>\r\n                {submenuIcon}\r\n                {badge}\r\n                <Ripple/>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    const renderLink = (item, i) => {\r\n        let content = renderLinkContent(item);\r\n\r\n        if (item.to) {\r\n            return (\r\n                <NavLink className=\"p-ripple\" activeClassName=\"router-link-active router-link-exact-active\" to={item.to} onClick={(e) => onMenuItemClick(e, item, i)} exact target={item.target}>\r\n                    {content}\r\n                </NavLink>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <a href={item.url} className=\"p-ripple\" onClick={(e) => onMenuItemClick(e, item, i)} target={item.target}>\r\n                    {content}\r\n                </a>\r\n            );\r\n        }\r\n    }\r\n\r\n    let items = props.items && props.items.map((item, i) => {\r\n        let active = activeIndex === i;\r\n        let styleClass = classNames(item.badgeStyleClass, {'layout-menuitem-category': props.root, 'active-menuitem': active && !item.to });\r\n\r\n        if(props.root) {\r\n            return (\r\n                <li className={styleClass} key={i}>\r\n                    {props.root === true && <React.Fragment>\r\n                        <div className=\"layout-menuitem-root-text\">{item.label}</div>\r\n                        <AppSubmenu items={item.items} onMenuItemClick={props.onMenuItemClick} />\r\n                    </React.Fragment>}\r\n                </li>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <li className={styleClass} key={i}>\r\n                    {renderLink(item, i)}\r\n                    <CSSTransition classNames=\"layout-submenu-wrapper\" timeout={{ enter: 1000, exit: 450 }} in={active} unmountOnExit>\r\n                        <AppSubmenu items={item.items} onMenuItemClick={props.onMenuItemClick} />\r\n                    </CSSTransition>\r\n                </li>\r\n            );\r\n        }\r\n    });\r\n\r\n    return items ? <ul className={props.className}>{items}</ul> : null;\r\n}\r\n\r\nexport const AppMenu = (props) => {\r\n    return (\r\n        <div className=\"layout-menu-container\">\r\n            <AppSubmenu items={props.model} className=\"layout-menu\" onMenuItemClick={props.onMenuItemClick} root={true} />\r\n\r\n        </div>\r\n    );\r\n}\r\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\r\nimport { RadioButton } from 'primereact/radiobutton';\r\nimport { InputSwitch } from 'primereact/inputswitch';\r\nimport classNames from 'classnames';\r\nimport {Button} from \"primereact/button\";\r\nimport Cookies  from 'universal-cookie';\r\n\r\nexport const AppConfig = (props) => {\r\n\r\n    const [active, setActive] = useState(false);\r\n    const [scale, setScale] = useState(16);\r\n    const [scales] = useState([12,13,14,15,16]);\r\n    const [themeScheme, setThemeScheme] = useState('saga');\r\n    const [themeColor, setThemeColor] = useState('blue');\r\n    const config = useRef(null);\r\n    let outsideClickListener = useRef(null);\r\n    const cookies  = new Cookies();\r\n\r\n    const unbindOutsideClickListener = useCallback(() => {\r\n        if (outsideClickListener.current) {\r\n            document.removeEventListener('click', outsideClickListener.current);\r\n            outsideClickListener.current = null;\r\n        }\r\n    }, []);\r\n\r\n    const hideConfigurator = useCallback((event) => {\r\n        setActive(false);\r\n        unbindOutsideClickListener();\r\n        event.preventDefault();\r\n    }, [unbindOutsideClickListener]);\r\n\r\n    const bindOutsideClickListener = useCallback(() => {\r\n        if (!outsideClickListener.current) {\r\n            outsideClickListener.current = (event) => {\r\n                if (active && isOutsideClicked(event)) {\r\n                    hideConfigurator(event);\r\n                }\r\n            };\r\n            document.addEventListener('click', outsideClickListener.current);\r\n        }\r\n    }, [active, hideConfigurator]);\r\n\r\n    useEffect(() => {\r\n        if (active) {\r\n            bindOutsideClickListener()\r\n        }\r\n        else {\r\n            unbindOutsideClickListener()\r\n        }\r\n    }, [active, bindOutsideClickListener, unbindOutsideClickListener]);\r\n\r\n    const isOutsideClicked = (event) => {\r\n        return !(config.current.isSameNode(event.target) || config.current.contains(event.target));\r\n    }\r\n\r\n    const decrementScale = () => {\r\n        setScale((prevState) => --prevState);\r\n    }\r\n\r\n    const incrementScale = () => {\r\n        setScale((prevState) => ++prevState);\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.documentElement.style.fontSize = scale + 'px';\r\n    }, [scale])\r\n\r\n    const toggleConfigurator = (event) => {\r\n        setActive(prevState => !prevState);\r\n    }\r\n\r\n    const configClassName = classNames('layout-config', {\r\n        'layout-config-active': active\r\n    });\r\n\r\n    useEffect(() => {\r\n        let theme = themeScheme + '-' + themeColor;\r\n        let themeElement = document.getElementById('theme-link');\r\n        const themeHref = 'assets/themes/' + theme + '/theme.css';\r\n        replaceLink(themeElement, themeHref);\r\n\r\n    })\r\n\r\n    const replaceLink = (linkElement, href, callback) => {\r\n        if (isIE()) {\r\n            linkElement.setAttribute('href', href);\r\n\r\n            if (callback) {\r\n                callback();\r\n            }\r\n        }\r\n        else {\r\n            const id = linkElement.getAttribute('id');\r\n            const cloneLinkElement = linkElement.cloneNode(true);\r\n\r\n            cloneLinkElement.setAttribute('href', href);\r\n            cloneLinkElement.setAttribute('id', id + '-clone');\r\n\r\n            linkElement.parentNode.insertBefore(cloneLinkElement, linkElement.nextSibling);\r\n\r\n            cloneLinkElement.addEventListener('load', () => {\r\n                linkElement.remove();\r\n                cloneLinkElement.setAttribute('id', id);\r\n\r\n                if (callback) {\r\n                    callback();\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    const isIE = () => {\r\n        return /(MSIE|Trident\\/|Edge\\/)/i.test(window.navigator.userAgent)\r\n    }\r\n\r\n    const changeThemeScheme = (e, theme) => {\r\n        props.onColorModeChange(e.value);\r\n        setThemeScheme(theme);\r\n        if(theme === 'saga'){\r\n            cookies.set('theme', 'light');\r\n        }else{\r\n            cookies.set('theme', 'dark');\r\n        }\r\n        \r\n    }\r\n\r\n    const changeThemeColor = (e, color) => {\r\n        setThemeColor(color);\r\n    }\r\n\r\n    return (\r\n        <div ref={config} className={configClassName} id={\"layout-config\"}>\r\n            <button className=\"layout-config-button p-link\" id=\"layout-config-button\" onClick={toggleConfigurator}>\r\n                <i className=\"pi pi-cog\"></i>\r\n            </button>\r\n            <Button className=\"p-button-danger layout-config-close p-button-rounded p-button-text\" icon=\"pi pi-times\" onClick={hideConfigurator}/>\r\n\r\n            <div className=\"layout-config-content\">\r\n                <h6 className=\"mt-0\">Escala de Componentes</h6>\r\n                <div className=\"config-scale\">\r\n                    <Button icon=\"pi pi-minus\" onClick={decrementScale} className=\"p-button-text\" disabled={scale === scales[0]} />\r\n                    {\r\n                        scales.map((item) => {\r\n                            return <i className={classNames('pi pi-circle-on', {'scale-active': item === scale})} key={item}/>\r\n                        })\r\n                    }\r\n                    <Button icon=\"pi pi-plus\" onClick={incrementScale} className=\"p-button-text\" disabled={scale === scales[scales.length - 1]} />\r\n                </div>\r\n\r\n            \r\n\r\n                <h6>Tipo de Menu</h6>\r\n                <div className=\"p-formgroup-inline\">\r\n                    <div className=\"field-radiobutton\">\r\n                        <RadioButton inputId=\"static\" name=\"layoutMode\" value=\"static\" onChange={(e) => props.onLayoutModeChange(e.value)} checked={props.layoutMode === 'static'} />\r\n                        <label htmlFor=\"static\">Estatico</label>\r\n                    </div>\r\n                    <div className=\"field-radiobutton\">\r\n                        <RadioButton inputId=\"overlay\" name=\"layoutMode\" value=\"overlay\" onChange={(e) => props.onLayoutModeChange(e.value)} checked={props.layoutMode === 'overlay'} />\r\n                        <label htmlFor=\"overlay\">Dinamico</label>\r\n                    </div>\r\n                </div>\r\n\r\n                <h6>Tema</h6>\r\n                <div className=\"p-formgroup-inline\">\r\n                    <div className=\"field-radiobutton\">\r\n                        <RadioButton inputId=\"light\" name=\"layoutColorMode\" value=\"light\" onChange={e => changeThemeScheme(e, 'saga')} checked={props.layoutColorMode === 'light'} />\r\n                        <label htmlFor=\"light\">Claro</label>\r\n                    </div>\r\n                    <div className=\"field-radiobutton\">\r\n                        <RadioButton inputId=\"dim\" name=\"layoutColorMode\" value=\"dim\" onChange={e => changeThemeScheme(e, 'vela')} checked={props.layoutColorMode === 'dim'} />\r\n                        <label htmlFor=\"dark\">Noche</label>\r\n                    </div>\r\n                    <div className=\"field-radiobutton\">\r\n                        <RadioButton inputId=\"dark\" name=\"layoutColorMode\" value=\"dark\" onChange={e => changeThemeScheme(e, 'arya')} checked={props.layoutColorMode === 'dark'} />\r\n                        <label htmlFor=\"dark\">Oscuro</label>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <h6>Colores Primarios</h6>\r\n                <div className=\"flex\">\r\n                    <div style={{width: '2rem', height: '2rem', borderRadius:'6px'}} className=\"bg-blue-500 mr-3 cursor-pointer\" onClick={e => changeThemeColor(e, 'blue')}/>\r\n                    <div style={{width: '2rem', height: '2rem', borderRadius:'6px'}} className=\"bg-green-500 mr-3 cursor-pointer\" onClick={e => changeThemeColor(e, 'green')}/>\r\n                    <div style={{width: '2rem', height: '2rem', borderRadius:'6px'}} className=\"bg-orange-500 mr-3 cursor-pointer\" onClick={e => changeThemeColor(e, 'orange')}/>\r\n                    <div style={{width: '2rem', height: '2rem', borderRadius:'6px'}} className=\"bg-purple-500 mr-3 cursor-pointer\" onClick={e => changeThemeColor(e, 'purple')}/>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react';\r\n\r\n\r\nexport const Dashboard = () => {\r\n\r\n    return (\r\n        <div className=\"grid\">\r\n             <h1>Estamos trabajando - En el Tablero</h1>\r\n        </div>\r\n    );\r\n}\r\n","import axios from 'axios';\r\n\r\n export const getRoles = () =>{\r\n     return axios.get('https://magic-tech-backend.herokuapp.com/api/getRoles');\r\n }\r\n\r\n export const getRolID =(id) =>{\r\n     return axios.get(`https://magic-tech-backend.herokuapp.com/api/getRolId/${id}`);\r\n }\r\n\r\n export const createRol=(data)=>{\r\n    return axios.post('https://magic-tech-backend.herokuapp.com/api/createRol', \r\n      {\r\n         id:  `${data.id}`,\r\n         rol: `${data.rol}`,\r\n      }\r\n      )\r\n      .then(function (response) {\r\n        console.log(response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n }\r\n\r\nexport const updateRolID =(data,id) =>{\r\n    return axios.put(`https://magic-tech-backend.herokuapp.com/api/updateRol/${id}`, \r\n    {\r\n       rol: `${data.rol}`\r\n    }\r\n    )\r\n    .then(function (response) {\r\n      console.log(response);\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error);\r\n    });\r\n}\r\n\r\nexport const deleteRolID =(id) =>{\r\n    return axios.delete(`https://magic-tech-backend.herokuapp.com/api/deleteRolId/${id}`);\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport classNames           from 'classnames';\r\nimport { DataTable }        from 'primereact/datatable';\r\nimport { Column }           from 'primereact/column';\r\nimport { Toast }            from 'primereact/toast';\r\nimport { Button }           from 'primereact/button';\r\nimport { Toolbar }          from 'primereact/toolbar';\r\nimport { Dialog }           from 'primereact/dialog';\r\nimport { InputText }        from 'primereact/inputtext';\r\nimport { ColumnGroup }      from 'primereact/columngroup';\r\nimport { Row }              from 'primereact/row';\r\nimport { useFormik }        from \"formik\";\r\n\r\nimport uniqid               from 'uniqid';\r\n\r\nimport { getRoles,createRol,updateRolID,deleteRolID } from '../service/apiRole';\r\n\r\nexport const Role = (props) => {\r\n\r\n    \r\n    let emptyRole = {\r\n        id: null,\r\n        rol: ''\r\n    };\r\n\r\n    const [roles, setRoles]                          = useState(null);\r\n    const [roleDialog, setRoleDialog]                = useState(false);\r\n    const [deleteRoleDialog, setDeleteRoleDialog]    = useState(false);\r\n    const [globalFilter, setGlobalFilter]            = useState('');\r\n    const [loading, setLoading]                      = useState(true);\r\n\r\n    const [role, setRole]                            = useState(emptyRole);\r\n    const [selectedRoles, setSelectedRoles]          = useState(null);\r\n    const [submitted, setSubmitted]                  = useState(false);\r\n    const toast                                      = useRef(null);\r\n    const dt                                         = useRef(null);\r\n    const [stateRole,setStateRole]                   = useState(false);\r\n    const [showMessage, setShowMessage]              = useState(false);\r\n    const [rolUpdate, setRolUpdate]                  = useState(\"\");\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n          rol: \"\"\r\n        },\r\n        validate: (data) => {\r\n            let errors = {};\r\n\r\n            if (!data.rol) {\r\n                errors.rol = \"Se requiere el rol\";\r\n            } else if (data.rol.length < 2) {\r\n                errors.rol = \"Como minimo 2 caracteres\";\r\n            } else if (data.rol.length > 30) {\r\n                errors.rol = \"Como maximo 30 caracteres\";\r\n            } else if (!/^^[a-zA-Z\\s]+$/i.test(data.rol)) {\r\n                errors.rol = \"No se permiten numero o caracteres especiales\";\r\n            }else if(!esRepetidoUpdate(data.rol,rolUpdate)&&stateRole === true){\r\n                errors.rol = \"Ya existe el rol\";  \r\n            }else if(!esRepetido(data.rol)&&stateRole === false){\r\n                errors.rol = \"Ya existe el rol\";\r\n            }\r\n\r\n            return errors;\r\n        },\r\n        onSubmit: (data) => {\r\n            setSubmitted(true);\r\n            setShowMessage(true);\r\n            let _roles = [...roles];\r\n            let _role  = {...role };\r\n            _role['rol'] = data.rol;\r\n\r\n            if (_role.rol.trim()) {\r\n                if (role.id) {\r\n                    setRole({ ...role });\r\n                    console.log(role);\r\n                    const index = findIndexById(role.id);\r\n                    \r\n                    _roles[index] = _role;\r\n                    updateRolID({rol:`${_role.rol}`},role.id);\r\n                    toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Rol Actualizado', life: 3000 });\r\n                }\r\n                else {\r\n\r\n                    _role.id = uniqid(\"rol-\"); \r\n                    _roles.push(_role);\r\n                    createRol({id:_role.id, rol:`${_role.rol}`});\r\n                    toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Rol Creado', life: 3000 });\r\n                }\r\n            }\r\n            setRoles(_roles);\r\n            setRoleDialog(false);\r\n            setRole(emptyRole);\r\n            formik.resetForm();\r\n            \r\n        },\r\n      });\r\n\r\n    const isFormFieldValid = (name) => !!(formik.touched[name] && formik.errors[name]);\r\n    const getFormErrorMessage = (name) => {\r\n         return isFormFieldValid(name) && <small className=\"ml-1 p-error\" style={{'color': '#ff0000'}}>{formik.errors[name]}</small>;\r\n    };\r\n\r\n    const esRepetido =(value)=>{\r\n        var _roles = [...roles];\r\n        let res = _roles.find(i => (i.rol).toLowerCase().trim() === (value).toLowerCase().trim() );\r\n         if(res === undefined){\r\n             return true;\r\n         }else{\r\n             return false;\r\n         }\r\n    }\r\n    const esRepetidoUpdate =(value,original)=>{\r\n        var _roles = [...roles];\r\n        let aux = _roles.filter(i =>(i.rol).toLowerCase() != (original).toLowerCase())\r\n        let res = aux.find(i => (i.rol).toLowerCase().trim() === (value).toLowerCase().trim() );\r\n         if(res === undefined || res === original){\r\n             return true;\r\n         }else{\r\n             return false;\r\n         }\r\n    }\r\n\r\n\r\n    useEffect(()=>{\r\n        fetchRoles();\r\n    },[])\r\n\r\n\r\n    const fetchRoles = () =>{\r\n        getRoles().then(json =>{\r\n            if(json.error){\r\n                console.log(\"Error\");\r\n            }else{\r\n                console.log(\"---------roles insertados-----------\");\r\n                setRoles(json.data);\r\n                setLoading(false);\r\n            }\r\n        })\r\n    }\r\n\r\n    const openNew = () => {\r\n        setRole(emptyRole);\r\n        setSubmitted(false);\r\n        setStateRole(false);\r\n        formik.resetForm();\r\n        setRoleDialog(true);      \r\n    }\r\n\r\n    const hideDialog = () => {\r\n        setSubmitted(false);\r\n        setRoleDialog(false);\r\n    }\r\n\r\n    const hideDeleteRoleDialog = () => {\r\n        setDeleteRoleDialog(false);\r\n    }\r\n\r\n\r\n    const editRole = (role) => {\r\n        setRole({ ...role });\r\n        formik.resetForm();\r\n        formik.setValues({rol:`${role.rol}`});\r\n        setRolUpdate(`${role.rol}`);\r\n        setStateRole(true);\r\n        setRoleDialog(true);\r\n    }\r\n\r\n    const confirmDeleteRole = (role) => {\r\n        setRole(role);\r\n        setDeleteRoleDialog(true);\r\n    }\r\n\r\n    const deleteRole = () => {\r\n        let _roles = roles.filter(val => val.id !== role.id);\r\n        setRoles(_roles);\r\n        setDeleteRoleDialog(false);\r\n\r\n        if (role.rol.trim()) {\r\n            if (role.id) {\r\n                deleteRolID(role.id);\r\n            }\r\n        }\r\n        setRole(emptyRole);\r\n        \r\n        toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Rol Eliminado', life: 3000 });\r\n    }\r\n\r\n    const findIndexById = (id) => {\r\n        let index = -1;\r\n        for (let i = 0; i < roles.length; i++) {\r\n            if (roles[i].id === id) {\r\n\r\n                index = i;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return index;\r\n    }\r\n\r\n\r\n    const idBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">id</span>\r\n                {rowData.id}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const roleBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Rol</span>\r\n                {rowData.rol}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const leftToolbarTemplate = () => {\r\n        return (\r\n            <React.Fragment>\r\n                <Button style={props.layoutColorMode === 'light' ? {'color':'#ffffff','background': '#13af4e'} : {'color':'#ffffff','background': '#13af4e'}} label=\"Nuevo\" icon=\"pi pi-plus\" className=\"p-button-success p-mr-2\" onClick={openNew} />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    const actionBodyTemplate = (rowData) => {\r\n        return (\r\n            <div className=\"actions\">\r\n                <Button icon=\"pi pi-pencil\" style={{'background': '#13af4e'}} className=\"p-button-rounded p-button-success mr-2\"   onClick={() => editRole(rowData)} />\r\n                <Button icon=\"pi pi-trash\"  style={{'background': '#eee500'}} className=\"p-button-rounded p-button-warning\"        onClick={() => confirmDeleteRole(rowData)} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const deleteRoleDialogFooter = (\r\n        <>\r\n            <Button label=\"No\" icon=\"pi pi-times\" style={{'background': '#d13639','color':'#ffffff'}} className=\"p-button-text\" onClick={hideDeleteRoleDialog} />\r\n            <Button label=\"Si\" icon=\"pi pi-check\" style={props.layoutColorMode === 'light' ? {'color':'#13af4e','border-color':'#13af4e'} : {'color':'#13af4e','border-color':'#13af4e'}} className=\"p-button-text\" onClick={deleteRole} />\r\n        </>\r\n    );\r\n\r\n    const renderHeader = () => {\r\n        return (\r\n            <div className=\"flex flex-column md:flex-row md:justify-content-between md:align-items-center\">\r\n            <h5 className=\"m-0\">Gestion de roles</h5>\r\n            <span className=\"block mt-2 md:mt-0 p-input-icon-left\">\r\n                <i className=\"pi pi-search\" />\r\n                <InputText type=\"search\" onInput={(e) => setGlobalFilter(e.target.value)} placeholder=\"Buscar...\" />\r\n            </span>\r\n        </div>\r\n        )\r\n    }\r\n\r\n    const renderGroup = () => {\r\n        return (\r\n            <ColumnGroup>\r\n                <Row>\r\n                    <Column header={showHeader} colSpan={3}></Column>\r\n                </Row>\r\n                <Row>\r\n                    <Column header=\"ID\"                field=\"id\"   sortable style={{ 'background-color': '#13af4e', width:'20%'}} />\r\n                    <Column header=\"ROL\"               field=\"rol\"  sortable style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                    <Column header=\"Editar/Eliminar\"                         style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                </Row>\r\n            </ColumnGroup>\r\n        )\r\n    }\r\n\r\n\r\n    const showHeader  = renderHeader();\r\n    const headerGroup = renderGroup();\r\n\r\n    const headerDialog =()=>{\r\n        return (stateRole)?\"Actualizando Rol\":\"Añadir Rol\"\r\n    }\r\n\r\n    return (\r\n        <div className=\"p-grid crud-demo\">\r\n            <div className=\"p-col-12\">\r\n                <div className=\"card\">\r\n                \r\n                    <Toast ref={toast} />\r\n                    <Toolbar className=\"p-mb-4\" left={leftToolbarTemplate}></Toolbar>\r\n\r\n                    <DataTable ref={dt} value={roles} selection={selectedRoles}  onSelectionChange={(e) => setSelectedRoles(e.value)}\r\n                        dataKey=\"id\" rowHover paginator rows={10} rowsPerPageOptions={[5, 10, 25]} className=\"datatable-responsive p-datatable-sm p-datatable-gridlines p-datatable-striped\"\r\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\r\n                        currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} roles\" resizableColumns columnResizeMode=\"fit\" showGridlines\r\n                        globalFilter={globalFilter} emptyMessage=\"No se encontro el rol\" loading={loading} headerColumnGroup={headerGroup}\r\n                    >\r\n\r\n                        <Column style={{width:'20%'}} header=\"ID\"  field=\"id\"     sortable body={idBodyTemplate}></Column>\r\n                        <Column style={{width:'20%'}} header=\"ROL\" field=\"rol\"    sortable body={roleBodyTemplate}></Column>\r\n                        <Column style={{width:'20%'}} body={actionBodyTemplate}></Column>\r\n\r\n                    </DataTable>\r\n\r\n\r\n                    <Dialog visible={roleDialog} style={{ width: '450px' }} header={headerDialog} modal className=\"p-fluid\" onHide={hideDialog}>  \r\n                        <form onSubmit={formik.handleSubmit}>\r\n                            <div className=\"form-group\">\r\n                                <div className=\"p-field mt-2\">\r\n                                    <div className=\"p-inputgroup\">\r\n                                            <span className=\"p-inputgroup-addon\">\r\n                                                <img   src={props.layoutColorMode === 'light' ? 'assets/layout/images/rol.png' : 'assets/layout/images/rol-dark.png'} style={{'height': '1.2em','width':'1.2em',}}/>   \r\n                                            </span>\r\n                                            <InputText id=\"rol\" type=\"text\" name=\"rol\" value={formik.values.rol} onChange={formik.handleChange} placeholder=\"Rol\" autoFocus/>\r\n                                    </div>       \r\n                                </div>\r\n                                {getFormErrorMessage('rol')}\r\n                            </div>\r\n                            <div className='mt-2'>\r\n                                <div className=\"flex justify-content-center flex-wrap\">\r\n                                    <div className=\"flex align-items-center justify-content-center  m-2\">\r\n                                        <Button label=\"Cancelar\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDialog} style={props.layoutColorMode === 'light' ? {'color':'#d13639','border-color':'#d13639'} : {'color':'#d13639','border-color':'#d13639'}}/>\r\n                                    </div>\r\n                                    <div className=\"flex align-items-center justify-content-center  m-2\">\r\n                                        <Button label=\"Guardar\"  icon=\"pi pi-check\" type=\"submit\" className=\"p-button-text\" style={{'background': '#13af4e','color':'#ffffff'}}/>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </Dialog>\r\n\r\n                    <Dialog visible={deleteRoleDialog} style={{ width: '450px' }} header=\"Confirm\" modal footer={deleteRoleDialogFooter} onHide={hideDeleteRoleDialog}>\r\n                        <div className=\"confirmation-content\">\r\n                            <i className=\"pi pi-exclamation-triangle p-mr-3\" style={{ fontSize: '2rem' }} />\r\n                            {role && <span>¿Estás segura de que quieres eliminar? <b>{role.rol}</b>?</span>}\r\n                        </div>\r\n                    </Dialog>\r\n    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import axios from 'axios';\r\n\r\n export const getUsers = () =>{\r\n     return axios.get('https://magic-tech-backend.herokuapp.com/api/getUsers');\r\n }\r\n\r\n export const getUserID =(id) =>{\r\n     return axios.get(`https://magic-tech-backend.herokuapp.com/api/getUserId/${id}`);\r\n }\r\n\r\n\r\n\r\n export const createUser=(data)=>{\r\n    return axios.post('https://magic-tech-backend.herokuapp.com/api/createUser', \r\n      {\r\n         id:        `${data.id}`,\r\n         nombre:    `${data.nombre}`,\r\n         apellido:  `${data.apellido}`,\r\n         email:     `${data.email}`,\r\n         password:  `${data.password}`,\r\n         rol:       `${data.rol}`      //rol es un numero entero\r\n      }\r\n      )\r\n      .then(function (response) {\r\n        console.log(response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n }\r\n\r\nexport const updateUserID =(data,id) =>{\r\n    return axios.put(`https://magic-tech-backend.herokuapp.com/api/updateUser/${id}`, \r\n    {\r\n      nombre:    `${data.nombre}`,\r\n      apellido:  `${data.apellido}`,\r\n      email:     `${data.email}`,\r\n      password:  `${data.password}`,\r\n      rol:       `${data.rol}`      //rol es un numero entero\r\n    }\r\n    )\r\n    .then(function (response) {\r\n      console.log(response);\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error);\r\n    });\r\n}\r\n\r\nexport const deleteUserID =(id) =>{\r\n    return axios.delete(`https://magic-tech-backend.herokuapp.com/api/deleteUserId/${id}`);\r\n}\r\n\r\nexport async function login(data){\r\n\r\n  return await axios.post('https://magic-tech-backend.herokuapp.com/api/login', \r\n  {\r\n     email:     `${data.email}`,\r\n     password:  `${data.password}`\r\n  }).then(function (response) {\r\n    console.log(response);\r\n  })\r\n  .catch(function (error) {\r\n    console.log(error);\r\n  });\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport classNames           from 'classnames';\r\nimport { DataTable }        from 'primereact/datatable';\r\nimport { Column }           from 'primereact/column';\r\nimport { Toast }            from 'primereact/toast';\r\nimport { Button }           from 'primereact/button';\r\nimport { Toolbar }          from 'primereact/toolbar';\r\nimport { Dialog }           from 'primereact/dialog';\r\nimport { InputText }        from 'primereact/inputtext';\r\nimport { Password }         from 'primereact/password';\r\nimport { ColumnGroup }      from 'primereact/columngroup';\r\nimport { Row }              from 'primereact/row';\r\nimport { Dropdown }         from 'primereact/dropdown';\r\nimport { useFormik }        from \"formik\";\r\n\r\n\r\nimport uniqid               from 'uniqid';\r\n\r\nimport { getUsers,getUserID,createUser,updateUserID,deleteUserID } from '../service/apiUser';\r\nimport { getRoles }         from '../service/apiRole';\r\n\r\nexport const User = (props) => {\r\n\r\n    let emptyUser = {\r\n        id:       null,\r\n        nombre:     '',\r\n        apellido:     '',\r\n        email:    '',\r\n        password: '',\r\n        rol:      ''\r\n    };\r\n    \r\n    const [roles,setRoles]                           = useState(null);\r\n    const [rol, setRol]                              = useState(null);\r\n    const [users, setUsers]                          = useState(null);\r\n    const [globalFilter, setGlobalFilter]            = useState('');\r\n    const [loading, setLoading]                      = useState(true);\r\n    const [userDialog, setUserDialog]                = useState(false);\r\n    const [deleteUserDialog, setDeleteUserDialog]    = useState(false);\r\n\r\n    const [user, setUser]                            = useState(emptyUser);\r\n    const [selectedUsers, setSelectedUsers]          = useState(null);\r\n    const [submitted, setSubmitted]                  = useState(false);\r\n    const toast                                      = useRef(null);\r\n    const dt                                         = useRef(null);\r\n    const [stateUser,setStateUser]                   = useState(false);\r\n    const [emailUpdate, setEmailUpdate]              = useState(\"\");\r\n  \r\n    const formik = useFormik({\r\n        initialValues: {\r\n            nombre:    \"\",\r\n            apellido:  \"\",\r\n            email:     \"\",\r\n            password:  \"\",\r\n            confirmPassword : \"\",\r\n            rol: ''\r\n        },\r\n        \r\n         validate: (data) => {\r\n            \r\n            let errors = {};\r\n            if (!data.nombre) {\r\n                errors.nombre = \"Se requiere el nombre\";\r\n            } else if (data.nombre.length < 2) {\r\n                errors.nombre = \"Como minimo 2 caracteres\";\r\n            } else if (data.nombre.length > 30) {\r\n                errors.nombre = \"Como maximo 30 caracteres\";\r\n            } else if (!/^^[a-zA-Z\\s]+$/i.test(data.nombre)) {\r\n                errors.nombre = \"No se permiten numero o caracteres especiales\";\r\n            }\r\n\r\n            if (!data.apellido) {\r\n                errors.apellido = \"Se requiere el apellido\";\r\n            } else if (data.apellido.length < 2) {\r\n                errors.apellido = \"Como minimo 2 caracteres\";\r\n            } else if (data.apellido.length > 30) {\r\n                errors.apellido = \"Como maximo 30 caracteres\";\r\n            }else if (!/^^[a-zA-Z\\s]+$/i.test(data.apellido)) {\r\n                errors.apellido = \"No se permiten numero o caracteres especiales\";\r\n            }\r\n\r\n            if (!data.email) {\r\n                errors.email = \"Se requiere el correo electronico\";\r\n            } else if (data.email.length > 255) {\r\n                errors.email = \"Como maximo 255 caracteres\";\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(data.email)) {\r\n                errors.email = 'Dirección de correo electrónico inválida. P.ej. ejemplo@email.com';\r\n            }else if(!esRepetido(data.email) && stateUser === false){\r\n                errors.email = \"Ya existe el correo electronico\";\r\n            } else if(!esRepetidoUpdate(data.email,emailUpdate) && stateUser === true){\r\n                errors.email = \"Ya existe el correo electronico\";  \r\n            }\r\n\r\n            if (!data.password) {\r\n                errors.password = \"Se requiere la contraseña\";\r\n            } else if (data.password.length < 6) {\r\n                errors.password = \"Como minimo 6 caracteres\";\r\n            } else if (data.password.length > 255) {\r\n                errors.password = \"Como maximo 255 caracteres\";\r\n            }\r\n\r\n            if (!data.confirmPassword) {\r\n                errors.confirmPassword = \"Se requiere la confirmacion de la contraseña\";\r\n            }else if (data.confirmPassword != data.password) {\r\n                errors.confirmPassword = \"Las contraseñas deben coincidir\";\r\n            } \r\n\r\n            if (!data.rol) {\r\n                errors.rol = \"Se requiere el rol\";\r\n            }\r\n            return errors;\r\n    \r\n        },\r\n        \r\n        onSubmit: (data ) => {\r\n\r\n        \r\n            if(submitted === true){\r\n                let _users = [...users];\r\n                let _user  = {...user };\r\n                _user['nombre']     = data.nombre;\r\n                _user['apellido']   = data.apellido;\r\n                _user['email']      = data.email;\r\n                _user['password']   = data.password;\r\n                _user['rol']        = data.rol;\r\n\r\n                if (_user.nombre.trim()) {\r\n                    if (user.id) {\r\n                        setUser({ ...user });\r\n                        const index = findIndexById(user.id);\r\n                        _users[index] = _user;\r\n                        \r\n                        updateUserID({nombre:`${_user.nombre}`,apellido:`${_user.apellido}`,email:`${_user.email}`,password:`${_user.password}`,rol:`${_user.rol}`},user.id);\r\n                        toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Usuario Actualizado', life: 3000 });\r\n                    }\r\n                    else {\r\n\r\n                        _user.id = uniqid(\"user-\");\r\n                        \r\n                        _users.push(_user);\r\n                        createUser({id:`${_user.id}`,nombre:`${_user.nombre}`,apellido:`${_user.apellido}`,email:`${_user.email}`,password:`${_user.password}`,rol:`${_user.rol}`});\r\n                        toast.current.show({ severity: 'success', summary: 'Successful', detail: 'usuario Creado', life: 3000 });\r\n                    }\r\n                }\r\n                setUsers(_users);\r\n                setUserDialog(false);\r\n                setUser(emptyUser);\r\n                formik.resetForm();\r\n        }\r\n            \r\n        },\r\n      });\r\n\r\n    const isFormFieldValid = (name) => !!(formik.touched[name] && formik.errors[name]);\r\n    const getFormErrorMessage = (name) => {\r\n        return isFormFieldValid(name) && <small className=\"ml-1 p-error\" style={{'color': '#ff0000'}}>{formik.errors[name]}</small>;\r\n    };\r\n\r\n    const esRepetido =(value)=>{\r\n        var _users = [...users];\r\n        let res = _users.find(i => (i.email).toLowerCase() === (value).toLowerCase() );\r\n         if(res === undefined){\r\n             return true;\r\n         }else{\r\n             return false;\r\n         }\r\n    }\r\n    const esRepetidoUpdate =(value,original)=>{\r\n        var _users = [...users];\r\n        let aux = _users.filter(i =>(i.email).toLowerCase() != (original).toLowerCase());\r\n        let res = aux.find(i => (i.email).toLowerCase() === (value).toLowerCase() );\r\n         if(res === undefined || res === original){\r\n             return true;\r\n         }else{\r\n             return false;\r\n         }\r\n    }\r\n\r\n\r\n    useEffect(()=>{\r\n        fetchRoles();\r\n    },[])\r\n\r\n    const fetchRoles = () =>{\r\n        getRoles().then(json =>{\r\n            if(json.error){\r\n                console.log(\"Error\");\r\n            }else{\r\n                console.log(\"---------roles insertados-----------\");\r\n                setRoles(json.data);\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        fetchUsers();\r\n    },[])\r\n\r\n    const fetchUsers = () =>{\r\n        getUsers().then(json =>{\r\n            if(json.error){\r\n                console.log(\"Error\");\r\n            }else{\r\n                console.log(\"---------Users insertados-----------\");\r\n                setUsers(json.data);\r\n                setLoading(false);\r\n            }\r\n        })\r\n    }\r\n\r\n    const openNew = () => {\r\n        setUser(emptyUser);\r\n        formik.resetForm();\r\n        setSubmitted(false);\r\n        setStateUser(false); \r\n        setUserDialog(true);    \r\n    }\r\n\r\n    const hideDialog = () => {\r\n        setSubmitted(false);\r\n        setUserDialog(false);\r\n    }\r\n\r\n    const showDialog = () => {\r\n        setSubmitted(true);\r\n        formik.handleSubmit();\r\n    }\r\n\r\n    const hideDeleteUserDialog = () => {\r\n        setDeleteUserDialog(false);\r\n    }\r\n\r\n    const editUser = (user) => {\r\n        setUser({ ...user });\r\n        setSubmitted(true);\r\n        formik.resetForm();\r\n        formik.setValues(\r\n            {nombre:        `${user.nombre}`,\r\n            apellido:       `${user.apellido}`,\r\n            email:          `${user.email}`,\r\n            password:       `${user.password}`,\r\n            confirmPassword:`${user.password}`,\r\n            rol:            `${user.rol}`\r\n        });\r\n        setEmailUpdate(`${user.email}`);\r\n        setStateUser(true);\r\n        setUserDialog(true);\r\n    }\r\n\r\n    const confirmDeleteUser = (user) => {\r\n        setUser(user);\r\n        setDeleteUserDialog(true);\r\n    }\r\n\r\n    const deleteUser = () => {\r\n        let _users = users.filter(val => val.id !== user.id);\r\n        setUsers(_users);\r\n        setDeleteUserDialog(false);\r\n\r\n        if (user.email.trim()) {\r\n            if (user.id) {\r\n                deleteUserID(user.id);\r\n            }\r\n        }\r\n        setUser(emptyUser);\r\n        toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Usuario Eliminado', life: 3000 });\r\n    }\r\n\r\n    const findIndexById = (id) => {\r\n        let index = -1;\r\n        for (let i = 0; i < users.length; i++) {\r\n            if (users[i].id === id) {\r\n\r\n                index = i;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return index;\r\n    }\r\n\r\n  \r\n    const idBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">id</span>\r\n                {rowData.id}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const nombreBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Nombre</span>\r\n                {rowData.nombre}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const apellidoBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Apellido</span>\r\n                {rowData.apellido}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const emailBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Correo electronico</span>\r\n                {rowData.email}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const passwordBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Contrasena</span>\r\n                {rowData.password}\r\n                \r\n            </>\r\n        );\r\n    }\r\n\r\n    const rolBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Rol</span>\r\n                {rowData.rol}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const findRol = (rolFind) => {\r\n        \r\n        var _roles = [...roles]\r\n\r\n        let res = _roles.find(el => el.id === rolFind);\r\n        console.log(res[\"rol\"]);\r\n        return res;\r\n    }\r\n\r\n    const leftToolbarTemplate = () => {\r\n        return (\r\n            <React.Fragment>\r\n                <Button style={props.layoutColorMode === 'light' ? {'color':'#ffffff','background': '#13af4e'} : {'color':'#ffffff','background': '#13af4e'}} label=\"Nuevo\" icon=\"pi pi-plus\" className=\"p-button-success p-mr-2\" onClick={openNew}/>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    const actionBodyTemplate = (rowData) => {\r\n        return (\r\n            <div className=\"actions\">\r\n                <Button icon=\"pi pi-pencil\" style={{'background': '#13af4e'}} className=\"p-button-rounded p-button-success mr-2\"   onClick={() => editUser(rowData)} />\r\n                <Button icon=\"pi pi-trash\"  style={{'background': '#eee500'}} className=\"p-button-rounded p-button-warning\"        onClick={() => confirmDeleteUser(rowData)} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const deleteUserDialogFooter = (\r\n        <>\r\n            <Button label=\"No\" icon=\"pi pi-times\" style={{'background': '#d13639','color':'#ffffff'}} className=\"p-button-text\" onClick={hideDeleteUserDialog} />\r\n            <Button label=\"Si\" icon=\"pi pi-check\" style={props.layoutColorMode === 'light' ? {'color':'#13af4e','border-color':'#13af4e'} : {'color':'#13af4e','border-color':'#13af4e'}} className=\"p-button-text\" onClick={deleteUser} />\r\n        </>\r\n    );\r\n\r\n    const renderHeader = () => {\r\n        return (\r\n            <div className=\"flex flex-column md:flex-row md:justify-content-between md:align-items-center\">\r\n            <h5 className=\"m-0\">Gestion de usuarios</h5>\r\n            <span className=\"block mt-2 md:mt-0 p-input-icon-left\">\r\n                <i className=\"pi pi-search\" />\r\n                <InputText type=\"search\" onInput={(e) => setGlobalFilter(e.target.value)} placeholder=\"Buscar...\" />\r\n            </span>\r\n        </div>\r\n        )\r\n    }\r\n\r\n    const renderGroup = () => {\r\n        return (\r\n            <ColumnGroup>\r\n                <Row>\r\n                    <Column header={showHeader} colSpan={6}></Column>\r\n                </Row>\r\n                <Row>\r\n                    <Column header=\"ID\"                 field=\"id\"       sortable style={{ 'background-color': '#13af4e', width:'15%'}} />\r\n                    <Column header=\"NOMBRE\"             field=\"nombre\"   sortable style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                    <Column header=\"APELLIDO\"           field=\"apellido\" sortable style={{ 'background-color': '#13af4e', width:'20%'}} />\r\n                    <Column header=\"CORREO ELECTRONICO\" field=\"email\"    sortable style={{ 'background-color': '#13af4e', width:'60%'}}/>\r\n                    <Column header=\"ROL\"                field=\"rol\"      sortable style={{ 'background-color': '#13af4e', width:'10%'}}/>\r\n                    <Column header=\"Editar/Eliminar\"                              style={{ 'background-color': '#13af4e', width:'10%'}}/>\r\n                </Row>\r\n            </ColumnGroup>\r\n        )\r\n    }\r\n\r\n\r\n    const showHeader  = renderHeader();\r\n    const headerGroup = renderGroup();\r\n\r\n    const headerDialog =()=>{\r\n        return (stateUser?\"Actualizando usuario\":\"Añadir Usuario\")\r\n    }\r\n\r\n    return (\r\n        \r\n        <div className=\"p-grid crud-demo\">\r\n            <div className=\"p-col-12\">\r\n                <div className=\"card\">\r\n                    <Toast ref={toast} />\r\n                    <Toolbar className=\"p-mb-4\" left={leftToolbarTemplate}></Toolbar>\r\n\r\n                    <DataTable ref={dt} value={users} selection={selectedUsers}  onSelectionChange={(e) => setSelectedUsers(e.value)}\r\n                        dataKey=\"id\" rowHover paginator rows={10} rowsPerPageOptions={[5, 10, 25]} className=\"datatable-responsive p-datatable-sm p-datatable-gridlines p-datatable-striped\"\r\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\r\n                        currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} users\" resizableColumns columnResizeMode=\"fit\" showGridlines\r\n                        globalFilter={globalFilter} emptyMessage=\"No se encontro el rol\" loading={loading} headerColumnGroup={headerGroup}\r\n                        >\r\n                    \r\n                        <Column style={{width:'15%'}} field=\"id\"         header=\"ID\"                 sortable body={idBodyTemplate}></Column>\r\n                        <Column style={{width:'20%'}} field=\"nombre\"     header=\"APELLIDO\"           sortable body={nombreBodyTemplate}></Column>\r\n                        <Column style={{width:'20%'}} field=\"apellido\"   header=\"NOMBRE\"             sortable body={apellidoBodyTemplate}></Column>\r\n                        <Column style={{width:'60%'}} field=\"email\"      header=\"CORREO ELECTRONICO\" sortable body={emailBodyTemplate}></Column>\r\n                        <Column style={{width:'10%'}} field=\"rol\"        header=\"ROL\"                sortable body={rolBodyTemplate}></Column>\r\n                        <Column style={{width:'10%'}} body={actionBodyTemplate}></Column>\r\n\r\n                    </DataTable>\r\n\r\n\r\n                    <Dialog visible={userDialog} style={{ width: '450px' }} header={headerDialog} modal className=\"p-fluid\" onHide={hideDialog}>\r\n                        <form onSubmit={formik.handleSubmit}>\r\n                            <div className=\"p-field mt-2\" >\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <i className=\"pi pi-user\"></i>\r\n                                        </span>\r\n                                        <InputText id=\"nombre\" name='nombre' placeholder=\"Nombre\" value={formik.values.nombre} onChange={formik.handleChange} autoFocus/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('nombre')}\r\n\r\n                            <div className=\"p-field mt-2\">\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <i className=\"pi pi-user\"></i>\r\n                                        </span>\r\n                                        <InputText id=\"apellido\" name='apellido' placeholder=\"Apellido\" value={formik.values.apellido} onChange={formik.handleChange}/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('apellido')}\r\n\r\n                            <div className=\"p-field mt-2\">\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <img   src={props.layoutColorMode === 'light' ? 'assets/layout/images/gmail.png' : 'assets/layout/images/gmail-dark.png'} style={{'height': '1.2em','width':'1.2em',}}/>  \r\n                                        </span>\r\n                                        <InputText id=\"email\" name='email' placeholder=\"Correo electronico\"  value={formik.values.email} onChange={formik.handleChange}/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('email')}\r\n\r\n                            <div className=\"p-field mt-2\">\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <img   src={props.layoutColorMode === 'light' ? 'assets/layout/images/password.png' : 'assets/layout/images/password-dark.png'} style={{'height': '1.2em','width':'1.2em',}}/>  \r\n                                        </span>\r\n                                        <Password id=\"password\" name='password' placeholder=\"Contraseña\"  value={formik.values.password} onChange={formik.handleChange} toggleMask  promptLabel=\"Por favor ingrese una contraseña\" weakLabel=\"Débil\" mediumLabel=\"Medio\" strongLabel=\"Fuerte\"/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('password')}\r\n\r\n                            <div className=\"p-field mt-2\">\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <img   src={props.layoutColorMode === 'light' ? 'assets/layout/images/password.png' : 'assets/layout/images/password-dark.png'} style={{'height': '1.2em','width':'1.2em',}}/>   \r\n                                        </span>\r\n                                        <Password id=\"rol\" name='confirmPassword' placeholder=\"Confirmar contraseña\"  value={formik.values.confirmPassword} onChange={formik.handleChange} toggleMask  promptLabel=\"Por favor ingrese una contraseña\" weakLabel=\"Débil\" mediumLabel=\"Medio\" strongLabel=\"Fuerte\"/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('confirmPassword')}\r\n\r\n                            <div className=\"p-field mt-2\">\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <img   src={props.layoutColorMode === 'light' ? 'assets/layout/images/rol.png' : 'assets/layout/images/rol-dark.png'} style={{'height': '1.2em','width':'1.2em',}}/>   \r\n                                        </span>\r\n                                        <Dropdown id=\"rol\" name=\"rol\" placeholder=\"Seleccione un rol\" value={formik.values.rol} onChange={formik.handleChange} options={roles} optionLabel=\"rol\"  optionValue=\"id\"/>   \r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('rol')}\r\n\r\n                            <div className='mt-2'>\r\n                                <div className=\"flex justify-content-center flex-wrap\">\r\n                                    <div className=\"flex align-items-center justify-content-center  m-2\">\r\n                                        <Button label=\"Cancelar\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDialog} style={props.layoutColorMode === 'light' ? {'color':'#d13639','border-color':'#d13639'} : {'color':'#d13639','border-color':'#d13639'}}/>\r\n                                    </div>\r\n                                    <div className=\"flex align-items-center justify-content-center  m-2\">\r\n                                        <Button label=\"Guardar\"  icon=\"pi pi-check\" type=\"submit\" className=\"p-button-text\" onClick={showDialog} style={{'background': '#13af4e','color':'#ffffff'}}/>  \r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </form>\r\n                    </Dialog>\r\n\r\n\r\n                    <Dialog className=\"mt-2\" visible={deleteUserDialog} style={{ width: '450px' }} header=\"Confirm\" modal footer={deleteUserDialogFooter} onHide={hideDeleteUserDialog}>\r\n                        <div className=\"confirmation-content\">\r\n                            <i className=\"pi pi-exclamation-triangle p-mr-3\" style={{ fontSize: '2rem' }} />\r\n                            {user && <span>¿Estás segura de que quieres eliminar? <b>{user.nombre}</b> <b>{user.apellido}</b>?</span>}\r\n                        </div>\r\n                    </Dialog>\r\n    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import axios from 'axios';\r\n\r\n export const getEmpresas = () =>{\r\n     return axios.get('https://magic-tech-backend.herokuapp.com/api/getEmpresas');\r\n }\r\n\r\n export const getEmpresaID =(id) =>{\r\n     return axios.get(`https://magic-tech-backend.herokuapp.com/api/getEmpresaId/${id}`);\r\n }\r\n\r\n\r\n\r\n export const createEmpresa=(data)=>{\r\n    return axios.post('https://magic-tech-backend.herokuapp.com/api/createEmpresa', \r\n      {\r\n         id:          `${data.id}`,\r\n         nombre:      `${data.nombre}`,\r\n         nombreCorto: `${data.nombreCorto}`,\r\n         nombreLargo: `${data.nombreLargo}`,\r\n         tipoSociedad:`${data.tipoSociedad}`,\r\n         direccion:   `${data.direccion}`,\r\n         email:       `${data.email}`,\r\n         password:    `${data.password}`,\r\n         informacion: `${data.informacion}`,\r\n         user:        `${data.user}`\r\n       \r\n      }\r\n      )\r\n      .then(function (response) {\r\n        console.log(response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n }\r\n\r\nexport const updateEmpresaID =(data,id) =>{\r\n    return axios.put(`https://magic-tech-backend.herokuapp.com/api/updateEmpresa/${id}`, \r\n    {\r\n      nombre:      `${data.nombre}`,\r\n      nombreCorto: `${data.nombreCorto}`,\r\n      nombreLargo: `${data.nombreLargo}`,\r\n      tipoSociedad:`${data.tipoSociedad}`,\r\n      direccion:   `${data.direccion}`,\r\n      email:       `${data.email}`,\r\n      password:    `${data.password}`,\r\n      informacion: `${data.informacion}`,\r\n      user:        `${data.user}`\r\n    }\r\n    )\r\n    .then(function (response) {\r\n      console.log(response);\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error);\r\n    });\r\n}\r\n\r\nexport const deleteEmpresaID =(id) =>{\r\n    return axios.delete(`https://magic-tech-backend.herokuapp.com/api/deleteEmpresaId/${id}`);\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport classNames           from 'classnames';\r\nimport { DataTable }        from 'primereact/datatable';\r\nimport { Column }           from 'primereact/column';\r\nimport { Toast }            from 'primereact/toast';\r\nimport { Button }           from 'primereact/button';\r\nimport { Toolbar }          from 'primereact/toolbar';\r\nimport { Dialog }           from 'primereact/dialog';\r\nimport { InputText }        from 'primereact/inputtext';\r\nimport { InputTextarea }    from 'primereact/inputtextarea';\r\nimport { Password }         from 'primereact/password';\r\nimport { ColumnGroup }      from 'primereact/columngroup';\r\nimport { Row }              from 'primereact/row';\r\nimport { Dropdown }         from 'primereact/dropdown';\r\nimport { useFormik }        from \"formik\";\r\n\r\nimport uniqid               from 'uniqid';\r\n\r\nimport { getUsers,getUserID,createUser,updateUserID,deleteUserID }   from '../service/apiUser';\r\nimport { getEmpresas,createEmpresa,updateEmpresaID,deleteEmpresaID } from '../service/apiEmpresa';\r\n\r\nexport const Empresa = (props) => {\r\n\r\n    let emptyEmpresa = {\r\n        id:              null,\r\n        nombre:          '',\r\n        nombreCorto:     '',\r\n        nombreLargo:     '',\r\n        tipoSociedad:    '',\r\n        direccion:       '',\r\n        email:           '',\r\n        password:        '',\r\n        informacion:     '',\r\n        user:            ''\r\n    };\r\n    \r\n    const Sociedades = [\r\n        {name: \"Sociedad de Responsabilidad Limitada\"       , tipo:\"S.R.L.\"},\r\n        {name: \"Sociedad Anónima\"                           , tipo:\"S.A.\"},\r\n        {name: \"Sociedad Colectiva\"                         , tipo:\"S.C.\"},\r\n        {name: \"Sociedad Anónima Mixta o de Economía Mixta\" , tipo:\"S.A.M.\"},\r\n        {name: \"Sociedad en Comandita Simple\"               , tipo:\"S.C.S.\"}\r\n    ];\r\n\r\n    const [users, setUsers]                             = useState(null);\r\n\r\n    const [empresas, setEmpresas]                       = useState(null);\r\n    const [empresaDialog, setEmpresaDialog]             = useState(false);\r\n    const [globalFilter, setGlobalFilter]               = useState('');\r\n    const [loading, setLoading]                         = useState(true);\r\n    const [deleteEmpresaDialog, setDeleteEmpresaDialog] = useState(false);\r\n\r\n    const [empresa, setEmpresa]                         = useState(emptyEmpresa);\r\n    const [selectedEmpresas, setSelectedEmpresas]       = useState(null);\r\n    const [submitted, setSubmitted]                     = useState(false);\r\n    const toast                                         = useRef(null);\r\n    const dt                                            = useRef(null);\r\n    const [stateEmpresa,setStateEmpresa]                = useState(false);\r\n    const [emailUpdate, setEmailUpdate]                 = useState(\"\");\r\n    const [empresaUpdate, setEmpresaUpdate]             = useState(\"\");\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            nombre:          '',\r\n            nombreCorto:     '',\r\n            nombreLargo:     '',\r\n            tipoSociedad:    '',\r\n            direccion:       '',\r\n            email:           '',\r\n            password:        '',\r\n            confirmPassword :'',\r\n            informacion:     '',\r\n            user:            ''\r\n            \r\n        },\r\n         validate: (data) => {\r\n            let errors = {};\r\n\r\n            if (!data.nombre) {\r\n                errors.nombre = \"Se requiere el nombre\";\r\n            } else if (data.nombre.length < 2) {\r\n                errors.nombre = \"Como minimo 2 caracteres\";\r\n            } else if (data.nombre.length > 30) {\r\n                errors.nombre = \"Como maximo 30 caracteres\";\r\n            } else if (!/^^[a-zA-Z\\s]+$/i.test(data.nombre)) {\r\n                errors.nombre = \"No se permiten numero o caracteres especiales\";\r\n            }else if(!esRepetidoEmpresa(data.nombre) && stateEmpresa === false){\r\n                errors.nombre = \"Ya existe el nombre de la empresa\";\r\n            } else if(!esRepetidoUpdateEmpresa(data.nombre,empresaUpdate) && stateEmpresa === true){\r\n                errors.nombre = \"Ya existe el nombre de la empresa\";  \r\n            }\r\n\r\n\r\n            if (!data.nombreCorto) {\r\n                errors.nombreCorto = \"Se requiere el nombre corto\";\r\n            } else if (data.nombreCorto.length < 2) {\r\n                errors.nombreCorto = \"Como minimo 2 caracteres\";\r\n            } else if (data.nombreCorto.length > 30) {\r\n                errors.nombreCorto = \"Como maximo 30 caracteres\";\r\n            } else if (!/^^[a-zA-Z\\s]+$/i.test(data.nombreCorto)) {\r\n                errors.nombreCorto = \"No se permiten numero o caracteres especiales\";\r\n            }\r\n\r\n            if (!data.nombreLargo) {\r\n                errors.nombreLargo = \"Se requiere el nombre largo\";\r\n            } else if (data.nombreLargo.length < 2) {\r\n                errors.nombreLargo = \"Como minimo 2 caracteres\";\r\n            } else if (data.nombreLargo.length > 50) {\r\n                errors.nombreLargo = \"Como maximo 50 caracteres\";\r\n            } else if (!/^^[a-zA-Z\\s]+$/i.test(data.nombreLargo)) {\r\n                errors.nombreLargo = \"No se permiten numero o caracteres especiales\";\r\n            }\r\n\r\n            if (!data.tipoSociedad) {\r\n                errors.tipoSociedad = \"Se requiere el tipo de sociedad\";\r\n            } else if (data.tipoSociedad.length < 2) {\r\n                errors.tipoSociedad = \"Como minimo 2 caracteres\";\r\n            } else if (data.tipoSociedad.length > 30) {\r\n                errors.tipoSociedad = \"Como maximo 30 caracteres\";\r\n            } else if (!/^^[a-zA-Z.\\s]+$/i.test(data.tipoSociedad)) {\r\n                errors.tipoSociedad = \"No se permiten numero o caracteres especiales\";\r\n            }\r\n\r\n            if (!data.direccion) {\r\n                errors.direccion = \"Se requiere la direccion\";\r\n            } else if (data.direccion.length < 2) {\r\n                errors.direccion = \"Como minimo 2 caracteres\";\r\n            } else if (data.direccion.length > 50) {\r\n                errors.direccion = \"Como maximo 50 caracteres\";\r\n            }else if (!/^^[a-zA-Z0-9.\\s]+$/i.test(data.direccion)) {\r\n                errors.direccion = \"No se permiten numero o caracteres especiales\";\r\n            }\r\n\r\n            if (!data.email) {\r\n                errors.email = \"Se requiere el correo electronico\";\r\n            } else if (data.email.length > 255) {\r\n                errors.email = \"Como maximo 255 caracteres\";\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(data.email)) {\r\n                errors.email = 'Dirección de correo electrónico inválida. P.ej. ejemplo@email.com';\r\n            }else if(!esRepetido(data.email) && stateEmpresa === false){\r\n                errors.email = \"Ya existe el correo electronico\";\r\n            } else if(!esRepetidoUpdate(data.email,emailUpdate) && stateEmpresa === true){\r\n                errors.email = \"Ya existe el correo electronico\";  \r\n            }\r\n\r\n            if (!data.password) {\r\n                errors.password = \"Se requiere la contraseña\";\r\n            } else if (data.password.length < 6) {\r\n                errors.password = \"Como minimo 6 caracteres\";\r\n            } else if (data.password.length > 255) {\r\n                errors.password = \"Como maximo 255 caracteres\";\r\n            }\r\n\r\n            if (!data.confirmPassword) {\r\n                errors.confirmPassword = \"Se requiere la confirmacion de la contraseña\";\r\n            }else if (data.confirmPassword != data.password) {\r\n                errors.confirmPassword = \"Las contraseñas deben coincidir\";\r\n            } \r\n\r\n            if (!data.informacion) {\r\n                errors.informacion = \"Se requiere la informacion de la empresa\";\r\n            } else if (data.informacion.length < 2) {\r\n                errors.informacion = \"Como minimo 2 caracteres\";\r\n            } else if (data.informacion.length > 255) {\r\n                errors.informacion = \"Como maximo 255 caracteres\";\r\n            } else if (!/^^[a-zA-Z0-9.\\s]+$/i.test(data.informacion)) {\r\n                errors.informacion = \"No se permiten numero o caracteres especiales\";\r\n            }\r\n\r\n            if (!data.user) {\r\n                errors.user = \"Se requiere el usuario\";\r\n            } else if (data.user.length < 2) {\r\n                errors.user = \"Como minimo 2 caracteres\";\r\n            } else if (data.user.length > 30) {\r\n                errors.user = \"Como maximo 30 caracteres\";\r\n            }else if (!/^^[a-zA-Z0-9\\s-]+$/i.test(data.user)) {\r\n                errors.user = \"No se permiten numero o caracteres especiales\";\r\n            }\r\n\r\n\r\n            return errors;\r\n        },\r\n\r\n        onSubmit: (data) => {\r\n            if(submitted === true){\r\n                let _empresas = [...empresas];\r\n                let _empresa  = {...empresa };\r\n                _empresa['nombre']            = data.nombre;\r\n                _empresa['nombreCorto']       = data.nombreCorto;\r\n                _empresa['nombreLargo']       = data.nombreLargo;\r\n                _empresa['tipoSociedad']      = data.tipoSociedad;\r\n                _empresa['direccion']         = data.direccion;\r\n                _empresa['email']             = data.email;\r\n                _empresa['password']          = data.password;\r\n                _empresa['confirmPassword']   = data.confirmPassword;\r\n                _empresa['informacion']       = data.informacion;\r\n                _empresa['user']              = data.user;\r\n\r\n\r\n                if (_empresa.nombre.trim()) {\r\n                    if (empresa.id) {\r\n\r\n                        setEmpresa({ ...empresa });\r\n                        console.log(empresa);\r\n                        const index = findIndexById(empresa.id);\r\n                        _empresas[index] = _empresa;\r\n                        updateEmpresaID({nombre:`${_empresa.nombre}`,nombreCorto:`${_empresa.nombreCorto}`,nombreLargo:`${_empresa.nombreLargo}`,tipoSociedad:`${_empresa.tipoSociedad}`,direccion:`${_empresa.direccion}`,email:`${_empresa.email}`,password:`${_empresa.password}`,informacion:`${_empresa.informacion}`,user:`${_empresa.user}`},empresa.id);\r\n                        toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Empresa Actualizado', life: 3000 });\r\n                    }\r\n                    else {\r\n\r\n                        _empresa.id = uniqid(\"empresa-\");\r\n                        _empresas.push(_empresa);\r\n                        console.log({id:`${_empresa.id}`,nombre:`${_empresa.nombre}`,nombreCorto:`${_empresa.nombreCorto}`,nombreLargo:`${_empresa.nombreLargo}`,tipoSociedad:`${_empresa.tipoSociedad}`,direccion:`${_empresa.direccion}`,email:`${_empresa.email}`,password:`${_empresa.password}`,informacion:`${_empresa.informacion}`,user:`${_empresa.user}`});\r\n                        createEmpresa({id:`${_empresa.id}`,nombre:`${_empresa.nombre}`,nombreCorto:`${_empresa.nombreCorto}`,nombreLargo:`${_empresa.nombreLargo}`,tipoSociedad:`${_empresa.tipoSociedad}`,direccion:`${_empresa.direccion}`,email:`${_empresa.email}`,password:`${_empresa.password}`,informacion:`${_empresa.informacion}`,user:`${_empresa.user}`});\r\n                        toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Empresa Creado', life: 3000 });\r\n                    }\r\n                }\r\n                setEmpresas(_empresas);\r\n                setEmpresaDialog(false);\r\n                setEmpresa(emptyEmpresa);\r\n                formik.resetForm();\r\n        }\r\n            \r\n        },\r\n      });\r\n\r\n    const isFormFieldValid = (name) => !!(formik.touched[name] && formik.errors[name]);\r\n    const getFormErrorMessage = (name) => {\r\n        return isFormFieldValid(name) && <small className=\"ml-1 p-error\" style={{'color': '#ff0000'}}>{formik.errors[name]}</small>;\r\n    };\r\n\r\n    const esRepetido =(value)=>{\r\n        var _empresas = [...empresas];\r\n        let res = _empresas.find(i => (i.email).toLowerCase() === (value).toLowerCase() );\r\n         if(res === undefined){\r\n             return true;\r\n         }else{\r\n             return false;\r\n         }\r\n    }\r\n    const esRepetidoUpdate =(value,original)=>{\r\n        var _empresas = [...empresas];\r\n        let aux = _empresas.filter(i =>(i.email).toLowerCase() != (original).toLowerCase())\r\n        let res = aux.find(i => (i.email).toLowerCase() === (value).toLowerCase() );\r\n         if(res === undefined || res === original){\r\n             return true;\r\n         }else{\r\n             return false;\r\n         }\r\n    }\r\n\r\n    const esRepetidoEmpresa =(value)=>{\r\n        var _empresas = [...empresas];\r\n        let res = _empresas.find(i => (i.nombre).toLowerCase().trim() === (value).toLowerCase().trim() );\r\n         if(res === undefined){\r\n             return true;\r\n         }else{\r\n             return false;\r\n         }\r\n    }\r\n    const esRepetidoUpdateEmpresa =(value,original)=>{\r\n        var _empresas = [...empresas];\r\n        let aux = _empresas.filter(i =>(i.nombre).toLowerCase().trim() != (original).toLowerCase().trim())\r\n        let res = aux.find(i => (i.nombre).toLowerCase().trim() === (value).toLowerCase().trim() );\r\n         if(res === undefined || res === original){\r\n             return true;\r\n         }else{\r\n             return false;\r\n         }\r\n    }\r\n\r\n\r\n    useEffect(()=>{\r\n        fetchUsers();\r\n    },[])\r\n\r\n    const fetchUsers = () =>{\r\n        getUsers().then(json =>{\r\n            if(json.error){\r\n                console.log(\"Error\");\r\n            }else{\r\n                console.log(\"---------Usuarios insertados-----------\");\r\n                setUsers(json.data);\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        fetchEmpresas();\r\n    },[])\r\n\r\n    const fetchEmpresas = () =>{\r\n        getEmpresas().then(json =>{\r\n            if(json.error){\r\n                console.log(\"Error\");\r\n            }else{\r\n                console.log(\"---------Empresas insertados-----------\");\r\n                setEmpresas(json.data);\r\n                setLoading(false);\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(stateEmpresa); //esta línea se ejecuta la primera vez que se renderiza y en todos los cambios que location tenga, aqui siempre tendrás el ultimo valor de location\r\n     }, [stateEmpresa])\r\n\r\n    const openNew = () => {\r\n        setEmpresa(emptyEmpresa);\r\n        formik.resetForm();\r\n        setSubmitted(false);\r\n        setStateEmpresa(false); \r\n        setEmpresaDialog(true);    \r\n    }\r\n\r\n    const hideDialog = () => {\r\n        setSubmitted(false);\r\n        setEmpresaDialog(false);\r\n    }\r\n\r\n    const showDialog = () => {\r\n        setSubmitted(true);\r\n        formik.handleSubmit();\r\n    }\r\n\r\n    const hideDeleteEmpresaDialog = () => {\r\n        setDeleteEmpresaDialog(false);\r\n    }\r\n\r\n    const editEmpresa = (empresa) => {\r\n        setEmpresa({ ...empresa });\r\n        setSubmitted(true);\r\n        formik.resetForm();\r\n        formik.setValues(\r\n        {\r\n            nombre:         `${empresa.nombre}`,\r\n            nombreCorto:    `${empresa.nombreCorto}`,\r\n            nombreLargo:    `${empresa.nombreLargo}`,\r\n            tipoSociedad:   `${empresa.tipoSociedad}`,\r\n            direccion:      `${empresa.direccion}`,\r\n            email:          `${empresa.email}`,\r\n            password:       `${empresa.password}`,\r\n            confirmPassword:`${empresa.password}`,\r\n            informacion:    `${empresa.informacion}`,\r\n            user:           `${empresa.user}`\r\n        });\r\n\r\n        setEmailUpdate(`${empresa.email}`);\r\n        setEmpresaUpdate(`${empresa.nombre}`);\r\n        setStateEmpresa(true);\r\n        setEmpresaDialog(true);\r\n    }\r\n\r\n    const confirmDeleteEmpresa = (empresa) => {\r\n        setEmpresa(empresa);\r\n        setDeleteEmpresaDialog(true);\r\n    }\r\n\r\n    const deleteEmpresa = () => {\r\n        let _empresas = empresas.filter(val => val.id !== empresa.id);\r\n        setEmpresas(_empresas);\r\n        setDeleteEmpresaDialog(false);\r\n\r\n        if (empresa.email.trim()) {\r\n            if (empresa.id) {\r\n                deleteEmpresaID(empresa.id);\r\n            }\r\n        }\r\n        setEmpresa(emptyEmpresa);\r\n        toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Empresa Eliminada', life: 3000 });\r\n    }\r\n\r\n    const findIndexById = (id) => {\r\n        let index = -1;\r\n        for (let i = 0; i < empresas.length; i++) {\r\n            if (empresas[i].id === id) {\r\n\r\n                index = i;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return index;\r\n    }\r\n\r\n    const idBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">id</span>\r\n                {rowData.id}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const nombreBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Nombre</span>\r\n                {rowData.nombre}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const nombreCortoBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Nombre Corto</span>\r\n                {rowData.nombreCorto}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const nombreLargoBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Nombre Largo</span>\r\n                {rowData.nombreLargo}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const tipoSociedadBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Tipo Sociedad</span>\r\n                {rowData.tipoSociedad}\r\n                \r\n            </>\r\n        );\r\n    }\r\n\r\n    \r\n\r\n\r\n    const direccionBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Direccion</span>\r\n                {rowData.direccion}\r\n               \r\n\r\n            </>\r\n        );\r\n    }\r\n\r\n    const emailBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Correo electronico</span>\r\n                {rowData.email}\r\n               \r\n\r\n            </>\r\n        );\r\n    }\r\n\r\n    const passwordBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">contraseña</span>\r\n                {rowData.password}\r\n               \r\n\r\n            </>\r\n        );\r\n    }\r\n\r\n    const informacionBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Informacion</span>\r\n                {rowData.informacion}\r\n               \r\n\r\n            </>\r\n        );\r\n    }\r\n\r\n    const userBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Usuario</span>\r\n                {rowData.user}\r\n               \r\n\r\n            </>\r\n        );\r\n    }\r\n\r\n\r\n    const leftToolbarTemplate = () => {\r\n        return (\r\n            <React.Fragment>\r\n                <Button style={props.layoutColorMode === 'light' ? {'color':'#ffffff','background': '#13af4e'} : {'color':'#ffffff','background': '#13af4e'}} label=\"Nuevo\" icon=\"pi pi-plus\" className=\"p-button-success p-mr-2\" onClick={openNew} />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    const actionBodyTemplate = (rowData) => {\r\n        return (\r\n            <div className=\"actions\">\r\n                <Button icon=\"pi pi-pencil\" style={{'background': '#13af4e'}} className=\"p-button-rounded p-button-success mr-2\"   onClick={() => editEmpresa(rowData)} />\r\n                <Button icon=\"pi pi-trash\"  style={{'background': '#eee500'}} className=\"p-button-rounded p-button-warning\"        onClick={() => confirmDeleteEmpresa(rowData)} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const deleteEmpresaDialogFooter = (\r\n        <>\r\n            <Button label=\"No\" icon=\"pi pi-times\" style={{'background': '#d13639','color':'#ffffff'}} className=\"p-button-text\" onClick={hideDeleteEmpresaDialog} />\r\n            <Button label=\"Si\" icon=\"pi pi-check\" style={props.layoutColorMode === 'light' ? {'color':'#13af4e','border-color':'#13af4e'} : {'color':'#13af4e','border-color':'#13af4e'}} className=\"p-button-text\" onClick={deleteEmpresa} />\r\n        </>\r\n    );\r\n\r\n\r\n    const renderHeader = () => {\r\n        return (\r\n            <div className=\"flex flex-column md:flex-row md:justify-content-between md:align-items-center\">\r\n            <h5 className=\"m-0\">Gestion de empresas</h5>\r\n            <span className=\"block mt-2 md:mt-0 p-input-icon-left\">\r\n                <i className=\"pi pi-search\" />\r\n                <InputText type=\"search\" onInput={(e) => setGlobalFilter(e.target.value)} placeholder=\"Buscar...\" />\r\n            </span>\r\n        </div>\r\n        )\r\n    }\r\n\r\n    const renderGroup = () => {\r\n        return (\r\n            <ColumnGroup>\r\n                <Row>\r\n                    <Column header={showHeader} colSpan={7}></Column>\r\n                </Row>\r\n                <Row>\r\n                    <Column header=\"ID\"                 field=\"id\"           sortable  style={{ 'background-color': '#13af4e', width:'20%'}} />\r\n                    <Column header=\"NOMBRE\"             field=\"nombre\"       sortable  style={{ 'background-color': '#13af4e', width:'20%'}} />\r\n                    <Column header=\"SOCIEDAD\"           field=\"tipoSociedad\" sortable  style={{ 'background-color': '#13af4e', width:'20%'}} />\r\n                    <Column header=\"DIRECCION\"          field=\"direccion\"    sortable  style={{ 'background-color': '#13af4e', width:'20%'}} />\r\n                    <Column header=\"CORREO ELECTRONICO\" field=\"email\"        sortable  style={{ 'background-color': '#13af4e', width:'25%'}} />\r\n                    <Column header=\"USUARIO\"            field=\"user\"         sortable  style={{ 'background-color': '#13af4e', width:'20%'}} />\r\n                    <Column header=\"Editar/Eliminar\"                         style={{ 'background-color': '#13af4e', width:'20%'}} />\r\n                </Row>\r\n            </ColumnGroup>\r\n        )\r\n    }\r\n\r\n\r\n    const showHeader  = renderHeader();\r\n    const headerGroup = renderGroup();\r\n\r\n\r\n    const headerDialog =()=>{\r\n        return (stateEmpresa)?\"Actualizando Empresa\":\"Añadir Empresa\"\r\n    }\r\n\r\n    return (\r\n        <div className=\"p-grid crud-demo\">\r\n            <div className=\"p-col-12\">\r\n                <div className=\"card\">\r\n                \r\n                    <Toast ref={toast} />\r\n                    <Toolbar className=\"\" left={leftToolbarTemplate}></Toolbar>\r\n\r\n                    <DataTable ref={dt} value={empresas} selection={selectedEmpresas}  onSelectionChange={(e) => setSelectedEmpresas(e.value)}\r\n                        dataKey=\"id\" rowHover paginator rows={10} rowsPerPageOptions={[5, 10, 25]} className=\"datatable-responsive p-datatable-sm p-datatable-gridlines p-datatable-striped\"\r\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\r\n                        currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} users\" resizableColumns columnResizeMode=\"fit\" showGridlines\r\n                        globalFilter={globalFilter} emptyMessage=\"No se encontro el rol\" loading={loading} headerColumnGroup={headerGroup}\r\n                        >\r\n                    \r\n                        <Column style={{width:'20%'}} field=\"id\"              header=\"ID\"                 sortable body={idBodyTemplate}            ></Column>\r\n                        <Column style={{width:'20%'}} field=\"nombre\"          header=\"NOMBRE\"             sortable body={nombreBodyTemplate}        ></Column>\r\n                        <Column style={{width:'20%'}} field=\"tipoSociedad\"    header=\"SOCIEDAD\"           sortable body={tipoSociedadBodyTemplate}  ></Column>\r\n                        <Column style={{width:'20%'}} field=\"direccion\"       header=\"DIRECCION\"          sortable body={direccionBodyTemplate}     ></Column>\r\n                        <Column style={{width:'25%'}} field=\"email\"           header=\"CORREO ELECTRONICO\" sortable body={emailBodyTemplate}         ></Column>\r\n                        <Column style={{width:'20%'}} field=\"user\"            header=\"USUARIO\"            sortable body={userBodyTemplate}          ></Column>\r\n\r\n                        <Column style={{width:'20%'}} body={actionBodyTemplate}></Column>\r\n\r\n                    </DataTable>\r\n\r\n\r\n                    <Dialog visible={empresaDialog} style={{ width: '450px' }} header={headerDialog} modal className=\"p-fluid\" onHide={hideDialog}>\r\n                        <form onSubmit={formik.handleSubmit}>\r\n                            <div className=\"p-field mt-2\" >\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <i className=\"pi pi-user\"></i>\r\n                                        </span>\r\n                                        <InputText id=\"nombre\" name='nombre' placeholder=\"Nombre\" value={formik.values.nombre} onChange={formik.handleChange} autoFocus/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('nombre')}\r\n\r\n                            <div className=\"p-field mt-2\" >\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <i className=\"pi pi-user\"></i>\r\n                                        </span>\r\n                                        <InputText id=\"nombreCorto\" name='nombreCorto' placeholder=\"Nombre Corto\" value={formik.values.nombreCorto} onChange={formik.handleChange}/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('nombreCorto')}\r\n\r\n                            <div className=\"p-field mt-2\" >\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <i className=\"pi pi-user\"></i>\r\n                                        </span>\r\n                                        <InputText id=\"nombreLargo\" name='nombreLargo' placeholder=\"Nombre Largo\" value={formik.values.nombreLargo} onChange={formik.handleChange}/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('nombreLargo')}\r\n\r\n                            <div className=\"p-field mt-2\" >\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <i className=\"pi pi-briefcase\"></i>\r\n                                        </span>\r\n                                        <Dropdown id=\"tipoSociedad\" name=\"tipoSociedad\" placeholder=\"Seleccione el tipo de sociedad\" value={formik.values.tipoSociedad} onChange={formik.handleChange} options={Sociedades} optionLabel=\"tipo\"  optionValue=\"tipo\"/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('tipoSociedad')}\r\n\r\n                            <div className=\"p-field mt-2\" >\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <i className=\"pi pi-map-marker\"></i>\r\n                                        </span>\r\n                                        <InputText id=\"direccion\" name='direccion' placeholder=\"Direccion\" value={formik.values.direccion} onChange={formik.handleChange}/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('direccion')}\r\n\r\n\r\n                            <div className=\"p-field mt-2\">\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <img   src={props.layoutColorMode === 'light' ? 'assets/layout/images/gmail.png' : 'assets/layout/images/gmail-dark.png'} style={{'height': '1.2em','width':'1.2em',}}/>  \r\n                                        </span>\r\n                                        <InputText id=\"email\" name='email' placeholder=\"Correo electronico\"  value={formik.values.email} onChange={formik.handleChange}/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('email')}\r\n\r\n                            <div className=\"p-field mt-2\">\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <img   src={props.layoutColorMode === 'light' ? 'assets/layout/images/password.png' : 'assets/layout/images/password-dark.png'} style={{'height': '1.2em','width':'1.2em',}}/>  \r\n                                        </span>\r\n                                        <Password id=\"password\" name='password' placeholder=\"Contraseña\"  value={formik.values.password} onChange={formik.handleChange} toggleMask  promptLabel=\"Por favor ingrese una contraseña\" weakLabel=\"Débil\" mediumLabel=\"Medio\" strongLabel=\"Fuerte\"/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('password')}\r\n\r\n                            <div className=\"p-field mt-2\">\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <img   src={props.layoutColorMode === 'light' ? 'assets/layout/images/password.png' : 'assets/layout/images/password-dark.png'} style={{'height': '1.2em','width':'1.2em',}}/>   \r\n                                        </span>\r\n                                        <Password id=\"confirmPassword\" name='confirmPassword' placeholder=\"Confirmar contraseña\"  value={formik.values.confirmPassword} onChange={formik.handleChange} toggleMask  promptLabel=\"Por favor ingrese una contraseña\" weakLabel=\"Débil\" mediumLabel=\"Medio\" strongLabel=\"Fuerte\"/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('confirmPassword')}\r\n\r\n                            <div className=\"p-field mt-2\" >\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <i className=\"pi pi-info\"></i>\r\n                                        </span>\r\n                                        <InputTextarea id=\"informacion\" name='informacion' placeholder=\"Informacion\" value={formik.values.informacion} onChange={formik.handleChange}/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('informacion')}\r\n\r\n                            <div className=\"p-field mt-2\" >\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <i className=\"pi pi-user\"></i>\r\n                                        </span>\r\n                                        <Dropdown id=\"user\" name=\"user\" placeholder=\"Seleccione un usuario\" value={formik.values.user} onChange={formik.handleChange} options={users} optionLabel=\"nombre\"  optionValue=\"id\"/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('user')}\r\n\r\n\r\n\r\n                            <div className='mt-2'>\r\n                                <div className=\"flex justify-content-center flex-wrap\">\r\n                                    <div className=\"flex align-items-center justify-content-center  m-2\">\r\n                                        <Button label=\"Cancelar\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDialog} style={props.layoutColorMode === 'light' ? {'color':'#d13639','border-color':'#d13639'} : {'color':'#d13639','border-color':'#d13639'}}/>\r\n                                    </div>\r\n                                    <div className=\"flex align-items-center justify-content-center  m-2\">\r\n                                        <Button label=\"Guardar\"  icon=\"pi pi-check\" type=\"submit\" className=\"p-button-text\" onClick={showDialog} style={{'background': '#13af4e','color':'#ffffff'}}/>  \r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </Dialog>\r\n\r\n\r\n                    <Dialog className=\"mt-2\" visible={deleteEmpresaDialog} style={{ width: '450px' }} header=\"Confirm\" modal footer={deleteEmpresaDialogFooter} onHide={hideDeleteEmpresaDialog}>\r\n                        <div className=\"confirmation-content\">\r\n                            <i className=\"pi pi-exclamation-triangle p-mr-3\" style={{ fontSize: '2rem' }} />\r\n                            {empresa && <span>¿Estás segura de que quieres eliminar? <b>{empresa.nombre}</b> <b>{empresa.tipoSociedadad}</b>?</span>}\r\n                        </div>\r\n                    </Dialog>\r\n    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport classNames           from 'classnames';\r\nimport { DataTable }        from 'primereact/datatable';\r\nimport { Column }           from 'primereact/column';\r\nimport { Toast }            from 'primereact/toast';\r\nimport { Button }           from 'primereact/button';\r\nimport { Toolbar }          from 'primereact/toolbar';\r\nimport { Dialog }           from 'primereact/dialog';\r\nimport { InputText }        from 'primereact/inputtext';\r\nimport { InputTextarea }    from 'primereact/inputtextarea';\r\nimport { Password }         from 'primereact/password';\r\nimport { ColumnGroup }      from 'primereact/columngroup';\r\nimport { Row }              from 'primereact/row';\r\nimport { Dropdown }         from 'primereact/dropdown';\r\nimport { useFormik }        from \"formik\";\r\nimport { Link }             from 'react-router-dom';\r\n\r\nimport uniqid               from 'uniqid';\r\n\r\nimport { getConvocatorias,getConvocatoriaID,createConvocatoria,updateConvocatoriaID,deleteConvocatoriaID} from '../service/apiConvocatoria';\r\nimport { getUsers } from '../service/apiUser';\r\n\r\nexport const Convocatoria = (props) => {\r\n\r\n    let emptyConvocatoria = {\r\n        id:        null,\r\n        titulo:    '',\r\n        codigo:    '',\r\n        semestre:  '',\r\n        link:      '',\r\n        estado:    '',\r\n        user:      ''\r\n    };\r\n\r\n    const semestres = [\r\n        { name: \"I-2020\" },\r\n        { name: \"II-2020\"},\r\n        { name: \"I-2021\"},\r\n        { name: \"II-2021\"},\r\n        { name: \"I-2022\"},\r\n        { name: \"II-2022\"}\r\n    ];\r\n\r\n    const publicacion = [\r\n        { name: \"Publicar\"     },\r\n        { name: \"No publicado\" }\r\n    ];\r\n\r\n    const [convocatorias, setConvocatorias]                          = useState(null);\r\n    const [users, setUsers]                                          = useState(null);\r\n    const [globalFilter, setGlobalFilter]                            = useState('');\r\n    const [loading, setLoading]                                      = useState(true);\r\n    const [convocatoriaDialog, setConvocatoriaDialog]                = useState(false);\r\n    const [deleteConvocatoriaDialog, setDeleteConvocatoriaDialog]    = useState(false);\r\n\r\n    const [convocatoria, setConvocatoria]                            = useState(emptyConvocatoria);\r\n    const [selectedConvocatorias, setSelectedConvocatorias]          = useState(null);\r\n    const [submitted, setSubmitted]                                  = useState(false);\r\n    const toast                                                      = useRef(null);\r\n    const dt                                                         = useRef(null);\r\n    const [stateConvocatoria,setStateConvocatoria]                   = useState(false);\r\n    const [convocatoriaUpdate, setConvocatoriaUpdate]                = useState(\"\");\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            titulo:    '',\r\n            codigo:    '',\r\n            semestre:  '',\r\n            link:      '',\r\n            estado:    '',\r\n            user:      ''\r\n        },\r\n         validate: (data) => {\r\n            let errors = {};\r\n\r\n            if (!data.titulo) {\r\n                errors.titulo = \"Se requiere el titulo\";\r\n            } else if (data.titulo.length < 2) {\r\n                errors.titulo = \"Como minimo 2 caracteres\";\r\n            } else if (data.titulo.length > 50) {\r\n                errors.titulo = \"Como maximo 50 caracteres\";\r\n            } else if (!/^^[a-zA-Z0-9\\s]+$/i.test(data.titulo)) {\r\n                errors.titulo = \"No se permiten numero o caracteres especiales\";\r\n            }\r\n\r\n            if (!data.codigo) {\r\n                errors.codigo = \"Se requiere el codigo\";\r\n            } else if (data.codigo.length < 2) {\r\n                errors.codigo = \"Como minimo 2 caracteres\";\r\n            } else if (data.codigo.length > 30) {\r\n                errors.codigo = \"Como maximo 30 caracteres\";\r\n            }else if (!/^^[a-zA-Z0-9\\s-]+$/i.test(data.codigo)) {\r\n                errors.codigo = \"No se permiten numero o caracteres especiales\";\r\n            }else if(!esRepetido(data.codigo) && stateConvocatoria === false){\r\n                errors.codigo = \"Ya existe el codigo\";\r\n            } else if(!esRepetidoUpdate(data.codigo,convocatoriaUpdate) && stateConvocatoria === true){\r\n                errors.codigo = \"Ya existe el codigo\";  \r\n            }\r\n\r\n            \r\n            if (!data.semestre) {\r\n                errors.semestre = \"Se requiere el semestre\";\r\n            } else if (data.semestre.length < 2) {\r\n                errors.semestre = \"Como minimo 2 caracteres\";\r\n            } else if (data.semestre.length > 30) {\r\n                errors.semestre = \"Como maximo 30 caracteres\";\r\n            }else if (!/^^[a-zA-Z0-9\\s-]+$/i.test(data.semestre)) {\r\n                errors.semestre = \"No se permiten numero o caracteres especiales\";\r\n            }\r\n\r\n            if (!data.link) {\r\n                errors.link = \"Se requiere el link\";\r\n            }else if (data.link.length > 500) {\r\n                errors.link = \"Como maximo 500 caracteres\";\r\n            }else if (!/^(ftp|http|https):\\/\\/[^ \"]+$/.test(data.link)) {\r\n               errors.link = \"El link no es valido\";\r\n            }\r\n \r\n            if (!data.estado) {\r\n                errors.estado = \"Se requiere el estado\";\r\n            } \r\n\r\n            if (!data.user) {\r\n                errors.user = \"Se requiere el usuario\";\r\n            } else if (data.user.length < 2) {\r\n                errors.user = \"Como minimo 2 caracteres\";\r\n            } else if (data.user.length > 30) {\r\n                errors.user = \"Como maximo 30 caracteres\";\r\n            }else if (!/^^[a-zA-Z0-9\\s-]+$/i.test(data.user)) {\r\n                errors.user = \"No se permiten numero o caracteres especiales\";\r\n            }\r\n\r\n            return errors;\r\n        },\r\n\r\n        onSubmit: (data) => {\r\n            if(submitted === true){\r\n                let _convocatorias = [...convocatorias];\r\n                let _convocatoria  = {...convocatoria };\r\n                _convocatoria['titulo']     = data.titulo;\r\n                _convocatoria['codigo']     = data.codigo;\r\n                _convocatoria['semestre']   = data.semestre;\r\n                _convocatoria['link']       = data.link;\r\n                _convocatoria['estado']     = data.estado;\r\n                _convocatoria['user']       = data.user;\r\n\r\n                if (_convocatoria.titulo.trim()) {\r\n                    if (convocatoria.id) {\r\n\r\n                        setConvocatoria({ ...convocatoria });\r\n                        const index = findIndexById(convocatoria.id);\r\n                        _convocatorias[index] = _convocatoria;\r\n                        updateConvocatoriaID({titulo:`${_convocatoria.titulo}`,codigo:`${_convocatoria.codigo}`,semestre:`${_convocatoria.semestre}`,link:`${_convocatoria.link}`,estado:`${_convocatoria.estado}`,user:`${_convocatoria.user}`},convocatoria.id);\r\n                        toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Convocatoria Actualizada', life: 3000 });\r\n                    }\r\n                    else {\r\n\r\n                        _convocatoria.id = uniqid(\"conv-\");\r\n                        _convocatorias.push(_convocatoria);\r\n                        console.log({id:`${_convocatoria.id}`,titulo:`${_convocatoria.titulo}`,codigo:`${_convocatoria.codigo}`,semestre:`${_convocatoria.semestre}`,link:`${_convocatoria.link}`,estado:`${_convocatoria.estado}`,user:`${_convocatoria.user}`});\r\n                        createConvocatoria({id:`${_convocatoria.id}`,titulo:`${_convocatoria.titulo}`,codigo:`${_convocatoria.codigo}`,semestre:`${_convocatoria.semestre}`,link:`${_convocatoria.link}`,estado:`${_convocatoria.estado}`,user:`${_convocatoria.user}`});\r\n                        toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Convocatoria Creada', life: 3000 });\r\n                    }\r\n                }\r\n                setConvocatorias(_convocatorias);\r\n                setConvocatoriaDialog(false);\r\n                setConvocatoria(emptyConvocatoria);\r\n                formik.resetForm();\r\n        }\r\n            \r\n        },\r\n      });\r\n\r\n      const esRepetido =(value)=>{\r\n        var _convocatorias = [...convocatorias];\r\n        let res = _convocatorias.find(i => (i.codigo).toLowerCase().trim() === (value).toLowerCase().trim() );\r\n         if(res === undefined){\r\n             return true;\r\n         }else{\r\n             return false;\r\n         }\r\n    }\r\n    const esRepetidoUpdate =(value,original)=>{\r\n        var _convocatorias = [...convocatorias];\r\n        let aux = _convocatorias.filter(i =>(i.codigo).toLowerCase()!= (original).toLowerCase())\r\n        let res = aux.find(i => (i.codigo).toLowerCase().trim() === (value).toLowerCase().trim() );\r\n         if(res === undefined || res === original){\r\n             return true;\r\n         }else{\r\n             return false;\r\n         }\r\n    }\r\n\r\n    const isFormFieldValid = (name) => !!(formik.touched[name] && formik.errors[name]);\r\n    const getFormErrorMessage = (name) => {\r\n        return isFormFieldValid(name) && <small className=\"ml-1 p-error\" style={{'color': '#ff0000'}}>{formik.errors[name]}</small>;\r\n    };\r\n\r\n    useEffect(()=>{\r\n        fetchConvocatorias();\r\n    },[])\r\n\r\n    const fetchConvocatorias = () =>{\r\n        getConvocatorias().then(json =>{\r\n            if(json.error){\r\n                console.log(\"Error\");\r\n            }else{\r\n                console.log(\"---------Convocatorias insertados-----------\");\r\n                setConvocatorias(json.data);\r\n                setLoading(false);\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        fetchUsers();\r\n    },[])\r\n\r\n    const fetchUsers = () =>{\r\n        getUsers().then(json =>{\r\n            if(json.error){\r\n                console.log(\"Error\");\r\n            }else{\r\n                console.log(\"---------Users insertados-----------\");\r\n                setUsers(json.data);\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(stateConvocatoria); //esta línea se ejecuta la primera vez que se renderiza y en todos los cambios que location tenga, aqui siempre tendrás el ultimo valor de location\r\n     }, [stateConvocatoria])\r\n\r\n    const openNew = () => {\r\n        setConvocatoria(emptyConvocatoria);\r\n        formik.resetForm();\r\n        setSubmitted(false);\r\n        setStateConvocatoria(false); \r\n        setConvocatoriaDialog(true);    \r\n    }\r\n\r\n    const hideDialog = () => {\r\n        setSubmitted(false);\r\n        setConvocatoriaDialog(false);\r\n    }\r\n\r\n    const showDialog = () => {\r\n        setSubmitted(true);\r\n        formik.handleSubmit();\r\n    }\r\n\r\n    const hideDeleteConvocatoriaDialog = () => {\r\n        setDeleteConvocatoriaDialog(false);\r\n    }\r\n\r\n    const editConvocatoria = (convocatoria) => {\r\n        setConvocatoria({ ...convocatoria });\r\n        setSubmitted(true);\r\n        formik.resetForm();\r\n        formik.setValues(\r\n        {\r\n            titulo:    `${convocatoria.titulo}`,\r\n            codigo:    `${convocatoria.codigo}`,\r\n            semestre:  `${convocatoria.semestre}`,\r\n            link:      `${convocatoria.link}`,\r\n            estado:    `${convocatoria.estado}`,\r\n            user:      `${convocatoria.user}`\r\n        });\r\n        setConvocatoriaUpdate(`${convocatoria.codigo}`);\r\n        setStateConvocatoria(true);\r\n        setConvocatoriaDialog(true);\r\n    }\r\n\r\n    const confirmDeleteConvocatoria = (convocatoria) => {\r\n        setConvocatoria(convocatoria);\r\n        setDeleteConvocatoriaDialog(true);\r\n    }\r\n\r\n    const deleteConvocatoria = () => {\r\n        let _convocatorias = convocatorias.filter(val => val.id !== convocatoria.id);\r\n        setConvocatorias(_convocatorias);\r\n        setDeleteConvocatoriaDialog(false);\r\n\r\n        if (convocatoria.titulo.trim()) {\r\n            if (convocatoria.id) {\r\n                deleteConvocatoriaID(convocatoria.id);\r\n            }\r\n        }\r\n        setConvocatoria(emptyConvocatoria);\r\n        toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Convocatoria Eliminada', life: 3000 });\r\n    }\r\n\r\n    const findIndexById = (id) => {\r\n        let index = -1;\r\n        for (let i = 0; i < convocatorias.length; i++) {\r\n            if (convocatorias[i].id === id) {\r\n\r\n                index = i;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return index;\r\n    }\r\n\r\n    const idBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">id</span>\r\n                {rowData.id}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const tituloBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Titulo</span>\r\n                {rowData.titulo}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const codigoBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Codigo</span>\r\n                {rowData.codigo}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const semestreBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Semestre</span>\r\n                {rowData.semestre}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const linkBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Link</span>\r\n                <Button label=\"Ver documento\" className=\"p-button-link\" onClick={() => window.open(`${rowData.link}`)} style={props.layoutColorMode === 'light' ? {'color':'#495057', 'font-weight': 'bold' , 'text-align': 'justify'} : {'color':'#ffffff', 'font-weight': 'bold' , 'text-align': 'justify'}}/>      \r\n            </>\r\n        );\r\n    }\r\n\r\n    const estadoBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Estado</span>\r\n                {rowData.estado}\r\n            </>\r\n        );\r\n    }\r\n\r\n    \r\n\r\n\r\n    const userBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">User</span>\r\n                {rowData.user}\r\n               \r\n\r\n            </>\r\n        );\r\n    }\r\n\r\n    const leftToolbarTemplate = () => {\r\n        return (\r\n            <React.Fragment>\r\n                <Button style={props.layoutColorMode === 'light' ? {'color':'#ffffff','background': '#13af4e'} : {'color':'#ffffff','background': '#13af4e'}} label=\"Nuevo\" icon=\"pi pi-plus\" className=\"p-button-success p-mr-2\" onClick={openNew} />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    const actionBodyTemplate = (rowData) => {\r\n        return (\r\n            <div className=\"actions\">\r\n                <Button icon=\"pi pi-pencil\" style={{'background': '#13af4e'}} className=\"p-button-rounded p-button-success mr-2\"   onClick={() => editConvocatoria(rowData)} />\r\n                <Button icon=\"pi pi-trash\"  style={{'background': '#eee500'}} className=\"p-button-rounded p-button-warning\"        onClick={() => confirmDeleteConvocatoria(rowData)} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const deleteConvocatoriaDialogFooter = (\r\n        <>\r\n            <Button label=\"No\" icon=\"pi pi-times\" style={{'background': '#d13639','color':'#ffffff'}} className=\"p-button-text\" onClick={hideDeleteConvocatoriaDialog} />\r\n            <Button label=\"Si\" icon=\"pi pi-check\" style={props.layoutColorMode === 'light' ? {'color':'#13af4e','border-color':'#13af4e'} : {'color':'#13af4e','border-color':'#13af4e'}} className=\"p-button-text\" onClick={deleteConvocatoria} />\r\n        </>\r\n    );\r\n\r\n\r\n\r\n    const renderHeader = () => {\r\n        return (\r\n            <div className=\"flex flex-column md:flex-row md:justify-content-between md:align-items-center\">\r\n            <h5 className=\"m-0\">Gestion de convocatorias</h5>\r\n            <span className=\"block mt-2 md:mt-0 p-input-icon-left\">\r\n                <i className=\"pi pi-search\" />\r\n                <InputText type=\"search\" onInput={(e) => setGlobalFilter(e.target.value)} placeholder=\"Buscar...\" />\r\n            </span>\r\n        </div>\r\n        )\r\n    }\r\n\r\n    const renderGroup = () => {\r\n        return (\r\n            <ColumnGroup>\r\n                <Row>\r\n                    <Column header={showHeader} colSpan={8}></Column>\r\n                </Row>\r\n                <Row>\r\n                    <Column header=\"ID\"                 field=\"id\"       sortable style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                    <Column header=\"TITULO\"             field=\"titulo\"   sortable style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                    <Column header=\"CODIGO\"             field=\"codigo\"   sortable style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                    <Column header=\"SEMESTRE\"           field=\"semestre\" sortable style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                    <Column header=\"LINK\"               field=\"link\"     sortable style={{ 'background-color': '#13af4e', width:'40%'}}/>\r\n                    <Column header=\"ESTADO\"             field=\"estado\"   sortable style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                    <Column header=\"USUARIO\"            field=\"user\"     sortable style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                    <Column header=\"Editar/Eliminar\"                              style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                </Row>\r\n            </ColumnGroup>\r\n        )\r\n    }\r\n\r\n\r\n    const showHeader  = renderHeader();\r\n    const headerGroup = renderGroup();\r\n\r\n\r\n\r\n    const headerDialog =()=>{\r\n        return (stateConvocatoria)?\"Actualizando convocatoria\":\"Añadir convocatoria\"\r\n    }\r\n\r\n    return (\r\n        <div className=\"p-grid crud-demo\">\r\n            <div className=\"p-col-12\">\r\n                <div className=\"card\">\r\n                \r\n                    <Toast ref={toast} />\r\n                    <Toolbar className=\"\" left={leftToolbarTemplate}></Toolbar>\r\n\r\n                    <DataTable headerColumnGroup={headerGroup} ref={dt} value={convocatorias} selection={selectedConvocatorias}  onSelectionChange={(e) => setSelectedConvocatorias(e.value)}\r\n                        dataKey=\"id\" rowHover paginator rows={10} rowsPerPageOptions={[5, 10, 25]} className=\"datatable-responsive p-datatable-sm p-datatable-gridlines p-datatable-striped\"\r\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\r\n                        currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} users\" resizableColumns columnResizeMode=\"fit\" showGridlines\r\n                        globalFilter={globalFilter} emptyMessage=\"No se encontro el rol\" loading={loading} headerColumnGroup={headerGroup}\r\n                        >\r\n                    \r\n                        <Column style={{width:'20%'}} field=\"id\"       header=\"ID\"       sortable body={idBodyTemplate}></Column>\r\n                        <Column style={{width:'20%'}} field=\"titulo\"   header=\"TITULO\"   sortable body={tituloBodyTemplate}></Column>\r\n                        <Column style={{width:'20%'}} field=\"codigo\"   header=\"CODIGO\"   sortable body={codigoBodyTemplate}></Column>\r\n                        <Column style={{width:'20%'}} field=\"semestre\" header=\"SEMESTRE\" sortable body={semestreBodyTemplate}></Column>\r\n                        <Column style={{width:'40%'}} field=\"link\"     header=\"LINK\"     sortable body={linkBodyTemplate}></Column>\r\n                        <Column style={{width:'20%'}} field=\"estado\"   header=\"ESTADO\"   sortable body={estadoBodyTemplate}></Column>\r\n                        <Column style={{width:'20%'}} field=\"user\"     header=\"USER\"     sortable body={userBodyTemplate}></Column>\r\n                        <Column style={{width:'20%'}} body={actionBodyTemplate}></Column>\r\n\r\n                    </DataTable>\r\n\r\n\r\n                    <Dialog visible={convocatoriaDialog} style={{ width: '450px' }} header={headerDialog} modal className=\"p-fluid\" onHide={hideDialog}>\r\n                        <form onSubmit={formik.handleSubmit}>\r\n                            <div className=\"p-field mt-2\" >\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <img   src={props.layoutColorMode === 'light' ? 'assets/layout/images/title.png' : 'assets/layout/images/title-dark.png'} style={{'height': '1.2em','width':'1.2em',}}/>  \r\n                                        </span>\r\n                                        <InputText id=\"titulo\" name='titulo' placeholder=\"Titulo\" value={formik.values.titulo} onChange={formik.handleChange} autoFocus/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('titulo')}\r\n\r\n                            <div className=\"p-field mt-2\">\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <img   src={props.layoutColorMode === 'light' ? 'assets/layout/images/code.png' : 'assets/layout/images/code-dark.png'} style={{'height': '1.2em','width':'1.2em',}}/>  \r\n                                        </span>\r\n                                        <InputText id=\"codigo\" name='codigo' placeholder=\"Codigo\" value={formik.values.codigo} onChange={formik.handleChange}/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('codigo')}\r\n\r\n                            \r\n                            <div className=\"p-field mt-2\">\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <i className=\"pi pi-calendar\"></i>\r\n                                        </span>\r\n                                        <Dropdown id=\"semestre\" name=\"semestre\" placeholder=\"Seleccione el semestre\" value={formik.values.semestre} onChange={formik.handleChange} options={semestres} optionLabel=\"name\"  optionValue=\"name\"/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('semestre')}\r\n\r\n                            <div className=\"p-field mt-2\">\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <i className=\"pi pi-link\"></i>\r\n                                        </span>\r\n                                        <InputTextarea id=\"link\" name='link' placeholder=\"Link\"  value={formik.values.link} onChange={formik.handleChange}/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('link')}\r\n\r\n                            <div className=\"p-field mt-2\">\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <img   src={props.layoutColorMode === 'light' ? 'assets/layout/images/post.png' : 'assets/layout/images/post-dark.png'} style={{'height': '1.2em','width':'1.2em',}}/>  \r\n                                        </span>\r\n                                        <Dropdown id=\"estado\" name=\"estado\" placeholder=\"Seleccione un estado\" value={formik.values.estado} onChange={formik.handleChange} options={publicacion} optionLabel=\"name\"  optionValue=\"name\"/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('estado')}\r\n\r\n                            <div className=\"p-field mt-2\">\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <i className=\"pi pi-user\"></i>\r\n                                        </span>\r\n                                        <Dropdown id=\"user\" name=\"user\" placeholder=\"Seleccione un usuario\" value={formik.values.user} onChange={formik.handleChange} options={users} optionLabel=\"nombre\"  optionValue=\"id\"/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('user')}\r\n\r\n\r\n                            <div className='mt-2'>\r\n                                <div className=\"flex justify-content-center flex-wrap\">\r\n                                    <div className=\"flex align-items-center justify-content-center  m-2\">\r\n                                        <Button label=\"Cancelar\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDialog} style={props.layoutColorMode === 'light' ? {'color':'#d13639','border-color':'#d13639'} : {'color':'#d13639','border-color':'#d13639'}}/>\r\n                                    </div>\r\n                                    <div className=\"flex align-items-center justify-content-center  m-2\">\r\n                                        <Button label=\"Guardar\"  icon=\"pi pi-check\" type=\"submit\" className=\"p-button-text\" onClick={showDialog} style={{'background': '#13af4e','color':'#ffffff'}}/>  \r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </Dialog>\r\n\r\n\r\n                    <Dialog className=\"mt-2\" visible={deleteConvocatoriaDialog} style={{ width: '450px' }} header=\"Confirm\" modal footer={deleteConvocatoriaDialogFooter} onHide={hideDeleteConvocatoriaDialog}>\r\n                        <div className=\"confirmation-content\">\r\n                            <i className=\"pi pi-exclamation-triangle p-mr-3\" style={{ fontSize: '2rem' }} />\r\n                            {convocatoria && <span>¿Estás segura de que quieres eliminar? <b>{convocatoria.titulo}</b> <b>{convocatoria.semestre}</b>?</span>}\r\n                        </div>\r\n                    </Dialog>\r\n    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import axios from 'axios';\r\n\r\n export const getConvocatorias = () =>{\r\n     return axios.get('https://magic-tech-backend.herokuapp.com/api/getConvocatorias');\r\n }\r\n\r\n export const getConvocatoriaID =(id) =>{\r\n     return axios.get(`https://magic-tech-backend.herokuapp.com/api/getConvocatoriaId/${id}`);\r\n }\r\n\r\n\r\n\r\n export const createConvocatoria=(data)=>{\r\n    return axios.post('https://magic-tech-backend.herokuapp.com/api/createConvocatoria', \r\n      {\r\n         id:        `${data.id}`,\r\n         titulo:    `${data.titulo}`,\r\n         codigo:    `${data.codigo}`,\r\n         semestre:  `${data.semestre}`,\r\n         link:      `${data.link}`,\r\n         estado:    `${data.estado}`,\r\n         user:      `${data.user}`     \r\n      }\r\n      )\r\n      .then(function (response) {\r\n        console.log(response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n }\r\n\r\nexport const updateConvocatoriaID =(data,id) =>{\r\n    return axios.put(`https://magic-tech-backend.herokuapp.com/api/updateConvocatoria/${id}`, \r\n    {\r\n        titulo:    `${data.titulo}`,\r\n        codigo:    `${data.codigo}`,\r\n        semestre:  `${data.semestre}`,\r\n        link:      `${data.link}`,\r\n        estado:    `${data.estado}`,\r\n        user:      `${data.user}`\r\n    }\r\n    )\r\n    .then(function (response) {\r\n      console.log(response);\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error);\r\n    });\r\n}\r\n\r\nexport const deleteConvocatoriaID =(id) =>{\r\n    return axios.delete(`https://magic-tech-backend.herokuapp.com/api/deleteConvocatoriaId/${id}`);\r\n}\r\n\r\nexport const getConvocatoriasPublicados = () =>{\r\n  return axios.get('https://magic-tech-backend.herokuapp.com/api/getConvocatoriasPublicados');\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport classNames           from 'classnames';\r\nimport { DataTable }        from 'primereact/datatable';\r\nimport { Column }           from 'primereact/column';\r\nimport { Toast }            from 'primereact/toast';\r\nimport { Button }           from 'primereact/button';\r\nimport { Toolbar }          from 'primereact/toolbar';\r\nimport { Dialog }           from 'primereact/dialog';\r\nimport { InputText }        from 'primereact/inputtext';\r\nimport { InputTextarea }    from 'primereact/inputtextarea';\r\nimport { Password }         from 'primereact/password';\r\nimport { ColumnGroup }      from 'primereact/columngroup';\r\nimport { Row }              from 'primereact/row';\r\nimport { Dropdown }         from 'primereact/dropdown';\r\nimport { useFormik }        from \"formik\";\r\nimport { Link }             from 'react-router-dom';\r\n\r\nimport uniqid               from 'uniqid';\r\n\r\nimport { getPliegos,createPliego,updatePliegoID,deletePliegoID} from '../service/apiPliego';\r\nimport { getUsers } from '../service/apiUser';\r\n\r\nexport const PliegoEspecificacion = (props) => {\r\n\r\n    let emptyPliego = {\r\n        id:        null,\r\n        titulo:    '',\r\n        codigo:    '',\r\n        semestre:  '',\r\n        link:      '',\r\n        estado:    '',\r\n        user:      ''\r\n    };\r\n\r\n    const semestres = [\r\n        { name: \"I-2020\" },\r\n        { name: \"II-2020\"},\r\n        { name: \"I-2021\"},\r\n        { name: \"II-2021\"},\r\n        { name: \"I-2022\"},\r\n        { name: \"II-2022\"}\r\n    ];\r\n\r\n    const publicacion = [\r\n        { name: \"Publicar\"     },\r\n        { name: \"No publicado\" }\r\n    ];\r\n\r\n    const [pliegos, setPliegos]                          = useState(null);\r\n    const [users, setUsers]                              = useState(null);\r\n    const [globalFilter, setGlobalFilter]                = useState('');\r\n    const [loading, setLoading]                          = useState(true);\r\n    const [pliegoDialog, setPliegoDialog]                = useState(false);\r\n    const [deletePliegoDialog, setDeletePliegoDialog]    = useState(false);\r\n\r\n    const [pliego, setPliego]                            = useState(emptyPliego);\r\n    const [selectedPliegos, setSelectedPliegos]          = useState(null);\r\n    const [submitted, setSubmitted]                      = useState(false);\r\n    const toast                                          = useRef(null);\r\n    const dt                                             = useRef(null);\r\n    const [statePliego,setStatePliego]                   = useState(false);\r\n    const [pliegoUpdate, setPliegoUpdate]                = useState(\"\");\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            titulo:    '',\r\n            codigo:    '',\r\n            semestre:  '',\r\n            link:      '',\r\n            estado:    '',\r\n            user:      ''\r\n        },\r\n         validate: (data) => {\r\n            let errors = {};\r\n\r\n            if (!data.titulo) {\r\n                errors.titulo = \"Se requiere el titulo\";\r\n            } else if (data.titulo.length < 2) {\r\n                errors.titulo = \"Como minimo 2 caracteres\";\r\n            } else if (data.titulo.length > 50) {\r\n                errors.titulo = \"Como maximo 50 caracteres\";\r\n            } else if (!/^^[a-zA-Z0-9\\s]+$/i.test(data.titulo)) {\r\n                errors.titulo = \"No se permiten numero o caracteres especiales\";\r\n            }\r\n\r\n            if (!data.codigo) {\r\n                errors.codigo = \"Se requiere el codigo\";\r\n            } else if (data.codigo.length < 2) {\r\n                errors.codigo = \"Como minimo 2 caracteres\";\r\n            } else if (data.codigo.length > 30) {\r\n                errors.codigo = \"Como maximo 30 caracteres\";\r\n            }else if (!/^^[a-zA-Z0-9\\s-]+$/i.test(data.codigo)) {\r\n                errors.codigo = \"No se permiten numero o caracteres especiales\";\r\n            }else if(!esRepetido(data.codigo) && statePliego === false){\r\n                errors.codigo = \"Ya existe el codigo\";\r\n            } else if(!esRepetidoUpdate(data.codigo,pliegoUpdate) && statePliego === true){\r\n                errors.codigo = \"Ya existe el codigo\";  \r\n            }\r\n\r\n            \r\n            if (!data.semestre) {\r\n                errors.semestre = \"Se requiere el semestre\";\r\n            } else if (data.semestre.length < 2) {\r\n                errors.semestre = \"Como minimo 2 caracteres\";\r\n            } else if (data.semestre.length > 30) {\r\n                errors.semestre = \"Como maximo 30 caracteres\";\r\n            }else if (!/^^[a-zA-Z0-9\\s-]+$/i.test(data.semestre)) {\r\n                errors.semestre = \"No se permiten numero o caracteres especiales\";\r\n            }\r\n\r\n            if (!data.link) {\r\n                errors.link = \"Se requiere el link\";\r\n            }else if (data.link.length > 500) {\r\n                errors.link = \"Como maximo 500 caracteres\";\r\n            }else if (!/^(ftp|http|https):\\/\\/[^ \"]+$/.test(data.link)) {\r\n                errors.link = \"El link no es valido\";\r\n            }\r\n\r\n            if (!data.estado) {\r\n                errors.estado = \"Se requiere el estado\";\r\n            } \r\n\r\n            if (!data.user) {\r\n                errors.user = \"Se requiere el usuario\";\r\n            } else if (data.user.length < 2) {\r\n                errors.user = \"Como minimo 2 caracteres\";\r\n            } else if (data.user.length > 30) {\r\n                errors.user = \"Como maximo 30 caracteres\";\r\n            }else if (!/^^[a-zA-Z0-9\\s-]+$/i.test(data.user)) {\r\n                errors.user = \"No se permiten numero o caracteres especiales\";\r\n            }\r\n\r\n            return errors;\r\n        },\r\n\r\n        onSubmit: (data) => {\r\n            if(submitted === true){\r\n                let _pliegos = [...pliegos];\r\n                let _pliego  = {...pliego };\r\n                _pliego['titulo']     = data.titulo;\r\n                _pliego['codigo']     = data.codigo;\r\n                _pliego['semestre']   = data.semestre;\r\n                _pliego['link']       = data.link;\r\n                _pliego['estado']     = data.estado;\r\n                _pliego['user']       = data.user;\r\n\r\n                if (_pliego.titulo.trim()) {\r\n                    if (pliego.id) {\r\n\r\n                        setPliego({ ...pliego });\r\n                        const index = findIndexById(pliego.id);\r\n                        _pliegos[index] = _pliego;\r\n                        updatePliegoID({titulo:`${_pliego.titulo}`,codigo:`${_pliego.codigo}`,semestre:`${_pliego.semestre}`,link:`${_pliego.link}`,estado:`${_pliego.estado}`,user:`${_pliego.user}`},pliego.id);\r\n                        toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Pliego de especificaciones Actualizada', life: 3000 });\r\n                    }\r\n                    else {\r\n\r\n                        _pliego.id = uniqid(\"plieg-\");\r\n                        _pliegos.push(_pliego);\r\n                        createPliego({id:`${_pliego.id}`,titulo:`${_pliego.titulo}`,codigo:`${_pliego.codigo}`,semestre:`${_pliego.semestre}`,link:`${_pliego.link}`,estado:`${_pliego.estado}`,user:`${_pliego.user}`});\r\n                        toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Pliego de especificaciones Creada', life: 3000 });\r\n                    }\r\n                }\r\n                setPliegos(_pliegos);\r\n                setPliegoDialog(false);\r\n                setPliego(emptyPliego);\r\n                formik.resetForm();\r\n        }\r\n            \r\n        },\r\n      });\r\n\r\n    const esRepetido =(value)=>{\r\n        var _pliegos = [...pliegos];\r\n        let res = _pliegos.find(i => (i.codigo).toLowerCase().trim() === (value).toLowerCase().trim() );\r\n         if(res === undefined){\r\n             return true;\r\n         }else{\r\n             return false;\r\n         }\r\n    }\r\n    const esRepetidoUpdate =(value,original)=>{\r\n        var _pliegos = [...pliegos];\r\n        let aux = _pliegos.filter(i =>(i.codigo).toLowerCase().trim() != (original).toLowerCase().trim())\r\n        let res = aux.find(i => (i.codigo).toLowerCase().trim() === (value).toLowerCase().trim() );\r\n         if(res === undefined || res === original){\r\n             return true;\r\n         }else{\r\n             return false;\r\n         }\r\n    }\r\n\r\n    const isFormFieldValid = (name) => !!(formik.touched[name] && formik.errors[name]);\r\n    const getFormErrorMessage = (name) => {\r\n        return isFormFieldValid(name) && <small className=\"ml-1 p-error\" style={{'color': '#ff0000'}}>{formik.errors[name]}</small>;\r\n    };\r\n\r\n    useEffect(()=>{\r\n        fetchPliegos();\r\n    },[])\r\n\r\n    const fetchPliegos = () =>{\r\n        getPliegos().then(json =>{\r\n            if(json.error){\r\n                console.log(\"Error\");\r\n            }else{\r\n                console.log(\"---------Pliego de espeficiaciones insertados-----------\");\r\n                setPliegos(json.data);\r\n                setLoading(false);\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        fetchUsers();\r\n    },[])\r\n\r\n    const fetchUsers = () =>{\r\n        getUsers().then(json =>{\r\n            if(json.error){\r\n                console.log(\"Error\");\r\n            }else{\r\n                console.log(\"---------Users insertados-----------\");\r\n                setUsers(json.data);\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(statePliego); //esta línea se ejecuta la primera vez que se renderiza y en todos los cambios que location tenga, aqui siempre tendrás el ultimo valor de location\r\n     }, [statePliego])\r\n\r\n    const openNew = () => {\r\n        setPliego(emptyPliego);\r\n        formik.resetForm();\r\n        setSubmitted(false);\r\n        setStatePliego(false); \r\n        setPliegoDialog(true);    \r\n    }\r\n\r\n    const hideDialog = () => {\r\n        setSubmitted(false);\r\n        setPliegoDialog(false);\r\n    }\r\n\r\n    const showDialog = () => {\r\n        setSubmitted(true);\r\n        formik.handleSubmit();\r\n    }\r\n\r\n    const hideDeletePliegoDialog = () => {\r\n        setDeletePliegoDialog(false);\r\n    }\r\n\r\n    const editPliego = (pliego) => {\r\n        setPliego({ ...pliego });\r\n        setSubmitted(true);\r\n        formik.resetForm();\r\n        formik.setValues(\r\n        {\r\n            titulo:    `${pliego.titulo}`,\r\n            codigo:    `${pliego.codigo}`,\r\n            semestre:  `${pliego.semestre}`,\r\n            link:      `${pliego.link}`,\r\n            estado:    `${pliego.estado}`,\r\n            user:      `${pliego.user}`\r\n        });\r\n        setPliegoUpdate(`${pliego.codigo}`);\r\n        setStatePliego(true);\r\n        setPliegoDialog(true);\r\n    }\r\n\r\n    const confirmDeletePliego = (pliego) => {\r\n        setPliego(pliego);\r\n        setDeletePliegoDialog(true);\r\n    }\r\n\r\n    const deletePliego = () => {\r\n        let _pliegos = pliegos.filter(val => val.id !== pliego.id);\r\n        setPliegos(_pliegos);\r\n        setDeletePliegoDialog(false);\r\n\r\n        if (pliego.titulo.trim()) {\r\n            if (pliego.id) {\r\n                deletePliegoID(pliego.id);\r\n            }\r\n        }\r\n        setPliego(emptyPliego);\r\n        toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Pliego de espeficiacion Eliminada', life: 3000 });\r\n    }\r\n\r\n    const findIndexById = (id) => {\r\n        let index = -1;\r\n        for (let i = 0; i < pliegos.length; i++) {\r\n            if (pliegos[i].id === id) {\r\n\r\n                index = i;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return index;\r\n    }\r\n\r\n    const idBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">id</span>\r\n                {rowData.id}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const tituloBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Titulo</span>\r\n                {rowData.titulo}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const codigoBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Codigo</span>\r\n                {rowData.codigo}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const semestreBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Semestre</span>\r\n                {rowData.semestre}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const linkBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Link</span>\r\n                <Button label=\"Ver documento\" className=\"p-button-link\" onClick={() => window.open(`${rowData.link}`)} style={props.layoutColorMode === 'light' ? {'color':'#495057', 'font-weight': 'bold' , 'text-align': 'justify'} : {'color':'#ffffff', 'font-weight': 'bold' , 'text-align': 'justify'}}/>      \r\n            </>\r\n        );\r\n    }\r\n\r\n    const estadoBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Estado</span>\r\n                {rowData.estado}\r\n            </>\r\n        );\r\n    }\r\n\r\n\r\n    const userBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">User</span>\r\n                {rowData.user}\r\n               \r\n\r\n            </>\r\n        );\r\n    }\r\n\r\n    const leftToolbarTemplate = () => {\r\n        return (\r\n            <React.Fragment>\r\n                <Button style={props.layoutColorMode === 'light' ? {'color':'#ffffff','background': '#13af4e'} : {'color':'#ffffff','background': '#13af4e'}} label=\"Nuevo\" icon=\"pi pi-plus\" className=\"p-button-success p-mr-2\" onClick={openNew} />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    const actionBodyTemplate = (rowData) => {\r\n        return (\r\n            <div className=\"actions\">\r\n                <Button icon=\"pi pi-pencil\" style={{'background': '#13af4e'}} className=\"p-button-rounded p-button-success mr-2\"   onClick={() => editPliego(rowData)} />\r\n                <Button icon=\"pi pi-trash\"  style={{'background': '#eee500'}} className=\"p-button-rounded p-button-warning\"        onClick={() => confirmDeletePliego(rowData)} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const deletePliegoDialogFooter = (\r\n        <>\r\n            <Button label=\"No\" icon=\"pi pi-times\" style={{'background': '#d13639','color':'#ffffff'}} className=\"p-button-text\" onClick={hideDeletePliegoDialog} />\r\n            <Button label=\"Si\" icon=\"pi pi-check\" style={props.layoutColorMode === 'light' ? {'color':'#13af4e','border-color':'#13af4e'} : {'color':'#13af4e','border-color':'#13af4e'}} className=\"p-button-text\" onClick={deletePliego} />\r\n        </>\r\n    );\r\n\r\n    const renderHeader = () => {\r\n        return (\r\n            <div className=\"flex flex-column md:flex-row md:justify-content-between md:align-items-center\">\r\n            <h5 className=\"m-0\">Gestion de pliego de especificaciones</h5>\r\n            <span className=\"block mt-2 md:mt-0 p-input-icon-left\">\r\n                <i className=\"pi pi-search\" />\r\n                <InputText type=\"search\" onInput={(e) => setGlobalFilter(e.target.value)} placeholder=\"Buscar...\" />\r\n            </span>\r\n        </div>\r\n        )\r\n    }\r\n\r\n    const renderGroup = () => {\r\n        return (\r\n            <ColumnGroup>\r\n                <Row>\r\n                    <Column header={showHeader} colSpan={8}></Column>\r\n                </Row>\r\n                <Row>\r\n                    <Column header=\"ID\"                 field=\"id\"       sortable style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                    <Column header=\"TITULO\"             field=\"titulo\"   sortable style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                    <Column header=\"CODIGO\"             field=\"codigo\"   sortable style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                    <Column header=\"SEMESTRE\"           field=\"semestre\" sortable style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                    <Column header=\"LINK\"               field=\"link\"     sortable style={{ 'background-color': '#13af4e', width:'40%'}}/>\r\n                    <Column header=\"ESTADO\"             field=\"estado\"   sortable style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                    <Column header=\"USUARIO\"            field=\"user\"     sortable style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                    <Column header=\"Editar/Eliminar\"                              style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                </Row>\r\n            </ColumnGroup>\r\n        )\r\n    }\r\n\r\n\r\n    const showHeader  = renderHeader();\r\n    const headerGroup = renderGroup();\r\n\r\n\r\n    const headerDialog =()=>{\r\n        return (statePliego)?\"Actualizando pliego de espeficiciones\":\"Añadir pliego de espeficiciones\"\r\n    }\r\n\r\n    return (\r\n        <div className=\"p-grid crud-demo\">\r\n            <div className=\"p-col-12\">\r\n                <div className=\"card\">\r\n                \r\n                    <Toast ref={toast} />\r\n                    <Toolbar className=\"\" left={leftToolbarTemplate}></Toolbar>\r\n\r\n                    <DataTable headerColumnGroup={headerGroup} ref={dt} value={pliegos} selection={selectedPliegos}  onSelectionChange={(e) => setSelectedPliegos(e.value)}\r\n                        dataKey=\"id\" rowHover paginator rows={10} rowsPerPageOptions={[5, 10, 25]} className=\"datatable-responsive p-datatable-sm p-datatable-gridlines p-datatable-striped\"\r\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\r\n                        currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} users\" resizableColumns columnResizeMode=\"fit\" showGridlines\r\n                        globalFilter={globalFilter} emptyMessage=\"No se encontro el rol\" loading={loading} headerColumnGroup={headerGroup}\r\n                        >\r\n                    \r\n                        <Column style={{width:'20%'}} field=\"id\"       header=\"ID\"       sortable body={idBodyTemplate}></Column>\r\n                        <Column style={{width:'20%'}} field=\"titulo\"   header=\"TITULO\"   sortable body={tituloBodyTemplate}></Column>\r\n                        <Column style={{width:'20%'}} field=\"codigo\"   header=\"CODIGO\"   sortable body={codigoBodyTemplate}></Column>\r\n                        <Column style={{width:'20%'}} field=\"semestre\" header=\"SEMESTRE\" sortable body={semestreBodyTemplate}></Column>\r\n                        <Column style={{width:'40%'}} field=\"link\"     header=\"LINK\"     sortable body={linkBodyTemplate}></Column>\r\n                        <Column style={{width:'20%'}} field=\"estado\"   header=\"ESTADO\"   sortable body={estadoBodyTemplate}></Column>\r\n                        <Column style={{width:'20%'}} field=\"user\"     header=\"USER\"     sortable body={userBodyTemplate}></Column>\r\n                        <Column style={{width:'20%'}} body={actionBodyTemplate}></Column>\r\n\r\n                    </DataTable>\r\n\r\n\r\n                    <Dialog visible={pliegoDialog} style={{ width: '450px' }} header={headerDialog} modal className=\"p-fluid\" onHide={hideDialog}>\r\n                        <form onSubmit={formik.handleSubmit}>\r\n                            <div className=\"p-field mt-2\" >\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <img   src={props.layoutColorMode === 'light' ? 'assets/layout/images/title.png' : 'assets/layout/images/title-dark.png'} style={{'height': '1.2em','width':'1.2em',}}/>  \r\n                                        </span>\r\n                                        <InputText id=\"titulo\" name='titulo' placeholder=\"Titulo\" value={formik.values.titulo} onChange={formik.handleChange} autoFocus/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('titulo')}\r\n\r\n                            <div className=\"p-field mt-2\">\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <img   src={props.layoutColorMode === 'light' ? 'assets/layout/images/code.png' : 'assets/layout/images/code-dark.png'} style={{'height': '1.2em','width':'1.2em',}}/>  \r\n                                        </span>\r\n                                        <InputText id=\"codigo\" name='codigo' placeholder=\"Codigo\" value={formik.values.codigo} onChange={formik.handleChange}/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('codigo')}\r\n\r\n                            \r\n                            <div className=\"p-field mt-2\">\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <i className=\"pi pi-calendar\"></i>\r\n                                        </span>\r\n                                        <Dropdown id=\"semestre\" name=\"semestre\" placeholder=\"Seleccione el semestre\" value={formik.values.semestre} onChange={formik.handleChange} options={semestres} optionLabel=\"name\"  optionValue=\"name\"/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('semestre')}\r\n\r\n                            <div className=\"p-field mt-2\">\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <i className=\"pi pi-link\"></i>\r\n                                        </span>\r\n                                        <InputTextarea id=\"link\" name='link' placeholder=\"Link\"  value={formik.values.link} onChange={formik.handleChange}/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('link')}\r\n\r\n                            <div className=\"p-field mt-2\">\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <img   src={props.layoutColorMode === 'light' ? 'assets/layout/images/post.png' : 'assets/layout/images/post-dark.png'} style={{'height': '1.2em','width':'1.2em',}}/>  \r\n                                        </span>\r\n                                        <Dropdown id=\"estado\" name=\"estado\" placeholder=\"Seleccione un estado\" value={formik.values.estado} onChange={formik.handleChange} options={publicacion} optionLabel=\"name\"  optionValue=\"name\"/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('estado')}\r\n                            \r\n                            <div className=\"p-field mt-2\">\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <i className=\"pi pi-user\"></i>\r\n                                        </span>\r\n                                        <Dropdown id=\"user\" name=\"user\" placeholder=\"Seleccione un usuario\" value={formik.values.user} onChange={formik.handleChange} options={users} optionLabel=\"nombre\"  optionValue=\"id\"/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('user')}\r\n\r\n\r\n                            <div className='mt-2'>\r\n                                <div className=\"flex justify-content-center flex-wrap\">\r\n                                    <div className=\"flex align-items-center justify-content-center  m-2\">\r\n                                        <Button label=\"Cancelar\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDialog} style={props.layoutColorMode === 'light' ? {'color':'#d13639','border-color':'#d13639'} : {'color':'#d13639','border-color':'#d13639'}}/>\r\n                                    </div>\r\n                                    <div className=\"flex align-items-center justify-content-center  m-2\">\r\n                                        <Button label=\"Guardar\"  icon=\"pi pi-check\" type=\"submit\" className=\"p-button-text\" onClick={showDialog} style={{'background': '#13af4e','color':'#ffffff'}}/>  \r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </Dialog>\r\n\r\n\r\n                    <Dialog className=\"mt-2\" visible={deletePliegoDialog} style={{ width: '450px' }} header=\"Confirm\" modal footer={deletePliegoDialogFooter} onHide={hideDeletePliegoDialog}>\r\n                        <div className=\"confirmation-content\">\r\n                            <i className=\"pi pi-exclamation-triangle p-mr-3\" style={{ fontSize: '2rem' }} />\r\n                            {pliego && <span>¿Estás segura de que quieres eliminar? <b>{pliego.titulo}</b> <b>{pliego.semestre}</b>?</span>}\r\n                        </div>\r\n                    </Dialog>\r\n    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import axios from 'axios';\r\n\r\n export const getPliegos = () =>{\r\n     return axios.get('https://magic-tech-backend.herokuapp.com/api/getPliegos');\r\n }\r\n\r\n export const getPliegoID =(id) =>{\r\n     return axios.get(`https://magic-tech-backend.herokuapp.com/api/getPliegoId/${id}`);\r\n }\r\n\r\n\r\n\r\n export const createPliego=(data)=>{\r\n    return axios.post('https://magic-tech-backend.herokuapp.com/api/createPliego', \r\n      {\r\n        id:        `${data.id}`,\r\n        titulo:    `${data.titulo}`,\r\n        codigo:    `${data.codigo}`,\r\n        semestre:  `${data.semestre}`,\r\n        link:      `${data.link}`,\r\n        estado:    `${data.estado}`,\r\n        user:      `${data.user}` \r\n      }\r\n      )\r\n      .then(function (response) {\r\n        console.log(response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n }\r\n\r\nexport const updatePliegoID =(data,id) =>{\r\n    return axios.put(`https://magic-tech-backend.herokuapp.com/api/updatePliego/${id}`, \r\n    {\r\n        titulo:    `${data.titulo}`,\r\n        codigo:    `${data.codigo}`,\r\n        semestre:  `${data.semestre}`,\r\n        link:      `${data.link}`,\r\n        estado:    `${data.estado}`,\r\n        user:      `${data.user}` \r\n    }\r\n    )\r\n    .then(function (response) {\r\n      console.log(response);\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error);\r\n    });\r\n}\r\n\r\nexport const deletePliegoID =(id) =>{\r\n    return axios.delete(`https://magic-tech-backend.herokuapp.com/api/deletePliegoId/${id}`);\r\n}\r\n\r\nexport const getPliegosPublicados = () =>{\r\n  return axios.get('https://magic-tech-backend.herokuapp.com/api/getPliegosPublicados');\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react';\r\n\r\n\r\nexport const Aviso = () => {\r\n\r\n    return (\r\n        <div className=\"grid\">\r\n             <h1>Estamos trabajando - En los Avisos</h1>\r\n        </div>\r\n    );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { DataTable }                  from 'primereact/datatable';\r\nimport { Column }                     from 'primereact/column';\r\nimport { ColumnGroup }                from 'primereact/columngroup';\r\nimport { Row }                        from 'primereact/row';\r\nimport { InputText }                  from 'primereact/inputtext';\r\nimport { getEmpresas}                 from '../service/apiEmpresa';\r\n\r\nexport const ListEmpresa = (props) => {\r\n\r\n    const [empresas, setEmpresas]           = useState(null);\r\n    const [globalFilter, setGlobalFilter]   = useState('');\r\n    const [loading, setLoading]             = useState(true);\r\n\r\n    useEffect(()=>{\r\n        fetchEmpresas();\r\n    },[])\r\n\r\n    const fetchEmpresas = () =>{\r\n        getEmpresas().then(json =>{\r\n            if(json.error){\r\n                console.log(\"Error\");\r\n            }else{\r\n                console.log(\"---------Empresas insertados-----------\");\r\n                setEmpresas(json.data);\r\n                setLoading(false);\r\n            }\r\n        })\r\n    }\r\n\r\n  \r\n\r\n       \r\n\r\n    const nombreBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Nombre</span>\r\n                {rowData.nombre}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const tipoSociedadBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Tipo Sociedad</span>\r\n                {rowData.tipoSociedad}\r\n                \r\n            </>\r\n        );\r\n    }\r\n\r\n    const direccionBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Direccion</span>\r\n                {rowData.direccion}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const emailBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Correo electronico</span>\r\n                {rowData.email}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const renderHeader = () => {\r\n        return (\r\n            <div className=\"flex flex-column md:flex-row md:justify-content-between md:align-items-center\">\r\n            <h5 className=\"m-0\">Lista de empresas registradas en funda empresa</h5>\r\n            <span className=\"block mt-2 md:mt-0 p-input-icon-left\">\r\n                <i className=\"pi pi-search\" />\r\n                <InputText type=\"search\" onInput={(e) => setGlobalFilter(e.target.value)} placeholder=\"Buscar...\" />\r\n            </span>\r\n        </div>\r\n        )\r\n    }\r\n\r\n    const renderGroup = () => {\r\n        return (\r\n            <ColumnGroup>\r\n                <Row>\r\n                    <Column header={showHeader} colSpan={4}></Column>\r\n                </Row>\r\n                <Row>\r\n                    <Column header=\"NOMBRE\"                 field=\"nombre\"       sortable style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                    <Column header=\"SOCIEDAD\"               field=\"tipoSociedad\" sortable style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                    <Column header=\"DIRECCION\"              field=\"direccion\"    sortable style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                    <Column header=\"CORREO ELECTRONICO\"     field=\"email\"        sortable style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                </Row>\r\n            </ColumnGroup>\r\n        )\r\n    }\r\n\r\n\r\n    const showHeader  = renderHeader();\r\n    const headerGroup = renderGroup();\r\n\r\n            \r\n\r\n    return (\r\n        <div className=\"grid table-demo\">\r\n            <div className=\"col-12\">\r\n                <div className=\"card\">\r\n                    <DataTable value={empresas} className=\"p-datatable-gridlines p-datatable-striped p-datatable-sm p-datatable-customers \" dataKey=\"id\" rowHover\r\n                        paginator rows={10} rowsPerPageOptions={[5, 10, 25]} globalFilter={globalFilter} emptyMessage=\"No se encontraron empresas\" loading={loading} \r\n                        headerColumnGroup={headerGroup} >\r\n                        <Column style={{width:'20%'}} field=\"nombre\"          header=\"NOMBRE\"             sortable body={nombreBodyTemplate}        ></Column>\r\n                        <Column style={{width:'20%'}} field=\"tipoSociedad\"    header=\"SOCIEDAD\"           sortable body={tipoSociedadBodyTemplate}  ></Column>\r\n                        <Column style={{width:'20%'}} field=\"direccion\"       header=\"DIRECCION\"          sortable body={direccionBodyTemplate}     ></Column>\r\n                        <Column style={{width:'25%'}} field=\"email\"           header=\"CORREO ELECTRONICO\" sortable body={emailBodyTemplate}         ></Column>\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { DataTable }                  from 'primereact/datatable';\r\nimport { Column }                     from 'primereact/column';\r\nimport { Button }                     from 'primereact/button';\r\nimport { ColumnGroup }                from 'primereact/columngroup';\r\nimport { Row }                        from 'primereact/row';\r\nimport { InputText }                  from 'primereact/inputtext';\r\nimport { getConvocatoriasPublicados}  from '../service/apiConvocatoria';\r\n\r\nexport const ListConvocatoria = (props) => {\r\n\r\n    const [convocatorias, setConvocatorias] = useState(null);\r\n    const [globalFilter, setGlobalFilter]   = useState('');\r\n    const [loading, setLoading]             = useState(true);\r\n\r\n    useEffect(()=>{\r\n        fetchConvocatorias();\r\n    },[])\r\n\r\n    const fetchConvocatorias = () =>{\r\n        getConvocatoriasPublicados().then(json =>{\r\n            if(json.error){\r\n                console.log(\"Error\");\r\n            }else{\r\n                console.log(\"---------Convocatorias insertados-----------\");\r\n                setConvocatorias(json.data);\r\n                setLoading(false);\r\n            }\r\n        })\r\n    }\r\n\r\n    const tituloBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Titulo</span>\r\n                {rowData.titulo}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const codigoBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Codigo</span>\r\n                {rowData.codigo}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const semestreBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Semestre</span>\r\n                {rowData.semestre}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const linkBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Link</span>\r\n                <Button label=\"Ver documento\" className=\"p-button-link\" onClick={() => window.open(`${rowData.link}`)} style={props.layoutColorMode === 'light' ? {'color':'#495057', 'font-weight': 'bold' , 'text-align': 'justify'} : {'color':'#ffffff', 'font-weight': 'bold' , 'text-align': 'justify'}}/>      \r\n            </>\r\n        );\r\n    }\r\n\r\n\r\n    const renderHeader = () => {\r\n        return (\r\n            <div className=\"flex flex-column md:flex-row md:justify-content-between md:align-items-center\">\r\n            <h5 className=\"m-0\">Lista de convocatorias publicadas</h5>\r\n            <span className=\"block mt-2 md:mt-0 p-input-icon-left\">\r\n                <i className=\"pi pi-search\" />\r\n                <InputText type=\"search\" onInput={(e) => setGlobalFilter(e.target.value)} placeholder=\"Buscar...\" />\r\n            </span>\r\n        </div>\r\n        )\r\n    }\r\n\r\n    const renderGroup = () => {\r\n        return (\r\n            <ColumnGroup>\r\n                <Row>\r\n                    <Column header={showHeader} colSpan={4}></Column>\r\n                </Row>\r\n                <Row>\r\n                    <Column header=\"NOMBRE\"     field=\"TITULO\"      sortable style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                    <Column header=\"SOCIEDAD\"   field=\"CODIGO\"      sortable style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                    <Column header=\"DIRECCION\"  field=\"SEMESTRE\"    sortable style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                    <Column header=\"LINK\"       field=\"LINK\"        sortable style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                </Row>\r\n            </ColumnGroup>\r\n        )\r\n    }\r\n\r\n\r\n    const showHeader  = renderHeader();\r\n    const headerGroup = renderGroup();\r\n\r\n    return (\r\n        <div className=\"grid table-demo\">\r\n            <div className=\"col-12\">\r\n                <div className=\"card\">\r\n                    <DataTable value={convocatorias} className=\"p-datatable-gridlines p-datatable-striped p-datatable-sm p-datatable-customers\" dataKey=\"id\" rowHover\r\n                        paginator rows={10} rowsPerPageOptions={[5, 10, 25]} globalFilter={globalFilter} emptyMessage=\"No se encontraron empresas\" loading={loading} \r\n                        headerColumnGroup={headerGroup} >\r\n                        <Column style={{width:'20%'}} field=\"titulo\"    header=\"TITULO\"     sortable body={tituloBodyTemplate}    ></Column>\r\n                        <Column style={{width:'20%'}} field=\"codigo\"    header=\"CODIGO\"     sortable body={codigoBodyTemplate}    ></Column>\r\n                        <Column style={{width:'20%'}} field=\"semestre\"  header=\"SEMESTRE\"   sortable body={semestreBodyTemplate}  ></Column>\r\n                        <Column style={{width:'25%'}} field=\"link\"      header=\"LINK\"       sortable body={linkBodyTemplate}      ></Column>\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { DataTable }                  from 'primereact/datatable';\r\nimport { Column }                     from 'primereact/column';\r\nimport { Button }                     from 'primereact/button';\r\nimport { ColumnGroup }                from 'primereact/columngroup';\r\nimport { Row }                        from 'primereact/row';\r\nimport { InputText }                  from 'primereact/inputtext';\r\nimport { getPliegosPublicados}        from '../service/apiPliego';\r\n\r\nexport const ListPliego = (props) => {\r\n\r\n    const [pliegos, setPliegos]             = useState(null);\r\n    const [globalFilter, setGlobalFilter]   = useState('');\r\n    const [loading, setLoading]             = useState(true);\r\n\r\n    useEffect(()=>{\r\n        fetchPliegos();\r\n    },[])\r\n\r\n    const fetchPliegos = () =>{\r\n        getPliegosPublicados().then(json =>{\r\n            if(json.error){\r\n                console.log(\"Error\");\r\n            }else{\r\n                console.log(\"---------Pliegos insertados-----------\");\r\n                setPliegos(json.data);\r\n                setLoading(false);\r\n            }\r\n        })\r\n    }\r\n\r\n    const tituloBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Titulo</span>\r\n                {rowData.titulo}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const codigoBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Codigo</span>\r\n                {rowData.codigo}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const semestreBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Semestre</span>\r\n                {rowData.semestre}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const linkBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Link</span>\r\n                <Button label=\"Ver documento\" className=\"p-button-link\" onClick={() => window.open(`${rowData.link}`)} style={props.layoutColorMode === 'light' ? {'color':'#495057', 'font-weight': 'bold' , 'text-align': 'justify'} : {'color':'#ffffff', 'font-weight': 'bold' , 'text-align': 'justify'}}/>      \r\n            </>\r\n        );\r\n    }\r\n\r\n    const renderHeader = () => {\r\n        return (\r\n            <div className=\"flex flex-column md:flex-row md:justify-content-between md:align-items-center\">\r\n            <h5 className=\"m-0\">Lista de pliegos de especificaciones publicadas</h5>\r\n            <span className=\"block mt-2 md:mt-0 p-input-icon-left\">\r\n                <i className=\"pi pi-search\" />\r\n                <InputText type=\"search\" onInput={(e) => setGlobalFilter(e.target.value)} placeholder=\"Buscar...\" />\r\n            </span>\r\n        </div>\r\n        )\r\n    }\r\n\r\n    const renderGroup = () => {\r\n        return (\r\n            <ColumnGroup>\r\n                <Row>\r\n                    <Column header={showHeader} colSpan={4}></Column>\r\n                </Row>\r\n                <Row>\r\n                    <Column header=\"NOMBRE\"     field=\"TITULO\"      sortable style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                    <Column header=\"SOCIEDAD\"   field=\"CODIGO\"      sortable style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                    <Column header=\"DIRECCION\"  field=\"SEMESTRE\"    sortable style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                    <Column header=\"LINK\"       field=\"LINK\"        sortable style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                </Row>\r\n            </ColumnGroup>\r\n        )\r\n    }\r\n\r\n\r\n    const showHeader  = renderHeader();\r\n    const headerGroup = renderGroup();\r\n\r\n    return (\r\n        <div className=\"grid table-demo\">\r\n            <div className=\"col-12\">\r\n                <div className=\"card\">\r\n                    <DataTable value={pliegos} className=\"p-datatable-gridlines p-datatable-striped p-datatable-sm p-datatable-customers\" dataKey=\"id\" rowHover\r\n                        paginator rows={10} rowsPerPageOptions={[5, 10, 25]} globalFilter={globalFilter} emptyMessage=\"No se encontraron empresas\" loading={loading} \r\n                        headerColumnGroup={headerGroup}  >\r\n                        <Column style={{width:'20%'}} field=\"titulo\"    header=\"TITULO\"     sortable body={tituloBodyTemplate}    ></Column>\r\n                        <Column style={{width:'20%'}} field=\"codigo\"    header=\"CODIGO\"     sortable body={codigoBodyTemplate}    ></Column>\r\n                        <Column style={{width:'20%'}} field=\"semestre\"  header=\"SEMESTRE\"   sortable body={semestreBodyTemplate}  ></Column>\r\n                        <Column style={{width:'25%'}} field=\"link\"      header=\"LINK\"       sortable body={linkBodyTemplate}      ></Column>\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import axios from 'axios';\r\n\r\nexport class MenuService {\r\n\r\n    getMenusAdmin() {\r\n        return axios.get('assets/demo/data/menuAdmin.json').then(res => res.data.data);\r\n    }\r\n    getMenusUser() {\r\n        return axios.get('assets/demo/data/menuUser.json').then(res => res.data.data);\r\n    }\r\n    getMenusDocente() {\r\n        return axios.get('assets/demo/data/menuDocente.json').then(res => res.data.data);\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport classNames           from 'classnames';\r\nimport { Route}             from 'react-router-dom';\r\nimport { CSSTransition }    from 'react-transition-group';\r\n\r\nimport { AppTopbar }        from './AppTopbar';\r\nimport { AppFooter }        from './AppFooter';\r\nimport { AppMenu }          from './AppMenu';\r\nimport { AppConfig }        from './AppConfig';\r\n\r\nimport { Dashboard }             from './components/Dashboard';\r\nimport { Role }                  from './components/Role';\r\nimport { User }                  from './components/User';\r\nimport {Empresa}                 from './components/Empresa';\r\nimport { Convocatoria }          from './components/Convocatoria';\r\nimport { PliegoEspecificacion }  from './components/PliegoEspecificacion';\r\nimport { Aviso }                 from './components/Aviso';\r\nimport { ListEmpresa }           from './components/ListEmpresa';\r\nimport { ListConvocatoria }      from './components/ListConvocatoria';\r\nimport { ListPliego }            from './components/ListPliego';\r\n\r\nimport Cookies                   from 'universal-cookie';\r\nimport { MenuService }           from './service/Menu';\r\n\r\n\r\nimport PrimeReact           from 'primereact/api';\r\n\r\nimport 'primereact/resources/primereact.min.css';\r\nimport 'primeicons/primeicons.css';\r\nimport 'primeflex/primeflex.css';\r\nimport 'prismjs/themes/prism-coy.css';\r\nimport './layout/flags/flags.css';\r\nimport './layout/layout.scss';\r\nimport './App.scss';\r\n\r\n\r\nconst App = () => {\r\n\r\n    const [layoutMode, setLayoutMode]                         = useState('static');\r\n    const [layoutColorMode, setLayoutColorMode]               = useState('light')\r\n    const [inputStyle, setInputStyle]                         = useState('outlined');\r\n    const [ripple, setRipple]                                 = useState(true);\r\n    const [staticMenuInactive, setStaticMenuInactive]         = useState(false);\r\n    const [overlayMenuActive, setOverlayMenuActive]           = useState(false);\r\n    const [mobileMenuActive, setMobileMenuActive]             = useState(false);\r\n    const [mobileTopbarMenuActive, setMobileTopbarMenuActive] = useState(false);\r\n    const [menus, setMenus]                                   = useState(null);\r\n    const cookies                                             = new Cookies();\r\n    const menuService = new MenuService();\r\n\r\n    PrimeReact.ripple = true;\r\n\r\n    let menuClick = false;\r\n    let mobileTopbarMenuClick = false;\r\n\r\n\r\n    useEffect(()=>{\r\n        menuService.getMenusAdmin().then(data => setMenus(data));\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        if (mobileMenuActive) {\r\n            addClass(document.body, \"body-overflow-hidden\");\r\n        } else {\r\n            removeClass(document.body, \"body-overflow-hidden\");\r\n        }\r\n    }, [mobileMenuActive]);\r\n\r\n    const onInputStyleChange = (inputStyle) => {\r\n        setInputStyle(inputStyle);\r\n    }\r\n\r\n    const onRipple = (e) => {\r\n        PrimeReact.ripple = e.value;\r\n        setRipple(e.value)\r\n    }\r\n\r\n    const onLayoutModeChange = (mode) => {\r\n        setLayoutMode(mode)\r\n    }\r\n\r\n    const onColorModeChange = (mode) => {\r\n        setLayoutColorMode(mode)\r\n    }\r\n\r\n    const onWrapperClick = (event) => {\r\n        if (!menuClick) {\r\n            setOverlayMenuActive(false);\r\n            setMobileMenuActive(false);\r\n        }\r\n\r\n        if (!mobileTopbarMenuClick) {\r\n            setMobileTopbarMenuActive(false);\r\n        }\r\n\r\n        mobileTopbarMenuClick = false;\r\n        menuClick = false;\r\n    }\r\n\r\n    const onToggleMenuClick = (event) => {\r\n        menuClick = true;\r\n\r\n        if (isDesktop()) {\r\n            if (layoutMode === 'overlay') {\r\n                if(mobileMenuActive === true) {\r\n                    setOverlayMenuActive(true);\r\n                }\r\n\r\n                setOverlayMenuActive((prevState) => !prevState);\r\n                setMobileMenuActive(false);\r\n            }\r\n            else if (layoutMode === 'static') {\r\n                setStaticMenuInactive((prevState) => !prevState);\r\n            }\r\n        }\r\n        else {\r\n            setMobileMenuActive((prevState) => !prevState);\r\n        }\r\n\r\n        event.preventDefault();\r\n    }\r\n\r\n    const onSidebarClick = () => {\r\n        menuClick = true;\r\n    }\r\n\r\n    const onMobileTopbarMenuClick = (event) => {\r\n        mobileTopbarMenuClick = true;\r\n\r\n        setMobileTopbarMenuActive((prevState) => !prevState);\r\n        event.preventDefault();\r\n    }\r\n\r\n    const onMobileSubTopbarMenuClick = (event) => {\r\n        mobileTopbarMenuClick = true;\r\n\r\n        event.preventDefault();\r\n    }\r\n\r\n    const onMenuItemClick = (event) => {\r\n        if (!event.item.items) {\r\n            setOverlayMenuActive(false);\r\n            setMobileMenuActive(false);\r\n        }\r\n    }\r\n    const isDesktop = () => {\r\n        return window.innerWidth >= 992;\r\n    }\r\n\r\n    const addClass = (element, className) => {\r\n        if (element.classList)\r\n            element.classList.add(className);\r\n        else\r\n            element.className += ' ' + className;\r\n    }\r\n\r\n    const removeClass = (element, className) => {\r\n        if (element.classList)\r\n            element.classList.remove(className);\r\n        else\r\n            element.className = element.className.replace(new RegExp('(^|\\\\b)' + className.split(' ').join('|') + '(\\\\b|$)', 'gi'), ' ');\r\n    }\r\n\r\n    const wrapperClass = classNames('layout-wrapper', {\r\n        'layout-overlay': layoutMode === 'overlay',\r\n        'layout-static': layoutMode === 'static',\r\n        'layout-static-sidebar-inactive': staticMenuInactive && layoutMode === 'static',\r\n        'layout-overlay-sidebar-active': overlayMenuActive && layoutMode === 'overlay',\r\n        'layout-mobile-sidebar-active': mobileMenuActive,\r\n        'p-input-filled': inputStyle === 'filled',\r\n        'p-ripple-disabled': ripple === false,\r\n        'layout-theme-light': layoutColorMode === 'light'\r\n    });\r\n\r\n    return (\r\n        <div className={wrapperClass} onClick={onWrapperClick}>\r\n            <AppTopbar onToggleMenuClick={onToggleMenuClick} layoutColorMode={layoutColorMode}\r\n                       mobileTopbarMenuActive={mobileTopbarMenuActive} onMobileTopbarMenuClick={onMobileTopbarMenuClick} onMobileSubTopbarMenuClick={onMobileSubTopbarMenuClick}/>\r\n\r\n            <div className=\"layout-sidebar\" onClick={onSidebarClick}>\r\n                <AppMenu model={menus} onMenuItemClick={onMenuItemClick} layoutColorMode={layoutColorMode} />\r\n            </div>\r\n\r\n            <div className=\"layout-main-container\">\r\n                <div className=\"layout-main\">\r\n                    <Route path=\"/\"                      exact component={Dashboard}/>\r\n                    <Route path=\"/Role\"                  exact={true} render={props => <Role                 layoutColorMode={layoutColorMode} {...props} />}/>\r\n                    <Route path=\"/User\"                  exact={true} render={props => <User                 layoutColorMode={layoutColorMode} {...props} />}/>\r\n                    <Route path=\"/Empresa\"               exact={true} render={props => <Empresa              layoutColorMode={layoutColorMode} {...props} />}/>\r\n                    <Route path=\"/Convocatoria\"          exact={true} render={props => <Convocatoria         layoutColorMode={layoutColorMode} {...props} />}/>\r\n                    <Route path=\"/PliegoEspecificacion\"  exact={true} render={props => <PliegoEspecificacion layoutColorMode={layoutColorMode} {...props} />}/>\r\n                    <Route path=\"/Aviso\"                 component={Aviso}/>\r\n                    <Route path=\"/ListEmpresa\"           exact={true} render={props => <ListEmpresa          layoutColorMode={layoutColorMode} {...props} />}/>\r\n                    <Route path=\"/ListConvocatoria\"      exact={true} render={props => <ListConvocatoria     layoutColorMode={layoutColorMode} {...props} />}/>\r\n                    <Route path=\"/ListPliego\"            exact={true} render={props => <ListPliego           layoutColorMode={layoutColorMode} {...props} />}/>\r\n                </div>\r\n\r\n                <AppFooter layoutColorMode={layoutColorMode}/>\r\n            </div>\r\n\r\n            <AppConfig rippleEffect={ripple} onRippleEffect={onRipple} inputStyle={inputStyle} onInputStyleChange={onInputStyleChange}\r\n                       layoutMode={layoutMode} onLayoutModeChange={onLayoutModeChange} layoutColorMode={layoutColorMode} onColorModeChange={onColorModeChange} />\r\n\r\n            <CSSTransition classNames=\"layout-mask\" timeout={{ enter: 200, exit: 200 }} in={mobileMenuActive} unmountOnExit>\r\n                <div className=\"layout-mask p-component-overlay\"></div>\r\n            </CSSTransition>\r\n\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default App;\r\n","import { useEffect } from 'react';\r\nimport { useLocation, withRouter } from 'react-router-dom';\r\n\r\nconst ScrollToTop = (props) => {\r\n\r\n    let location = useLocation();\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0)\r\n    }, [location]);\r\n\r\n    return props.children;\r\n}\r\n\r\nexport default withRouter(ScrollToTop);\r\n","import React,{useEffect,useState,useRef}   from 'react';\r\nimport axios                from 'axios';\r\nimport { Link }             from 'react-router-dom';\r\nimport { InputText }        from 'primereact/inputtext';\r\nimport { Password }         from 'primereact/password';\r\nimport { Button }           from 'primereact/button';\r\nimport { ProgressSpinner }  from 'primereact/progressspinner';\r\nimport { Toast }            from 'primereact/toast';\r\n\r\nimport { useFormik }        from \"formik\";\r\nimport { useHistory }       from 'react-router-dom';\r\nimport Cookies              from 'universal-cookie';\r\n\r\nexport const LoginApp = (props) =>{\r\n\r\n    const history            = useHistory();\r\n    const [isPush,setIsPush] = useState(true);\r\n    const toast              = useRef(null);\r\n    const cookies            = new Cookies();\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email:     \"\",\r\n            password:  \"\"\r\n        },\r\n        validate: (data) => {\r\n            let errors = {};\r\n\r\n            if (!data.email) {\r\n                errors.email = \"Se requiere el correo electronico\";\r\n            } else if (data.email.length > 255) {\r\n                errors.email = \"Como maximo 255 caracteres\";\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(data.email)) {\r\n                errors.email = 'Dirección de correo electrónico inválida. P.ej. ejemplo@email.com';\r\n            }\r\n\r\n            if (!data.password) {\r\n                errors.password = \"Se requiere la contraseña\";\r\n            } else if (data.password.length > 255) {\r\n                errors.password = \"Como maximo 255 caracteres\";\r\n            }\r\n\r\n            return errors;\r\n        },\r\n\r\n        onSubmit: (data) => {\r\n            setIsPush(false);\r\n            const timeout = setTimeout(() => {}, 10000);\r\n            axios.post('https://magic-tech-backend.herokuapp.com/api/login', \r\n            {\r\n                email:     `${data.email}`,\r\n                password:  `${data.password}`\r\n            }).then(function (response) {\r\n\r\n                cookies.set('id'        , response.data.id        , {path: \"/\"});\r\n                cookies.set('nombre'    , response.data.nombre    , {path: \"/\"});\r\n                cookies.set('apellido'  , response.data.apellido  , {path: \"/\"});\r\n                cookies.set('email'     , response.data.email     , {path: \"/\"});\r\n                cookies.set('rol'       , response.data.rol       , {path: \"/\"});\r\n                cookies.set('isLogin'   , true);\r\n\r\n                console.log('id:        '+cookies.get('id'));\r\n                console.log('nombre:    '+cookies.get('nombre'));\r\n                console.log('apellido:  '+cookies.get('apellido'));\r\n                console.log('email:     '+cookies.get('email'));\r\n                console.log('rol:       '+cookies.get('rol'));\r\n                console.log('isLogin:   '+cookies.get('isLogin'));\r\n\r\n                if(response.status === 200){\r\n                    clearTimeout(timeout);\r\n                    history.push('/');\r\n                }\r\n                formik.resetForm();\r\n                setIsPush(true);\r\n            })\r\n            .catch(function (error) {\r\n                toast.current.show({severity:'error', summary: 'Error Message', detail:'El correo electronico o la contraseña son incorrectas', life: 3000});\r\n                clearTimeout(timeout);\r\n                setIsPush(true);\r\n                formik.resetForm();\r\n                formik.setValues({\r\n                    email:`${data.email}`,\r\n                    password:''\r\n                }); \r\n            });\r\n        },\r\n      });\r\n\r\n\r\n\r\n\r\n\r\n    const isFormFieldValid = (name) => !!(formik.touched[name] && formik.errors[name]);\r\n    const getFormErrorMessage = (name) => {\r\n        return isFormFieldValid(name) && <small className=\"ml-5 p-error\" style={{'color': '#ff0000'}}>{formik.errors[name]}</small>;\r\n    };\r\n\r\n    return(\r\n        <div className=\"grid justify-content-evenly mt-6\">\r\n            <Toast ref={toast} />\r\n            <div className=\"lg:col-3\"></div>\r\n            <div className=\" lg:col-3 md:col-3\">\r\n                <div className=\"card p-fluid\" style={cookies.get('theme') === 'light' ?{ 'border': 'black 2px outset' }:{ 'border': 'white 2px outset' }}>\r\n                    <form onSubmit={formik.handleSubmit}>\r\n                        <div className='grid flex justify-content-center'>\r\n                            <div className=\"flex align-items-center justify-content-center  m-2\">\r\n                                <h2 className=\"p-text-center p-p-1\">Iniciar sesión</h2>        \r\n                            </div>\r\n                        </div>\r\n                        <div className='grid flex justify-content-center'>\r\n                            <div className=\"flex align-items-center justify-content-center  m-2\">\r\n                                <img src={cookies.get('theme') === 'light' ? 'assets/layout/images/avatar.png' : 'assets/layout/images/avatar-dark.png'} className=\"p-avatar-xl\"  shape=\"circle\"  size=\"xlarge\" style={{'height': '8em','width':'8em',}}/>               \r\n                            </div>\r\n                        </div>\r\n                        <div className='grid flex justify-content-center'>\r\n                            <div className=\"flex align-items-center justify-content-center\">\r\n                                <div className=\"p-field mt-1 lg:col-11\">\r\n                                    <div className=\"p-inputgroup\">\r\n                                            <span className=\"p-inputgroup-addon\">\r\n                                                <img   src={cookies.get('theme') === 'light' ? 'assets/layout/images/gmail.png' : 'assets/layout/images/gmail-dark.png'} style={{'height': '1.2em','width':'1.2em',}}/>   \r\n                                            </span>\r\n                                            <InputText id=\"email\" name='email' placeholder=\"Correo electronico\" value={formik.values.email} onChange={formik.handleChange} autoFocus/>\r\n                                    </div>       \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {getFormErrorMessage('email')}\r\n                        \r\n                        <div className='grid flex justify-content-center'>\r\n                            <div className=\"flex align-items-center justify-content-center\">\r\n                                <div className=\"p-field mt-1 lg:col-10\">\r\n                                    <div className=\"p-inputgroup\">\r\n                                            <span className=\"p-inputgroup-addon\">\r\n                                                <img   src={cookies.get('theme') === 'light' ? 'assets/layout/images/password.png' : 'assets/layout/images/password-dark.png'} style={{'height': '1.2em','width':'1.2em',}}/>      \r\n                                            </span>\r\n                                            <Password id=\"password\" name='password' placeholder=\"Contraseña\" value={formik.values.password} onChange={formik.handleChange} toggleMask  feedback={false}/>\r\n                                    </div>       \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {getFormErrorMessage('password')}\r\n                        {\r\n                            (isPush)?\r\n                            <div className='grid flex justify-content-center'>\r\n                                <div className=\"flex align-items-center justify-content-center  m-2\">\r\n                                    <Button type=\"submit\" id=\"buttonSubmit\" icon=\"pi pi-arrow-right\"  className=\"p-button-raised mt-4 p-button-lg\"  style={{'fontSize': '1.5em', 'background-color':'#d13639', 'color':'#ffffff', 'border':'1px solid hsl(0deg 0% 100% / 12%)'}}/>\r\n                                </div>\r\n                            </div>\r\n                            :\r\n                            <div className='grid flex justify-content-center'>\r\n                                <div className=\"flex align-items-center justify-content-center  m-4\">\r\n                                    <ProgressSpinner style={{width: '50px', height: '50px', stroke: '#d62d20'}} strokeWidth=\"8\" fill=\"var(--surface-ground)\" animationDuration=\"10s\"/>\r\n                                </div>\r\n                            </div>  \r\n                        }\r\n                        <div className='grid flex justify-content-center'>\r\n                            <div className=\"flex align-items-center justify-content-center  mt-3\">\r\n                                <Link to=\"/Register\" >\r\n                                    <Button label=\"Crear una cuenta\" className=\"p-button-link\" style={cookies.get('theme') === 'light' ? {'color':'#000000', 'font-weight': 'bold'} : {'color':'#ffffff', 'font-weight': 'bold'}}/>\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                        <div className='grid flex justify-content-center'>\r\n                            <div className=\"flex align-items-center justify-content-center\">\r\n                                <Link to=\"/\" >\r\n                                    <Button label=\"Pagina principal\" className=\"p-button-link\" style={cookies.get('theme') === 'light' ? {'color':'#000000', 'font-weight': 'bold'} : {'color':'#ffffff', 'font-weight': 'bold'}}/>\r\n                                </Link>\r\n                            </div>\r\n                        </div>        \r\n                    </form>\r\n                </div>\r\n            </div>\r\n            <div className=\"lg:col-3\"></div>\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\n","import React,{useEffect,useState,useRef}   from 'react';\r\nimport axios                from 'axios';\r\nimport { Link }             from 'react-router-dom';\r\nimport { InputText }        from 'primereact/inputtext';\r\nimport { Password }         from 'primereact/password';\r\nimport { Button }           from 'primereact/button';\r\nimport { Toast }            from 'primereact/toast';\r\nimport { ProgressSpinner }  from 'primereact/progressspinner';\r\nimport { useHistory }       from 'react-router-dom';\r\n\r\nimport { useFormik }        from \"formik\";\r\nimport uniqid               from 'uniqid';\r\nimport Cookies              from 'universal-cookie';\r\n\r\nimport { createUser,getUsers} from '../service/apiUser';\r\n\r\nexport const Register = (props) =>{\r\n\r\n    const toast                           = useRef(null);\r\n    const [users, setUsers]               = useState(null);\r\n    const history                         = useHistory();\r\n    const [emailUpdate, setEmailUpdate]   = useState(\"\");\r\n    const [isPush,setIsPush]              = useState(true);\r\n    const cookies                         = new Cookies();\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            nombre:    \"\",\r\n            apellido:  \"\",\r\n            email:     \"\",\r\n            password:  \"\",\r\n            confirmPassword : \"\"\r\n        },\r\n        validate: (data) => {\r\n            let errors = {};\r\n\r\n            if (!data.nombre) {\r\n                errors.nombre = \"Se requiere el nombre\";\r\n            } else if (data.nombre.length < 2) {\r\n                errors.nombre = \"Como minimo 2 caracteres\";\r\n            } else if (data.nombre.length > 30) {\r\n                errors.nombre = \"Como maximo 30 caracteres\";\r\n            } else if (!/^^[a-zA-Z\\s]+$/i.test(data.nombre)) {\r\n                errors.nombre = \"No se permiten numero o caracteres especiales\";\r\n            }\r\n\r\n            if (!data.apellido) {\r\n                errors.apellido = \"Se requiere el apellido\";\r\n            } else if (data.apellido.length < 2) {\r\n                errors.apellido = \"Como minimo 2 caracteres\";\r\n            } else if (data.apellido.length > 30) {\r\n                errors.apellido = \"Como maximo 30 caracteres\";\r\n            }else if (!/^^[a-zA-Z\\s]+$/i.test(data.apellido)) {\r\n                errors.apellido = \"No se permiten numero o caracteres especiales\";\r\n            }\r\n\r\n            if (!data.email) {\r\n                errors.email = \"Se requiere el correo electronico\";\r\n            } else if (data.email.length > 255) {\r\n                errors.email = \"Como maximo 255 caracteres\";\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(data.email)) {\r\n                errors.email = 'Dirección de correo electrónico inválida. P.ej. ejemplo@email.com';\r\n            }else if(!esRepetido(data.email)){\r\n                errors.email = \"Ya existe el correo electronico\";\r\n            }\r\n\r\n            if (!data.password) {\r\n                errors.password = \"Se requiere la contraseña\";\r\n            } else if (data.password.length < 6) {\r\n                errors.password = \"Como minimo 6 caracteres\";\r\n            } else if (data.password.length > 255) {\r\n                errors.password = \"Como maximo 255 caracteres\";\r\n            }\r\n\r\n            if (!data.confirmPassword) {\r\n                errors.confirmPassword = \"Se requiere la confirmacion de la contraseña\";\r\n            }else if (data.confirmPassword != data.password) {\r\n                errors.confirmPassword = \"Las contraseñas deben coincidir\";\r\n            } \r\n\r\n            return errors;\r\n        },\r\n\r\n        onSubmit: (data) => {\r\n            let idUser = uniqid(\"user-\");\r\n            let rolUser= \"rol-kvjva7f6\";\r\n            setIsPush(false); \r\n            const timeout = setTimeout(() => {}, 10000);\r\n\r\n            axios.post('https://magic-tech-backend.herokuapp.com/api/createUser', \r\n            {\r\n                id:         `${idUser}`,\r\n                nombre:     `${data.nombre}`,\r\n                apellido:   `${data.apellido}`,\r\n                email:      `${data.email}`,\r\n                password:   `${data.password}`,\r\n                rol:        `${rolUser}` \r\n            }\r\n            )\r\n            .then(function (response) {\r\n                if(response.status === 200){\r\n                    clearTimeout(timeout);\r\n                    toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Registrado Exitosamente', life: 3000 });\r\n                    \r\n                }\r\n                formik.resetForm();\r\n                setIsPush(true);\r\n            })\r\n            .catch(function (error) {\r\n                clearTimeout(timeout);\r\n                setIsPush(true);\r\n                formik.resetForm();\r\n            });\r\n\r\n        },\r\n      });\r\n\r\n\r\n    const isFormFieldValid = (name) => !!(formik.touched[name] && formik.errors[name]);\r\n    const getFormErrorMessage = (name) => {\r\n        return isFormFieldValid(name) && <small className=\"ml-2 p-error\" style={{'color': '#ff0000'}}>{formik.errors[name]}</small>;\r\n    };\r\n\r\n\r\n    const esRepetido =(value)=>{\r\n        var _users = [...users];\r\n        let res = _users.find(i => (i.email).toLowerCase() === (value).toLowerCase() );\r\n         if(res === undefined){\r\n             return true;\r\n         }else{\r\n             return false;\r\n         }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        fetchUsers();\r\n    },[])\r\n\r\n    const fetchUsers = () =>{\r\n        getUsers().then(json =>{\r\n            if(json.error){\r\n                console.log(\"Error\");\r\n            }else{\r\n                console.log(\"---------Users insertados-----------\");\r\n                setUsers(json.data);\r\n            }\r\n        })\r\n    }\r\n\r\n    return(\r\n        <div className=\"grid justify-content-evenly mt-6\">\r\n            <Toast ref={toast} />\r\n            <div className=\"lg:col-3\"></div>\r\n            <div className=\" lg:col-3 md:col-3\">\r\n                <div className=\"card p-fluid\" style={cookies.get('theme') === 'light' ?{ 'border': 'black 2px outset' }:{ 'border': 'white 2px outset' }}>\r\n                    <form onSubmit={formik.handleSubmit}>\r\n                        <div className='grid flex justify-content-center'>\r\n                            <div className=\"flex align-items-center justify-content-center  \">\r\n                                <h2 className=\"p-text-center p-p-1\">Registrarse</h2>        \r\n                            </div>\r\n                        </div>\r\n                        <div className='grid flex justify-content-center'>\r\n                            <div className=\"flex align-items-center justify-content-center  \">\r\n                                <div className=\"p-field mt-2 lg:col-12\">\r\n                                    <div className=\"p-inputgroup\">\r\n                                            <span className=\"p-inputgroup-addon\">\r\n                                                <i className=\"pi pi-user\"></i>\r\n                                            </span>\r\n                                            <InputText id=\"nombre\" name='nombre' placeholder=\"Nombre\" value={formik.values.nombre} onChange={formik.handleChange} autoFocus/>\r\n                                    </div>       \r\n                                </div>\r\n                            </div>   \r\n                        </div>\r\n                        {getFormErrorMessage('nombre')}\r\n                        \r\n                        <div className='grid flex justify-content-center'>\r\n                            <div className=\"flex align-items-center justify-content-center  \">\r\n                                <div className=\"p-field mt-1 lg:col-12\">\r\n                                    <div className=\"p-inputgroup\">\r\n                                            <span className=\"p-inputgroup-addon\">\r\n                                                <i className=\"pi pi-user\"></i>\r\n                                            </span>\r\n                                            <InputText id=\"apellido\" name='apellido' placeholder=\"Apellido\" value={formik.values.apellido} onChange={formik.handleChange}/>\r\n                                    </div>       \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {getFormErrorMessage('apellido')}\r\n                        \r\n                        <div className='grid flex justify-content-center'>\r\n                            <div className=\"flex align-items-center justify-content-center  \">\r\n                                <div className=\"p-field mt-1 lg:col-12\">\r\n                                    <div className=\"p-inputgroup\">\r\n                                            <span className=\"p-inputgroup-addon\">\r\n                                                <img   src={cookies.get('theme') === 'light' ? 'assets/layout/images/gmail.png' : 'assets/layout/images/gmail-dark.png'} style={{'height': '1.2em','width':'1.2em',}}/>   \r\n                                            </span>\r\n                                            <InputText id=\"email\" name='email' placeholder=\"Correo electronico\" value={formik.values.email} onChange={formik.handleChange}/>\r\n                                    </div>       \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {getFormErrorMessage('email')}\r\n\r\n                        <div className='grid flex justify-content-center'>\r\n                            <div className=\"flex align-items-center justify-content-center  \">\r\n                                <div className=\"p-field mt-1 lg:col-11\">\r\n                                    <div className=\"p-inputgroup\">\r\n                                            <span className=\"p-inputgroup-addon\">\r\n                                                <img   src={cookies.get('theme') === 'light' ? 'assets/layout/images/password.png' : 'assets/layout/images/password-dark.png'} style={{'height': '1.2em','width':'1.2em',}}/>   \r\n                                            </span>\r\n                                            <Password id=\"password\" name='password' placeholder=\"Contraseña\" value={formik.values.password} onChange={formik.handleChange} toggleMask  promptLabel=\"Por favor ingrese una contraseña\" weakLabel=\"Débil\" mediumLabel=\"Medio\" strongLabel=\"Fuerte\"/>\r\n                                    </div>       \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {getFormErrorMessage('password')}\r\n\r\n                        <div className='grid flex justify-content-center'>\r\n                            <div className=\"flex align-items-center justify-content-center  \">\r\n                                <div className=\"p-field mt-1 lg:col-11\">\r\n                                    <div className=\"p-inputgroup\">\r\n                                            <span className=\"p-inputgroup-addon\">\r\n                                                <img   src={cookies.get('theme') === 'light' ? 'assets/layout/images/password.png' : 'assets/layout/images/password-dark.png'} style={{'height': '1.2em','width':'1.2em',}}/>   \r\n                                            </span>\r\n                                            <Password id=\"confirmPassword\" name='confirmPassword' placeholder=\"Repite la contraseña\" value={formik.values.confirmPassword} onChange={formik.handleChange} toggleMask  promptLabel=\"Por favor ingrese una contraseña\" weakLabel=\"Débil\" mediumLabel=\"Medio\" strongLabel=\"Fuerte\"/>\r\n                                    </div>       \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {getFormErrorMessage('confirmPassword')}\r\n\r\n                        {\r\n                            (isPush)?\r\n                            <div className='grid flex justify-content-center'>\r\n                                <div className=\"flex align-items-center justify-content-center  \">\r\n                                    <div className=\"p-field mt-3 lg:col-11\">\r\n                                        <Button label=\"Registrar\"  icon=\"pi pi-check\" type=\"submit\" className=\"p-button-text\"  style={{'background': '#13af4e','color':'#ffffff'}}/>  \r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            :\r\n                            <div className='grid flex justify-content-center'>\r\n                                <div className=\"flex align-items-center justify-content-center  m-4\">\r\n                                    <ProgressSpinner style={{width: '50px', height: '50px', stroke: '#d62d20'}} strokeWidth=\"8\" fill=\"var(--surface-ground)\" animationDuration=\"10s\"/>\r\n                                </div>\r\n                            </div>  \r\n                        }\r\n\r\n                        <div className='grid flex justify-content-center mt-3'>\r\n                            <div className=\"flex align-items-center justify-content-center\">\r\n                                <Link to=\"/Login\" >\r\n                                    <Button label=\"Iniciar sesion\" className=\"p-button-link\" style={cookies.get('theme') === 'light' ? {'color':'#000000', 'font-weight': 'bold'} : {'color':'#ffffff', 'font-weight': 'bold'}}/>\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                        <div className='grid flex justify-content-center'>\r\n                            <div className=\"flex align-items-center justify-content-center\">\r\n                                <Link to=\"/\" >\r\n                                    <Button label=\"Pagina principal\" className=\"p-button-link\" style={cookies.get('theme') === 'light' ? {'color':'#000000', 'font-weight': 'bold'} : {'color':'#ffffff', 'font-weight': 'bold'}}/>\r\n                                </Link>\r\n                            </div>\r\n                        </div>        \r\n                    </form>\r\n                </div>\r\n            </div>\r\n            <div className=\"lg:col-3\"></div>\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\n","import 'react-app-polyfill/ie11';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n//import * as serviceWorker from './serviceWorker';\r\nimport { HashRouter, Switch ,Route} from 'react-router-dom'\r\nimport ScrollToTop                  from './ScrollToTop';\r\nimport { LoginApp }                 from './components/LoginApp';\r\nimport { Register }                 from './components/Register';\r\nimport Cookies                   from 'universal-cookie';\r\n\r\n\r\n{const cookies  = new Cookies()\r\n    cookies.set('isLogin', false);\r\n}\r\n\r\n\r\nReactDOM.render(\r\n\r\n    <HashRouter>\r\n        <Switch>\r\n            <Route path=\"/Login\"    exact={true} render={props => <LoginApp layoutColorMode={'light'} {...props} />} />\r\n            <Route path=\"/Register\" exact={true} render={props => <Register layoutColorMode={'light'} {...props} />} />\r\n            <ScrollToTop>\r\n                <App></App>\r\n            </ScrollToTop>\r\n        </Switch>\r\n    </HashRouter>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\n//serviceWorker.unregister();"],"sourceRoot":""}