{"version":3,"sources":["AppTopbar.js","AppFooter.js","AppMenu.js","AppConfig.js","components/Dashboard.js","service/apiRole.js","components/Role.js","service/apiUser.js","components/User.js","service/apiEmpresa.js","components/Empresa.js","service/apiConvocatoria.js","components/Convocatoria.js","service/apiPliego.js","components/PliegoEspecificacion.js","components/Aviso.js","components/ListEmpresa.js","components/ListConvocatoria.js","components/ListPliego.js","components/foro/Navegacion.js","components/foro/Post.js","components/foro/Listado.js","components/foro/Posts.js","components/foro/MostrarComent.js","components/foro/ListadoCometario.js","components/foro/FormularioComentario.js","components/foro/Comentario.js","components/foro/SinglePost.js","components/foro/Formulario.js","components/foro/Editar.js","components/Forum.js","service/apiContrato.js","components/Contrato.js","service/apiOrden.js","components/Orden.js","service/apiPlan.js","components/Plan.js","service/apiSobreA.js","components/ParteA.js","service/apiSobreB.js","components/ParteB.js","service/Menu.js","App.js","ScrollToTop.js","components/LoginApp.js","components/Register.js","index.js"],"names":["AppTopbar","props","login","setLogin","useState","history","useHistory","cookies","Cookies","className","type","onClick","onToggleMenuClick","onMobileTopbarMenuClick","to","src","layoutColorMode","alt","style","set","classNames","mobileTopbarMenuActive","onMobileSubTopbarMenuClick","push","AppFooter","height","AppSubmenu","activeIndex","setActiveIndex","onMenuItemClick","event","item","index","disabled","preventDefault","command","originalEvent","renderLink","i","content","submenuIcon","items","badge","Fragment","icon","label","renderLinkContent","activeClassName","e","exact","target","href","url","map","active","styleClass","badgeStyleClass","root","key","CSSTransition","timeout","enter","exit","in","unmountOnExit","AppMenu","model","AppConfig","setActive","scale","setScale","scales","themeScheme","setThemeScheme","themeColor","setThemeColor","config","useRef","outsideClickListener","unbindOutsideClickListener","useCallback","current","document","removeEventListener","hideConfigurator","bindOutsideClickListener","isOutsideClicked","addEventListener","useEffect","isSameNode","contains","documentElement","fontSize","configClassName","theme","themeElement","getElementById","replaceLink","linkElement","callback","isIE","setAttribute","id","getAttribute","cloneLinkElement","cloneNode","parentNode","insertBefore","nextSibling","remove","test","window","navigator","userAgent","changeThemeScheme","onColorModeChange","value","changeThemeColor","color","ref","prevState","length","inputId","name","onChange","onLayoutModeChange","checked","layoutMode","htmlFor","width","borderRadius","Dashboard","updateRolID","data","axios","put","rol","estado","then","response","console","log","catch","error","Role","emptyRole","roles","setRoles","roleDialog","setRoleDialog","deleteRoleDialog","setDeleteRoleDialog","globalFilter","setGlobalFilter","loading","setLoading","role","setRole","selectedRoles","setSelectedRoles","submitted","setSubmitted","toast","dt","stateRole","setStateRole","showMessage","setShowMessage","rolUpdate","setRolUpdate","formik","useFormik","initialValues","validate","errors","esRepetidoUpdate","esRepetido","onSubmit","_roles","_role","trim","findIndexById","show","severity","summary","detail","life","uniqid","post","createRol","resetForm","getFormErrorMessage","touched","isFormFieldValid","undefined","find","toLowerCase","original","res","filter","fetchRoles","get","json","openNew","hideDialog","hideDeleteRoleDialog","deleteRoleDialogFooter","showHeader","onInput","placeholder","headerGroup","header","colSpan","field","sortable","left","selection","onSelectionChange","dataKey","rowHover","paginator","rows","rowsPerPageOptions","paginatorTemplate","currentPageReportTemplate","resizableColumns","columnResizeMode","showGridlines","emptyMessage","headerColumnGroup","body","rowData","setValues","editRole","confirmDeleteRole","visible","modal","onHide","handleSubmit","values","handleChange","autoFocus","options","optionLabel","optionValue","footer","getUsers","updateUserID","nombre","apellido","email","password","getUsersActivas","User","emptyUser","setRol","users","setUsers","userDialog","setUserDialog","deleteUserDialog","setDeleteUserDialog","user","setUser","selectedUsers","setSelectedUsers","stateUser","setStateUser","emailUpdate","setEmailUpdate","confirmPassword","_users","_user","createUser","fetchUsers","hideDeleteUserDialog","deleteUserDialogFooter","editUser","confirmDeleteUser","toggleMask","promptLabel","weakLabel","mediumLabel","strongLabel","getEmpresas","updateEmpresaID","nombreCorto","nombreLargo","tipoSociedad","direccion","informacion","getEmpresasActivas","Empresa","emptyEmpresa","empresas","setEmpresas","empresaDialog","setEmpresaDialog","deleteEmpresaDialog","setDeleteEmpresaDialog","empresa","setEmpresa","selectedEmpresas","setSelectedEmpresas","stateEmpresa","setStateEmpresa","empresaUpdate","setEmpresaUpdate","esRepetidoEmpresa","esRepetidoUpdateEmpresa","_empresas","_empresa","createEmpresa","fetchEmpresas","hideDeleteEmpresaDialog","deleteEmpresaDialogFooter","editEmpresa","confirmDeleteEmpresa","tipo","tipoSociedadad","updateConvocatoriaID","titulo","codigo","semestre","link","publicado","getConvocatoriasPublicados","Convocatoria","emptyConvocatoria","convocatorias","setConvocatorias","convocatoriaDialog","setConvocatoriaDialog","deleteConvocatoriaDialog","setDeleteConvocatoriaDialog","convocatoria","setConvocatoria","selectedConvocatorias","setSelectedConvocatorias","stateConvocatoria","setStateConvocatoria","convocatoriaUpdate","setConvocatoriaUpdate","_convocatorias","_convocatoria","createConvocatoria","fetchConvocatorias","hideDeleteConvocatoriaDialog","deleteConvocatoriaDialogFooter","open","editConvocatoria","confirmDeleteConvocatoria","updatePliegoID","getPliegosPublicados","PliegoEspecificacion","emptyPliego","pliegos","setPliegos","pliegoDialog","setPliegoDialog","deletePliegoDialog","setDeletePliegoDialog","pliego","setPliego","selectedPliegos","setSelectedPliegos","statePliego","setStatePliego","pliegoUpdate","setPliegoUpdate","_pliegos","_pliego","createPliego","fetchPliegos","hideDeletePliegoDialog","deletePliegoDialogFooter","editPliego","confirmDeletePliego","Aviso","ListEmpresa","ListConvocatoria","ListPliego","Navegacion","Post","Component","confirmarEliminacion","this","info","swal","fire","title","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","result","borrarPost","render","class","Listado","mostrarPosts","posts","Object","keys","scope","Posts","state","MostarComent","ListadoCometario","comment","comm","usuario","FormularioComentario","tituloRef","React","createRef","entradaRef","crearPost","userId","crearComentario","Comentario","SinglePost","obtenerComment","aux","forEach","element","postId","setState","status","nuevoPost","assign","mostrarPost","cc","componentDidMount","Formulario","Editar","editarPost","cargarFormulario","defaultValue","Forum","obtenerPost","delete","resultado","postActualizado","postEditar","findIndex","path","idPost","location","pathname","replace","filtro","Number","updateContratoID","fecha","codigoConvocatoria","codigoPliego","Contrato","emptyContrato","addLocale","firstDayOfWeek","dayNames","dayNamesShort","dayNamesMin","monthNames","monthNamesShort","today","clear","contratos","setContratos","contratoDialog","setContratoDialog","deleteContratoDialog","setDeleteContratoDialog","contrato","setContrato","selectedContratos","setSelectedContratos","stateContrato","setStateContrato","contratoUpdate","setContratoUpdate","weekday","year","month","day","Date","getMonth","getFullYear","prevMonth","prevYear","nextMonth","nextYear","minDate","setMonth","setFullYear","maxDate","_contratos","_contrato","convertido","toLocaleDateString","createContrato","fetchContratos","hideDeleteContratoDialog","generatePDF","findIndexByIdEmpresa","findIndexByIdUser","doc","jsPDF","setFont","setFontSize","toLocaleUpperCase","save","deleteContratoDialogFooter","editContratto","confirmDeleteContrato","locale","dateFormat","readOnlyInput","updateOrdenID","caratulaA","indiceA","cartaA","boletaA","conformacionA","solvenciaA","caratulaB","indiceB","propuestaServicioB","planificacionB","propuestaEconomicaB","planPagosB","cumplimientoProponente","claridadOrganizacion","cumplimientoTecnico","claridadProceso","plazosEjecucion","precioTotal","usoHerramienta","Orden","emptyParte","partes","setPartes","parteDialog","setParteDialog","deleteParteDialog","setDeleteParteDialog","parte","setParte","selectedPartes","setSelectedPartes","stateParte","setStateParte","parteUpdate","setParteUpdate","options1","_partes","_parte","convertido1","createOrden","fetchOrdens","hideDeleteParteDialog","deleteParteDialogFooter","editParte","confirmDeleteParte","autoTable","html","head","autoResize","updatePlanID","Plan","createPlan","fetchPartes","updateEntregaAID","fechaInicio","fechaCierre","ParteA","options2","convertido2","createEntregaA","updateEntregaBID","ParteB","createEntregaB","MenuService","getMenusAdmin","getMenusUser","getMenusDocente","App","setLayoutMode","setLayoutColorMode","inputStyle","setInputStyle","ripple","setRipple","staticMenuInactive","setStaticMenuInactive","overlayMenuActive","setOverlayMenuActive","mobileMenuActive","setMobileMenuActive","setMobileTopbarMenuActive","menus","setMenus","menuService","PrimeReact","menuClick","mobileTopbarMenuClick","addClass","removeClass","isDesktop","innerWidth","classList","add","RegExp","split","join","wrapperClass","component","rippleEffect","onRippleEffect","onInputStyleChange","mode","withRouter","useLocation","scrollTo","children","LoginApp","isPush","setIsPush","setTimeout","clearTimeout","shape","size","feedback","stroke","strokeWidth","fill","animationDuration","Register","idUser","ReactDOM"],"mappings":"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","file":"static/js/main.7b27ebdb.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { Link }          from 'react-router-dom';\r\nimport classNames        from 'classnames';\r\nimport { useHistory }    from 'react-router-dom';\r\nimport Cookies           from 'universal-cookie';\r\n\r\nexport const AppTopbar = (props) => {\r\n    const [login, setLogin]    = useState(false);\r\n    const history              = useHistory();\r\n    const cookies              = new Cookies();\r\n    \r\n    \r\n    return (\r\n        <div className=\"layout-topbar\">\r\n\r\n            <button type=\"button\" className=\"p-link  layout-menu-button layout-topbar-button\" onClick={props.onToggleMenuClick}>\r\n                <i className=\"pi pi-bars\"/>\r\n            </button>\r\n        \r\n\r\n            <button type=\"button\" className=\"p-link layout-topbar-menu-button layout-topbar-button\" onClick={props.onMobileTopbarMenuClick}>\r\n                <i className=\"pi pi-ellipsis-v\" />\r\n            </button>\r\n\r\n            <Link to=\"/\" className=\"layout-topbar-logo ml-6 \">\r\n                <img src={props.layoutColorMode === 'light' ? 'assets/layout/images/MagicTech.png' : 'assets/layout/images/MagicTech.png'} alt=\"logo\" style={{'height': '1.8em','width':'2.0em',}}/>\r\n                {(props.layoutColorMode === 'light')?cookies.set('theme', 'light'):cookies.set('theme', 'dark')}\r\n                <span>MAGIC TECH</span>\r\n            </Link>\r\n                {(login)? \r\n                 ( \r\n                    <ul className={classNames(\"layout-topbar-menu lg:flex origin-top\", {'layout-topbar-menu-mobile-active': props.mobileTopbarMenuActive })}>\r\n                        <li>\r\n                            <button className=\"p-link layout-topbar-button\" onClick={props.onMobileSubTopbarMenuClick}>\r\n                                <i className=\"pi pi-calendar\"/>\r\n                                <span>Events</span>\r\n                            </button>\r\n                        </li>\r\n                        <li>\r\n                            <button className=\"p-link layout-topbar-button\" onClick={props.onMobileSubTopbarMenuClick}>\r\n                                <i className=\"pi pi-cog\"/>\r\n                                <span>Settings</span>\r\n                            </button>\r\n                        </li>\r\n                        <li>\r\n                            <button className=\"p-link layout-topbar-button\" onClick={props.onMobileSubTopbarMenuClick}>\r\n                                <i className=\"pi pi-user\"/>\r\n                                <span>Profile</span>\r\n                            </button>\r\n                        </li>\r\n                    </ul>\r\n                )\r\n                :\r\n                (\r\n                    <ul className={classNames(\"layout-topbar-menu lg:flex origin-top\", {'layout-topbar-menu-mobile-active': props.mobileTopbarMenuActive })}>\r\n                        <li>\r\n                            <button className=\"p-link layout-topbar-button\"  onClick={() => history.push('/Register')}>\r\n                                <i className=\"pi pi-user-plus\"/>\r\n                                <span>Registrarse</span>\r\n                            </button>\r\n                        </li>\r\n                        <li>\r\n                            <button className=\"p-link layout-topbar-button\"  onClick={() => history.push('/Login')}>\r\n                                <i className=\"pi pi-user\"/>\r\n                                <span>Iniciar Sesion</span>\r\n                            </button>\r\n                        </li>\r\n                    </ul>\r\n                ) \r\n                }\r\n\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\n\r\nexport const AppFooter = (props) => {\r\n\r\n    return (\r\n        <div className=\"layout-footer\">\r\n            <img src={props.layoutColorMode === 'light' ? 'assets/layout/images/MagicTech.png' : 'assets/layout/images/MagicTech.png'} alt=\"Logo\" height=\"20\" className=\"mr-2\" style={{'height': '2.7em','width':'3em',}}/>\r\n            por\r\n            <span className=\"font-medium ml-2\">MAGIC TECH</span>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport classNames from 'classnames';\r\nimport {Ripple} from \"primereact/ripple\";\r\n\r\nconst AppSubmenu = (props) => {\r\n\r\n    const [activeIndex, setActiveIndex] = useState(null)\r\n\r\n    const onMenuItemClick = (event, item, index) => {\r\n        //avoid processing disabled items\r\n        if (item.disabled) {\r\n            event.preventDefault();\r\n            return true;\r\n        }\r\n\r\n        //execute command\r\n        if (item.command) {\r\n            item.command({ originalEvent: event, item: item });\r\n        }\r\n\r\n        if (index === activeIndex)\r\n            setActiveIndex(null);\r\n        else\r\n            setActiveIndex(index);\r\n\r\n        if (props.onMenuItemClick) {\r\n            props.onMenuItemClick({\r\n                originalEvent: event,\r\n                item: item\r\n            });\r\n        }\r\n    }\r\n\r\n    const renderLinkContent = (item) => {\r\n        let submenuIcon = item.items && <i className=\"pi pi-fw pi-angle-down menuitem-toggle-icon\"></i>;\r\n        let badge = item.badge && <span className=\"menuitem-badge\">{item.badge}</span>;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <i className={item.icon}></i>\r\n                <span>{item.label}</span>\r\n                {submenuIcon}\r\n                {badge}\r\n                <Ripple/>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    const renderLink = (item, i) => {\r\n        let content = renderLinkContent(item);\r\n\r\n        if (item.to) {\r\n            return (\r\n                <NavLink className=\"p-ripple\" activeClassName=\"router-link-active router-link-exact-active\" to={item.to} onClick={(e) => onMenuItemClick(e, item, i)} exact target={item.target}>\r\n                    {content}\r\n                </NavLink>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <a href={item.url} className=\"p-ripple\" onClick={(e) => onMenuItemClick(e, item, i)} target={item.target}>\r\n                    {content}\r\n                </a>\r\n            );\r\n        }\r\n    }\r\n\r\n    let items = props.items && props.items.map((item, i) => {\r\n        let active = activeIndex === i;\r\n        let styleClass = classNames(item.badgeStyleClass, {'layout-menuitem-category': props.root, 'active-menuitem': active && !item.to });\r\n\r\n        if(props.root) {\r\n            return (\r\n                <li className={styleClass} key={i}>\r\n                    {props.root === true && <React.Fragment>\r\n                        <div className=\"layout-menuitem-root-text\">{item.label}</div>\r\n                        <AppSubmenu items={item.items} onMenuItemClick={props.onMenuItemClick} />\r\n                    </React.Fragment>}\r\n                </li>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <li className={styleClass} key={i}>\r\n                    {renderLink(item, i)}\r\n                    <CSSTransition classNames=\"layout-submenu-wrapper\" timeout={{ enter: 1000, exit: 450 }} in={active} unmountOnExit>\r\n                        <AppSubmenu items={item.items} onMenuItemClick={props.onMenuItemClick} />\r\n                    </CSSTransition>\r\n                </li>\r\n            );\r\n        }\r\n    });\r\n\r\n    return items ? <ul className={props.className}>{items}</ul> : null;\r\n}\r\n\r\nexport const AppMenu = (props) => {\r\n    return (\r\n        <div className=\"layout-menu-container\">\r\n            <AppSubmenu items={props.model} className=\"layout-menu\" onMenuItemClick={props.onMenuItemClick} root={true} />\r\n\r\n        </div>\r\n    );\r\n}\r\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\r\nimport { RadioButton } from 'primereact/radiobutton';\r\nimport { InputSwitch } from 'primereact/inputswitch';\r\nimport classNames from 'classnames';\r\nimport {Button} from \"primereact/button\";\r\nimport Cookies  from 'universal-cookie';\r\n\r\nexport const AppConfig = (props) => {\r\n\r\n    const [active, setActive] = useState(false);\r\n    const [scale, setScale] = useState(16);\r\n    const [scales] = useState([12,13,14,15,16]);\r\n    const [themeScheme, setThemeScheme] = useState('saga');\r\n    const [themeColor, setThemeColor] = useState('blue');\r\n    const config = useRef(null);\r\n    let outsideClickListener = useRef(null);\r\n    const cookies  = new Cookies();\r\n\r\n    const unbindOutsideClickListener = useCallback(() => {\r\n        if (outsideClickListener.current) {\r\n            document.removeEventListener('click', outsideClickListener.current);\r\n            outsideClickListener.current = null;\r\n        }\r\n    }, []);\r\n\r\n    const hideConfigurator = useCallback((event) => {\r\n        setActive(false);\r\n        unbindOutsideClickListener();\r\n        event.preventDefault();\r\n    }, [unbindOutsideClickListener]);\r\n\r\n    const bindOutsideClickListener = useCallback(() => {\r\n        if (!outsideClickListener.current) {\r\n            outsideClickListener.current = (event) => {\r\n                if (active && isOutsideClicked(event)) {\r\n                    hideConfigurator(event);\r\n                }\r\n            };\r\n            document.addEventListener('click', outsideClickListener.current);\r\n        }\r\n    }, [active, hideConfigurator]);\r\n\r\n    useEffect(() => {\r\n        if (active) {\r\n            bindOutsideClickListener()\r\n        }\r\n        else {\r\n            unbindOutsideClickListener()\r\n        }\r\n    }, [active, bindOutsideClickListener, unbindOutsideClickListener]);\r\n\r\n    const isOutsideClicked = (event) => {\r\n        return !(config.current.isSameNode(event.target) || config.current.contains(event.target));\r\n    }\r\n\r\n    const decrementScale = () => {\r\n        setScale((prevState) => --prevState);\r\n    }\r\n\r\n    const incrementScale = () => {\r\n        setScale((prevState) => ++prevState);\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.documentElement.style.fontSize = scale + 'px';\r\n    }, [scale])\r\n\r\n    const toggleConfigurator = (event) => {\r\n        setActive(prevState => !prevState);\r\n    }\r\n\r\n    const configClassName = classNames('layout-config', {\r\n        'layout-config-active': active\r\n    });\r\n\r\n    useEffect(() => {\r\n        let theme = themeScheme + '-' + themeColor;\r\n        let themeElement = document.getElementById('theme-link');\r\n        const themeHref = 'assets/themes/' + theme + '/theme.css';\r\n        replaceLink(themeElement, themeHref);\r\n\r\n    })\r\n\r\n    const replaceLink = (linkElement, href, callback) => {\r\n        if (isIE()) {\r\n            linkElement.setAttribute('href', href);\r\n\r\n            if (callback) {\r\n                callback();\r\n            }\r\n        }\r\n        else {\r\n            const id = linkElement.getAttribute('id');\r\n            const cloneLinkElement = linkElement.cloneNode(true);\r\n\r\n            cloneLinkElement.setAttribute('href', href);\r\n            cloneLinkElement.setAttribute('id', id + '-clone');\r\n\r\n            linkElement.parentNode.insertBefore(cloneLinkElement, linkElement.nextSibling);\r\n\r\n            cloneLinkElement.addEventListener('load', () => {\r\n                linkElement.remove();\r\n                cloneLinkElement.setAttribute('id', id);\r\n\r\n                if (callback) {\r\n                    callback();\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    const isIE = () => {\r\n        return /(MSIE|Trident\\/|Edge\\/)/i.test(window.navigator.userAgent)\r\n    }\r\n\r\n    const changeThemeScheme = (e, theme) => {\r\n        props.onColorModeChange(e.value);\r\n        setThemeScheme(theme);\r\n        if(theme === 'saga'){\r\n            cookies.set('theme', 'light');\r\n        }else{\r\n            cookies.set('theme', 'dark');\r\n        }\r\n        \r\n    }\r\n\r\n    const changeThemeColor = (e, color) => {\r\n        setThemeColor(color);\r\n    }\r\n\r\n    return (\r\n        <div ref={config} className={configClassName} id={\"layout-config\"}>\r\n            <button className=\"layout-config-button p-link\" id=\"layout-config-button\" onClick={toggleConfigurator}>\r\n                <i className=\"pi pi-cog\"></i>\r\n            </button>\r\n            <Button className=\"p-button-danger layout-config-close p-button-rounded p-button-text\" icon=\"pi pi-times\" onClick={hideConfigurator}/>\r\n\r\n            <div className=\"layout-config-content\">\r\n                <h6 className=\"mt-0\">Escala de Componentes</h6>\r\n                <div className=\"config-scale\">\r\n                    <Button icon=\"pi pi-minus\" onClick={decrementScale} className=\"p-button-text\" disabled={scale === scales[0]} />\r\n                    {\r\n                        scales.map((item) => {\r\n                            return <i className={classNames('pi pi-circle-on', {'scale-active': item === scale})} key={item}/>\r\n                        })\r\n                    }\r\n                    <Button icon=\"pi pi-plus\" onClick={incrementScale} className=\"p-button-text\" disabled={scale === scales[scales.length - 1]} />\r\n                </div>\r\n\r\n            \r\n\r\n                <h6>Tipo de Menu</h6>\r\n                <div className=\"p-formgroup-inline\">\r\n                    <div className=\"field-radiobutton\">\r\n                        <RadioButton inputId=\"static\" name=\"layoutMode\" value=\"static\" onChange={(e) => props.onLayoutModeChange(e.value)} checked={props.layoutMode === 'static'} />\r\n                        <label htmlFor=\"static\">Estatico</label>\r\n                    </div>\r\n                    <div className=\"field-radiobutton\">\r\n                        <RadioButton inputId=\"overlay\" name=\"layoutMode\" value=\"overlay\" onChange={(e) => props.onLayoutModeChange(e.value)} checked={props.layoutMode === 'overlay'} />\r\n                        <label htmlFor=\"overlay\">Dinamico</label>\r\n                    </div>\r\n                </div>\r\n\r\n                <h6>Tema</h6>\r\n                <div className=\"p-formgroup-inline\">\r\n                    <div className=\"field-radiobutton\">\r\n                        <RadioButton inputId=\"light\" name=\"layoutColorMode\" value=\"light\" onChange={e => changeThemeScheme(e, 'saga')} checked={props.layoutColorMode === 'light'} />\r\n                        <label htmlFor=\"light\">Claro</label>\r\n                    </div>\r\n                    <div className=\"field-radiobutton\">\r\n                        <RadioButton inputId=\"dim\" name=\"layoutColorMode\" value=\"dim\" onChange={e => changeThemeScheme(e, 'vela')} checked={props.layoutColorMode === 'dim'} />\r\n                        <label htmlFor=\"dark\">Noche</label>\r\n                    </div>\r\n                    <div className=\"field-radiobutton\">\r\n                        <RadioButton inputId=\"dark\" name=\"layoutColorMode\" value=\"dark\" onChange={e => changeThemeScheme(e, 'arya')} checked={props.layoutColorMode === 'dark'} />\r\n                        <label htmlFor=\"dark\">Oscuro</label>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <h6>Colores Primarios</h6>\r\n                <div className=\"flex\">\r\n                    <div style={{width: '2rem', height: '2rem', borderRadius:'6px'}} className=\"bg-blue-500 mr-3 cursor-pointer\" onClick={e => changeThemeColor(e, 'blue')}/>\r\n                    <div style={{width: '2rem', height: '2rem', borderRadius:'6px'}} className=\"bg-green-500 mr-3 cursor-pointer\" onClick={e => changeThemeColor(e, 'green')}/>\r\n                    <div style={{width: '2rem', height: '2rem', borderRadius:'6px'}} className=\"bg-orange-500 mr-3 cursor-pointer\" onClick={e => changeThemeColor(e, 'orange')}/>\r\n                    <div style={{width: '2rem', height: '2rem', borderRadius:'6px'}} className=\"bg-purple-500 mr-3 cursor-pointer\" onClick={e => changeThemeColor(e, 'purple')}/>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react';\r\n\r\n\r\nexport const Dashboard = () => {\r\n\r\n    return (\r\n        <div className=\"grid\">\r\n             <h1>Estamos trabajando - En el Tablero</h1>\r\n        </div>\r\n    );\r\n}\r\n","import axios from 'axios';\r\n\r\n export const getRoles = () =>{\r\n     return axios.get('https://magic-tech-backend.herokuapp.com/api/getRoles');\r\n }\r\n\r\n export const getRolID =(id) =>{\r\n     return axios.get(`https://magic-tech-backend.herokuapp.com/api/getRolId/${id}`);\r\n }\r\n\r\n export const createRol=(data)=>{\r\n    return axios.post('https://magic-tech-backend.herokuapp.com/api/createRol', \r\n      {\r\n         id:     `${data.id}`,\r\n         rol:    `${data.rol}`,\r\n         estado: `${data.estado}`\r\n      }\r\n      )\r\n      .then(function (response) {\r\n        console.log(response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n }\r\n\r\nexport const updateRolID =(data,id) =>{\r\n    return axios.put(`https://magic-tech-backend.herokuapp.com/api/updateRol/${id}`, \r\n    {\r\n       rol: `${data.rol}`,\r\n       estado: `${data.estado}`\r\n    }\r\n    )\r\n    .then(function (response) {\r\n      console.log(response);\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error);\r\n    });\r\n}\r\n\r\nexport const deleteRolID =(id) =>{\r\n    return axios.delete(`https://magic-tech-backend.herokuapp.com/api/deleteRolId/${id}`);\r\n}\r\n\r\nexport const getRolesActivas = () =>{\r\n  return axios.get('https://magic-tech-backend.herokuapp.com/api/getRolesActivas');\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport classNames           from 'classnames';\r\nimport { DataTable }        from 'primereact/datatable';\r\nimport { Column }           from 'primereact/column';\r\nimport { Toast }            from 'primereact/toast';\r\nimport { Button }           from 'primereact/button';\r\nimport { Toolbar }          from 'primereact/toolbar';\r\nimport { Dialog }           from 'primereact/dialog';\r\nimport { InputText }        from 'primereact/inputtext';\r\nimport { ColumnGroup }      from 'primereact/columngroup';\r\nimport { Row }              from 'primereact/row';\r\nimport { Dropdown }         from 'primereact/dropdown';\r\nimport { useFormik }        from \"formik\";\r\n\r\nimport uniqid               from 'uniqid';\r\n\r\nimport { getRoles,createRol,updateRolID,deleteRolID } from '../service/apiRole';\r\n\r\nexport const Role = (props) => {\r\n\r\n    \r\n    let emptyRole = {\r\n        id:     null,\r\n        rol:    '',\r\n        estado: ''\r\n    };\r\n\r\n    const estados = [\r\n        { name: \"Activo\"      },\r\n        { name: \"Desactivado\" }\r\n    ];\r\n\r\n    const [roles, setRoles]                          = useState(null);\r\n    const [roleDialog, setRoleDialog]                = useState(false);\r\n    const [deleteRoleDialog, setDeleteRoleDialog]    = useState(false);\r\n    const [globalFilter, setGlobalFilter]            = useState('');\r\n    const [loading, setLoading]                      = useState(true);\r\n\r\n    const [role, setRole]                            = useState(emptyRole);\r\n    const [selectedRoles, setSelectedRoles]          = useState(null);\r\n    const [submitted, setSubmitted]                  = useState(false);\r\n    const toast                                      = useRef(null);\r\n    const dt                                         = useRef(null);\r\n    const [stateRole,setStateRole]                   = useState(false);\r\n    const [showMessage, setShowMessage]              = useState(false);\r\n    const [rolUpdate, setRolUpdate]                  = useState(\"\");\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n          rol:    \"\",\r\n          estado: \"\"\r\n        },\r\n        validate: (data) => {\r\n            let errors = {};\r\n            if(stateRole){\r\n                if (!data.rol) {\r\n                    errors.rol = \"Se requiere el rol\";\r\n                } else if (data.rol.length < 2) {\r\n                    errors.rol = \"Como minimo 2 caracteres\";\r\n                } else if (data.rol.length > 30) {\r\n                    errors.rol = \"Como maximo 30 caracteres\";\r\n                } else if (!/^^[a-zA-Z\\s]+$/i.test(data.rol)) {\r\n                    errors.rol = \"No se permiten numero o caracteres especiales\";\r\n                }else if(!esRepetidoUpdate(data.rol,rolUpdate)&&stateRole === true){\r\n                    errors.rol = \"Ya existe el rol\";  \r\n                }else if(!esRepetido(data.rol)&&stateRole === false){\r\n                    errors.rol = \"Ya existe el rol\";\r\n                }\r\n\r\n\r\n                if (!data.estado) {\r\n                    errors.estado = \"Se requiere el estado\";\r\n                } else if (data.estado.length < 2) {\r\n                    errors.estado = \"Como minimo 2 caracteres\";\r\n                } else if (data.estado.length > 30) {\r\n                    errors.estado = \"Como maximo 30 caracteres\";\r\n                } else if (!/^^[a-zA-Z\\s]+$/i.test(data.estado)) {\r\n                    errors.estado = \"No se permiten numero o caracteres especiales\";\r\n                }\r\n                \r\n            }else{\r\n                if (!data.rol) {\r\n                    errors.rol = \"Se requiere el rol\";\r\n                } else if (data.rol.length < 2) {\r\n                    errors.rol = \"Como minimo 2 caracteres\";\r\n                } else if (data.rol.length > 30) {\r\n                    errors.rol = \"Como maximo 30 caracteres\";\r\n                } else if (!/^^[a-zA-Z\\s]+$/i.test(data.rol)) {\r\n                    errors.rol = \"No se permiten numero o caracteres especiales\";\r\n                }else if(!esRepetidoUpdate(data.rol,rolUpdate)&&stateRole === true){\r\n                    errors.rol = \"Ya existe el rol\";  \r\n                }else if(!esRepetido(data.rol)&&stateRole === false){\r\n                    errors.rol = \"Ya existe el rol\";\r\n                }\r\n\r\n            }\r\n\r\n\r\n            return errors;\r\n        },\r\n        onSubmit: (data) => {\r\n\r\n        if(submitted === true){\r\n            let _roles = [...roles];\r\n            let _role  = {...role };\r\n            _role['rol']    = data.rol;\r\n            _role['estado'] = data.estado;\r\n\r\n            if (_role.rol.trim()) {\r\n                if (role.id) {\r\n                    setRole({ ...role });\r\n                    console.log(role);\r\n                    const index = findIndexById(role.id);\r\n                    \r\n                    _roles[index] = _role;\r\n                    updateRolID({rol:`${_role.rol}`,estado:`${_role.estado}`},role.id);\r\n                    toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Rol Actualizado', life: 3000 });\r\n                }\r\n                else {\r\n\r\n                    _role.id     = uniqid(\"rol-\");\r\n                    _role.estado = \"Activo\";\r\n                    _roles.push(_role);\r\n                    createRol({id:_role.id, rol:`${_role.rol}`,estado:`${_role.estado}`});\r\n                    toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Rol Creado', life: 3000 });\r\n                }\r\n            }\r\n            setRoles(_roles);\r\n            setRoleDialog(false);\r\n            setRole(emptyRole);\r\n            formik.resetForm();\r\n        }\r\n            \r\n        },\r\n      });\r\n\r\n    const isFormFieldValid = (name) => !!(formik.touched[name] && formik.errors[name]);\r\n    const getFormErrorMessage = (name) => {\r\n         return isFormFieldValid(name) && <small className=\"ml-1 p-error\" style={{'color': '#ff0000'}}>{formik.errors[name]}</small>;\r\n    };\r\n\r\n    const esRepetido =(value)=>{\r\n        var _roles = [...roles];\r\n        let res = _roles.find(i => (i.rol).toLowerCase().trim() === (value).toLowerCase().trim() );\r\n         if(res === undefined){\r\n             return true;\r\n         }else{\r\n             return false;\r\n         }\r\n    }\r\n    const esRepetidoUpdate =(value,original)=>{\r\n        var _roles = [...roles];\r\n        let aux = _roles.filter(i =>(i.rol).toLowerCase() != (original).toLowerCase())\r\n        let res = aux.find(i => (i.rol).toLowerCase().trim() === (value).toLowerCase().trim() );\r\n         if(res === undefined || res === original){\r\n             return true;\r\n         }else{\r\n             return false;\r\n         }\r\n    }\r\n\r\n\r\n    useEffect(()=>{\r\n        fetchRoles();\r\n    },[])\r\n\r\n\r\n    const fetchRoles = () =>{\r\n        getRoles().then(json =>{\r\n            if(json.error){\r\n                console.log(\"Error\");\r\n            }else{\r\n                console.log(\"---------roles insertados-----------\");\r\n                setRoles(json.data);\r\n                setLoading(false);\r\n            }\r\n        })\r\n    }\r\n\r\n    const openNew = () => {\r\n        setRole(emptyRole);\r\n        setSubmitted(false);\r\n        setStateRole(false);\r\n        formik.resetForm();\r\n        setRoleDialog(true);      \r\n    }\r\n\r\n    const hideDialog = () => {\r\n        setSubmitted(false);\r\n        setRoleDialog(false);\r\n        \r\n    }\r\n\r\n    const showDialog = () => {\r\n        setSubmitted(true);\r\n        formik.handleSubmit();\r\n    }\r\n\r\n    const hideDeleteRoleDialog = () => {\r\n        setDeleteRoleDialog(false);\r\n    }\r\n\r\n\r\n    const editRole = (role) => {\r\n        setRole({ ...role });\r\n        formik.resetForm();\r\n        formik.setValues({rol:`${role.rol}`,estado:`${role.estado}`});\r\n        setRolUpdate(`${role.rol}`);\r\n        setStateRole(true);\r\n        setRoleDialog(true);\r\n    }\r\n\r\n    const confirmDeleteRole = (role) => {\r\n        setRole(role);\r\n        setDeleteRoleDialog(true);\r\n    }\r\n\r\n    const deleteRole = () => {\r\n        \r\n        let _roles = [...roles];\r\n        let _role  = {...role };\r\n\r\n        if (_role.rol.trim()) {\r\n            if (role.id) {\r\n\r\n                console.log(role);\r\n                const index = findIndexById(role.id);\r\n                \r\n                _roles[index] = _role;\r\n                updateRolID({rol:`${_role.rol}`,estado:\"Desactivado\"},role.id);\r\n                _role['rol']    = _role.rol;\r\n                _role['estado'] = \"Desactivado\";\r\n                setRole({ ...role });\r\n                toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Rol Desactivado', life: 3000 });\r\n            }\r\n        }\r\n\r\n        setRoles(_roles);\r\n        setRole(emptyRole);\r\n        setDeleteRoleDialog(false);\r\n    }\r\n\r\n    const findIndexById = (id) => {\r\n        let index = -1;\r\n        for (let i = 0; i < roles.length; i++) {\r\n            if (roles[i].id === id) {\r\n\r\n                index = i;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return index;\r\n    }\r\n\r\n\r\n    const idBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">id</span>\r\n                {rowData.id}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const roleBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Rol</span>\r\n                {rowData.rol}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const estadoBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Estado</span>\r\n                {rowData.estado}\r\n            </>\r\n        );\r\n    }\r\n    \r\n\r\n    const leftToolbarTemplate = () => {\r\n        return (\r\n            <React.Fragment>\r\n                <Button style={props.layoutColorMode === 'light' ? {'color':'#ffffff','background': '#13af4e'} : {'color':'#ffffff','background': '#13af4e'}} label=\"Nuevo\" icon=\"pi pi-plus\" className=\"p-button-success p-mr-2\" onClick={openNew} />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    const actionBodyTemplate = (rowData) => {\r\n        return (\r\n            <div className=\"actions\">\r\n                <Button icon=\"pi pi-pencil\" style={{'background': '#13af4e'}} className=\"p-button-rounded p-button-success mr-2\"   onClick={() => editRole(rowData)} />\r\n                <Button icon=\"pi pi-trash\"  style={{'background': '#eee500'}} className=\"p-button-rounded p-button-warning\"        onClick={() => confirmDeleteRole(rowData)} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const deleteRoleDialogFooter = (\r\n        <>\r\n            <Button label=\"No\" icon=\"pi pi-times\" style={{'background': '#d13639','color':'#ffffff'}} className=\"p-button-text\" onClick={hideDeleteRoleDialog} />\r\n            <Button label=\"Si\" icon=\"pi pi-check\" style={props.layoutColorMode === 'light' ? {'color':'#13af4e','border-color':'#13af4e'} : {'color':'#13af4e','border-color':'#13af4e'}} className=\"p-button-text\" onClick={deleteRole} />\r\n        </>\r\n    );\r\n\r\n    const renderHeader = () => {\r\n        return (\r\n            <div className=\"flex flex-column md:flex-row md:justify-content-between md:align-items-center\">\r\n            <h5 className=\"m-0\">Gestion de roles</h5>\r\n            <span className=\"block mt-2 md:mt-0 p-input-icon-left\">\r\n                <i className=\"pi pi-search\" />\r\n                <InputText type=\"search\" onInput={(e) => setGlobalFilter(e.target.value)} placeholder=\"Buscar...\" />\r\n            </span>\r\n        </div>\r\n        )\r\n    }\r\n\r\n    const renderGroup = () => {\r\n        return (\r\n            <ColumnGroup>\r\n                <Row>\r\n                    <Column header={showHeader} colSpan={4}></Column>\r\n                </Row>\r\n                <Row>\r\n                    <Column header=\"ID\"                field=\"id\"      sortable style={{ 'background-color': '#13af4e', width:'20%'}} />\r\n                    <Column header=\"ROL\"               field=\"rol\"     sortable style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                    <Column header=\"ESTADO\"            field=\"estado\"  sortable style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                    <Column header=\"Editar/Eliminar\"                            style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                </Row>\r\n            </ColumnGroup>\r\n        )\r\n    }\r\n\r\n\r\n    const showHeader  = renderHeader();\r\n    const headerGroup = renderGroup();\r\n\r\n    const headerDialog =()=>{\r\n        return (stateRole)?\"Actualizando Rol\":\"Añadir Rol\"\r\n    }\r\n\r\n    return (\r\n        <div className=\"p-grid crud-demo\">\r\n            <div className=\"p-col-12\">\r\n                <div className=\"card\">\r\n                \r\n                    <Toast ref={toast} />\r\n                    <Toolbar className=\"p-mb-4\" left={leftToolbarTemplate}></Toolbar>\r\n\r\n                    <DataTable ref={dt} value={roles} selection={selectedRoles}  onSelectionChange={(e) => setSelectedRoles(e.value)}\r\n                        dataKey=\"id\" rowHover paginator rows={10} rowsPerPageOptions={[5, 10, 25]} className=\"datatable-responsive p-datatable-sm p-datatable-gridlines p-datatable-striped\"\r\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\r\n                        currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} roles\" resizableColumns columnResizeMode=\"fit\" showGridlines\r\n                        globalFilter={globalFilter} emptyMessage=\"No se encontro el rol\" loading={loading} headerColumnGroup={headerGroup}\r\n                    >\r\n\r\n                        <Column style={{width:'20%'}} header=\"ID\"     field=\"id\"     sortable body={idBodyTemplate}></Column>\r\n                        <Column style={{width:'20%'}} header=\"ROL\"    field=\"rol\"    sortable body={roleBodyTemplate}></Column>\r\n                        <Column style={{width:'20%'}} header=\"ESTADO\" field=\"estado\" sortable body={estadoBodyTemplate}></Column>\r\n                        <Column style={{width:'20%'}} body={actionBodyTemplate}></Column>\r\n\r\n                    </DataTable>\r\n\r\n\r\n                    <Dialog visible={roleDialog} style={{ width: '450px' }} header={headerDialog} modal className=\"p-fluid\" onHide={hideDialog}>  \r\n                        <form onSubmit={formik.handleSubmit}>\r\n                            <div className=\"form-group\">\r\n                                <div className=\"p-field mt-2\">\r\n                                    <div className=\"p-inputgroup\">\r\n                                            <span className=\"p-inputgroup-addon\">\r\n                                                <img   src={props.layoutColorMode === 'light' ? 'assets/layout/images/rol.png' : 'assets/layout/images/rol-dark.png'} style={{'height': '1.2em','width':'1.2em',}}/>   \r\n                                            </span>\r\n                                            <InputText id=\"rol\" type=\"text\" name=\"rol\" value={formik.values.rol} onChange={formik.handleChange} placeholder=\"Rol\" autoFocus/>\r\n                                    </div>       \r\n                                </div>\r\n                                {getFormErrorMessage('rol')}\r\n                            </div>\r\n                            {(stateRole)?\r\n                                <div className=\"form-group\">\r\n                                    <div className=\"p-field mt-2\">\r\n                                        <div className=\"p-inputgroup\">\r\n                                            <span className=\"p-inputgroup-addon\">\r\n                                                <img   src={props.layoutColorMode === 'light' ? 'assets/layout/images/estado.png' : 'assets/layout/images/estado-dark.png'} style={{'height': '1.2em','width':'1.2em',}}/>   \r\n                                            </span>\r\n                                            <Dropdown id=\"estado\" name=\"estado\" placeholder=\"Seleccione un estado\" value={formik.values.estado} onChange={formik.handleChange} options={estados} optionLabel=\"name\"  optionValue=\"name\"/> \r\n                                        </div>       \r\n                                    </div>\r\n                                    {getFormErrorMessage('estado')}\r\n                                </div>\r\n                            :\r\n                                null\r\n                            }\r\n                            <div className='mt-2'>\r\n                                <div className=\"flex justify-content-center flex-wrap\">\r\n                                    <div className=\"flex align-items-center justify-content-center  m-2\">\r\n                                        <Button label=\"Cancelar\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDialog} style={props.layoutColorMode === 'light' ? {'color':'#d13639','border-color':'#d13639'} : {'color':'#d13639','border-color':'#d13639'}}/>\r\n                                    </div>\r\n                                    <div className=\"flex align-items-center justify-content-center  m-2\">\r\n                                        <Button label=\"Guardar\"  icon=\"pi pi-check\" type=\"submit\" className=\"p-button-text\"  onClick={showDialog} style={{'background': '#13af4e','color':'#ffffff'}}/>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </Dialog>\r\n\r\n                    <Dialog visible={deleteRoleDialog} style={{ width: '450px' }} header=\"Confirm\" modal footer={deleteRoleDialogFooter} onHide={hideDeleteRoleDialog}>\r\n                        <div className=\"confirmation-content\">\r\n                            <i className=\"pi pi-exclamation-triangle p-mr-3\" style={{ fontSize: '2rem' }} />\r\n                            {role && <span>¿Estás segura de que quieres eliminar? <b>{role.rol}</b>?</span>}\r\n                        </div>\r\n                    </Dialog>\r\n    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import axios from 'axios';\r\n\r\n export const getUsers = () =>{\r\n     return axios.get('https://magic-tech-backend.herokuapp.com/api/getUsers');\r\n }\r\n\r\n export const getUserID =(id) =>{\r\n     return axios.get(`https://magic-tech-backend.herokuapp.com/api/getUserId/${id}`);\r\n }\r\n\r\n\r\n\r\n export const createUser=(data)=>{\r\n    return axios.post('https://magic-tech-backend.herokuapp.com/api/createUser', \r\n      {\r\n         id:        `${data.id}`,\r\n         nombre:    `${data.nombre}`,\r\n         apellido:  `${data.apellido}`,\r\n         email:     `${data.email}`,\r\n         password:  `${data.password}`,\r\n         estado:    `${data.estado}`,\r\n         rol:       `${data.rol}`      \r\n      }\r\n      )\r\n      .then(function (response) {\r\n        console.log(response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n }\r\n\r\nexport const updateUserID =(data,id) =>{\r\n    return axios.put(`https://magic-tech-backend.herokuapp.com/api/updateUser/${id}`, \r\n    {\r\n      nombre:    `${data.nombre}`,\r\n      apellido:  `${data.apellido}`,\r\n      email:     `${data.email}`,\r\n      password:  `${data.password}`,\r\n      estado:    `${data.estado}`,\r\n      rol:       `${data.rol}`      \r\n    }\r\n    )\r\n    .then(function (response) {\r\n      console.log(response);\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error);\r\n    });\r\n}\r\n\r\nexport const deleteUserID =(id) =>{\r\n    return axios.delete(`https://magic-tech-backend.herokuapp.com/api/deleteUserId/${id}`);\r\n}\r\n\r\nexport async function login(data){\r\n\r\n  return await axios.post('https://magic-tech-backend.herokuapp.com/api/login', \r\n  {\r\n     email:     `${data.email}`,\r\n     password:  `${data.password}`\r\n  }).then(function (response) {\r\n    console.log(response);\r\n  })\r\n  .catch(function (error) {\r\n    console.log(error);\r\n  });\r\n}\r\n\r\nexport const getUsersActivas = () =>{\r\n  return axios.get('https://magic-tech-backend.herokuapp.com/api/getUsersActivas');\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport classNames           from 'classnames';\r\nimport { DataTable }        from 'primereact/datatable';\r\nimport { Column }           from 'primereact/column';\r\nimport { Toast }            from 'primereact/toast';\r\nimport { Button }           from 'primereact/button';\r\nimport { Toolbar }          from 'primereact/toolbar';\r\nimport { Dialog }           from 'primereact/dialog';\r\nimport { InputText }        from 'primereact/inputtext';\r\nimport { Password }         from 'primereact/password';\r\nimport { ColumnGroup }      from 'primereact/columngroup';\r\nimport { Row }              from 'primereact/row';\r\nimport { Dropdown }         from 'primereact/dropdown';\r\nimport { useFormik }        from \"formik\";\r\n\r\n\r\nimport uniqid               from 'uniqid';\r\n\r\nimport { getUsers,getUserID,createUser,updateUserID,deleteUserID } from '../service/apiUser';\r\nimport { getRoles,getRolesActivas }         from '../service/apiRole';\r\n\r\nexport const User = (props) => {\r\n\r\n    let emptyUser = {\r\n        id:       null,\r\n        nombre:   '',\r\n        apellido: '',\r\n        email:    '',\r\n        password: '',\r\n        estado:   '',\r\n        rol:      ''\r\n    };\r\n\r\n    const estados = [\r\n        { name: \"Activo\"      },\r\n        { name: \"Desactivado\" }\r\n    ];\r\n    \r\n    const [roles,setRoles]                           = useState(null);\r\n    const [rol, setRol]                              = useState(null);\r\n    const [users, setUsers]                          = useState(null);\r\n    const [globalFilter, setGlobalFilter]            = useState('');\r\n    const [loading, setLoading]                      = useState(true);\r\n    const [userDialog, setUserDialog]                = useState(false);\r\n    const [deleteUserDialog, setDeleteUserDialog]    = useState(false);\r\n\r\n    const [user, setUser]                            = useState(emptyUser);\r\n    const [selectedUsers, setSelectedUsers]          = useState(null);\r\n    const [submitted, setSubmitted]                  = useState(false);\r\n    const toast                                      = useRef(null);\r\n    const dt                                         = useRef(null);\r\n    const [stateUser,setStateUser]                   = useState(false);\r\n    const [emailUpdate, setEmailUpdate]              = useState(\"\");\r\n  \r\n    const formik = useFormik({\r\n        initialValues: {\r\n            nombre:           \"\",\r\n            apellido:         \"\",\r\n            email:            \"\",\r\n            password:         \"\",\r\n            confirmPassword : \"\",\r\n            estado:           \"\",\r\n            rol:              \"\"\r\n        },\r\n        \r\n         validate: (data) => {\r\n            \r\n            let errors = {};\r\n            if(stateUser){\r\n                if (!data.nombre) {\r\n                    errors.nombre = \"Se requiere el nombre\";\r\n                } else if (data.nombre.length < 2) {\r\n                    errors.nombre = \"Como minimo 2 caracteres\";\r\n                } else if (data.nombre.length > 30) {\r\n                    errors.nombre = \"Como maximo 30 caracteres\";\r\n                } else if (!/^^[a-zA-Z\\s]+$/i.test(data.nombre)) {\r\n                    errors.nombre = \"No se permiten numero o caracteres especiales\";\r\n                }\r\n\r\n                if (!data.apellido) {\r\n                    errors.apellido = \"Se requiere el apellido\";\r\n                } else if (data.apellido.length < 2) {\r\n                    errors.apellido = \"Como minimo 2 caracteres\";\r\n                } else if (data.apellido.length > 30) {\r\n                    errors.apellido = \"Como maximo 30 caracteres\";\r\n                }else if (!/^^[a-zA-Z\\s]+$/i.test(data.apellido)) {\r\n                    errors.apellido = \"No se permiten numero o caracteres especiales\";\r\n                }\r\n\r\n                if (!data.email) {\r\n                    errors.email = \"Se requiere el correo electronico\";\r\n                } else if (data.email.length > 255) {\r\n                    errors.email = \"Como maximo 255 caracteres\";\r\n                } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(data.email)) {\r\n                    errors.email = 'Dirección de correo electrónico inválida. P.ej. ejemplo@email.com';\r\n                }else if(!esRepetido(data.email) && stateUser === false){\r\n                    errors.email = \"Ya existe el correo electronico\";\r\n                } else if(!esRepetidoUpdate(data.email,emailUpdate) && stateUser === true){\r\n                    errors.email = \"Ya existe el correo electronico\";  \r\n                }\r\n\r\n                if (!data.password) {\r\n                    errors.password = \"Se requiere la contraseña\";\r\n                } else if (data.password.length < 6) {\r\n                    errors.password = \"Como minimo 6 caracteres\";\r\n                } else if (data.password.length > 255) {\r\n                    errors.password = \"Como maximo 255 caracteres\";\r\n                }\r\n\r\n                if (!data.confirmPassword) {\r\n                    errors.confirmPassword = \"Se requiere la confirmacion de la contraseña\";\r\n                }else if (data.confirmPassword != data.password) {\r\n                    errors.confirmPassword = \"Las contraseñas deben coincidir\";\r\n                } \r\n\r\n                if (!data.rol) {\r\n                    errors.rol = \"Se requiere el rol\";\r\n                }\r\n\r\n                if (!data.estado) {\r\n                    errors.estado = \"Se requiere el estado\";\r\n                } else if (data.estado.length < 2) {\r\n                    errors.estado = \"Como minimo 2 caracteres\";\r\n                } else if (data.estado.length > 30) {\r\n                    errors.estado = \"Como maximo 30 caracteres\";\r\n                } else if (!/^^[a-zA-Z\\s]+$/i.test(data.estado)) {\r\n                    errors.estado = \"No se permiten numero o caracteres especiales\";\r\n                }\r\n            }else{\r\n                if (!data.nombre) {\r\n                    errors.nombre = \"Se requiere el nombre\";\r\n                } else if (data.nombre.length < 2) {\r\n                    errors.nombre = \"Como minimo 2 caracteres\";\r\n                } else if (data.nombre.length > 30) {\r\n                    errors.nombre = \"Como maximo 30 caracteres\";\r\n                } else if (!/^^[a-zA-Z\\s]+$/i.test(data.nombre)) {\r\n                    errors.nombre = \"No se permiten numero o caracteres especiales\";\r\n                }\r\n\r\n                if (!data.apellido) {\r\n                    errors.apellido = \"Se requiere el apellido\";\r\n                } else if (data.apellido.length < 2) {\r\n                    errors.apellido = \"Como minimo 2 caracteres\";\r\n                } else if (data.apellido.length > 30) {\r\n                    errors.apellido = \"Como maximo 30 caracteres\";\r\n                }else if (!/^^[a-zA-Z\\s]+$/i.test(data.apellido)) {\r\n                    errors.apellido = \"No se permiten numero o caracteres especiales\";\r\n                }\r\n\r\n                if (!data.email) {\r\n                    errors.email = \"Se requiere el correo electronico\";\r\n                } else if (data.email.length > 255) {\r\n                    errors.email = \"Como maximo 255 caracteres\";\r\n                } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(data.email)) {\r\n                    errors.email = 'Dirección de correo electrónico inválida. P.ej. ejemplo@email.com';\r\n                }else if(!esRepetido(data.email) && stateUser === false){\r\n                    errors.email = \"Ya existe el correo electronico\";\r\n                } else if(!esRepetidoUpdate(data.email,emailUpdate) && stateUser === true){\r\n                    errors.email = \"Ya existe el correo electronico\";  \r\n                }\r\n\r\n                if (!data.password) {\r\n                    errors.password = \"Se requiere la contraseña\";\r\n                } else if (data.password.length < 6) {\r\n                    errors.password = \"Como minimo 6 caracteres\";\r\n                } else if (data.password.length > 255) {\r\n                    errors.password = \"Como maximo 255 caracteres\";\r\n                }\r\n\r\n                if (!data.confirmPassword) {\r\n                    errors.confirmPassword = \"Se requiere la confirmacion de la contraseña\";\r\n                }else if (data.confirmPassword != data.password) {\r\n                    errors.confirmPassword = \"Las contraseñas deben coincidir\";\r\n                } \r\n\r\n                if (!data.rol) {\r\n                    errors.rol = \"Se requiere el rol\";\r\n                }\r\n            }\r\n            return errors;\r\n    \r\n        },\r\n        \r\n        onSubmit: (data ) => {\r\n\r\n        \r\n            if(submitted === true){\r\n                let _users = [...users];\r\n                let _user  = {...user };\r\n                _user['nombre']     = data.nombre;\r\n                _user['apellido']   = data.apellido;\r\n                _user['email']      = data.email;\r\n                _user['password']   = data.password;\r\n                _user['estado']     = data.estado;\r\n                _user['rol']        = data.rol;\r\n\r\n                if (_user.nombre.trim()) {\r\n                    if (user.id) {\r\n                        setUser({ ...user });\r\n                        const index = findIndexById(user.id);\r\n                        _users[index] = _user;\r\n                        \r\n                        updateUserID({nombre:`${_user.nombre}`,apellido:`${_user.apellido}`,email:`${_user.email}`,password:`${_user.password}`,estado:`${_user.estado}`,rol:`${_user.rol}`},user.id);\r\n                        toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Usuario Actualizado', life: 3000 });\r\n                    }\r\n                    else {\r\n\r\n                        _user.id = uniqid(\"user-\");\r\n                        _user.estado = \"Activo\"; \r\n                        _users.push(_user);\r\n                        \r\n                        createUser({id:`${_user.id}`,nombre:`${_user.nombre}`,apellido:`${_user.apellido}`,email:`${_user.email}`,password:`${_user.password}`,estado:`${_user.estado}`,rol:`${_user.rol}`});\r\n                        toast.current.show({ severity: 'success', summary: 'Successful', detail: 'usuario Creado', life: 3000 });\r\n                    }\r\n                }\r\n                setUsers(_users);\r\n                setUserDialog(false);\r\n                setUser(emptyUser);\r\n                formik.resetForm();\r\n        }\r\n            \r\n        },\r\n      });\r\n\r\n    const isFormFieldValid = (name) => !!(formik.touched[name] && formik.errors[name]);\r\n    const getFormErrorMessage = (name) => {\r\n        return isFormFieldValid(name) && <small className=\"ml-1 p-error\" style={{'color': '#ff0000'}}>{formik.errors[name]}</small>;\r\n    };\r\n\r\n    const esRepetido =(value)=>{\r\n        var _users = [...users];\r\n        let res = _users.find(i => (i.email).toLowerCase() === (value).toLowerCase() );\r\n         if(res === undefined){\r\n             return true;\r\n         }else{\r\n             return false;\r\n         }\r\n    }\r\n    const esRepetidoUpdate =(value,original)=>{\r\n        var _users = [...users];\r\n        let aux = _users.filter(i =>(i.email).toLowerCase() != (original).toLowerCase());\r\n        let res = aux.find(i => (i.email).toLowerCase() === (value).toLowerCase() );\r\n         if(res === undefined || res === original){\r\n             return true;\r\n         }else{\r\n             return false;\r\n         }\r\n    }\r\n\r\n\r\n    useEffect(()=>{\r\n        fetchRoles();\r\n    },[])\r\n\r\n    const fetchRoles = () =>{\r\n        getRolesActivas().then(json =>{\r\n            if(json.error){\r\n                console.log(\"Error\");\r\n            }else{\r\n                console.log(\"---------roles insertados-----------\");\r\n                setRoles(json.data);\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        fetchUsers();\r\n    },[])\r\n\r\n    const fetchUsers = () =>{\r\n        getUsers().then(json =>{\r\n            if(json.error){\r\n                console.log(\"Error\");\r\n            }else{\r\n                console.log(\"---------Users insertados-----------\");\r\n                setUsers(json.data);\r\n                setLoading(false);\r\n            }\r\n        })\r\n    }\r\n\r\n    const openNew = () => {\r\n        setUser(emptyUser);\r\n        formik.resetForm();\r\n        setSubmitted(false);\r\n        setStateUser(false); \r\n        setUserDialog(true);    \r\n    }\r\n\r\n    const hideDialog = () => {\r\n        setSubmitted(false);\r\n        setUserDialog(false);\r\n    }\r\n\r\n    const showDialog = () => {\r\n        setSubmitted(true);\r\n        formik.handleSubmit();\r\n    }\r\n\r\n    const hideDeleteUserDialog = () => {\r\n        setDeleteUserDialog(false);\r\n    }\r\n\r\n    const editUser = (user) => {\r\n        setUser({ ...user });\r\n        setSubmitted(true);\r\n        formik.resetForm();\r\n        formik.setValues(\r\n            {nombre:        `${user.nombre}`,\r\n            apellido:       `${user.apellido}`,\r\n            email:          `${user.email}`,\r\n            password:       `${user.password}`,\r\n            confirmPassword:`${user.password}`,\r\n            estado:         `${user.estado}`,\r\n            rol:            `${user.rol}`\r\n        });\r\n        setEmailUpdate(`${user.email}`);\r\n        setStateUser(true);\r\n        setUserDialog(true);\r\n    }\r\n\r\n    const confirmDeleteUser = (user) => {\r\n        setUser(user);\r\n        setDeleteUserDialog(true);\r\n    }\r\n\r\n    const deleteUser = () => {\r\n        let _users = [...users];\r\n        let _user  = {...user };\r\n\r\n        if (user.email.trim()) {\r\n            if (user.id) {\r\n                \r\n                const index = findIndexById(user.id);\r\n                _users[index] = _user;\r\n\r\n                updateUserID({nombre:`${_user.nombre}`,apellido:`${_user.apellido}`,email:`${_user.email}`,password:`${_user.password}`,estado:\"Desactivado\" ,rol:`${_user.rol}`},user.id);\r\n                _user['nombre']     = _user.nombre;\r\n                _user['apellido']   = _user.apellido;\r\n                _user['email']      = _user.email;\r\n                _user['password']   = _user.password;\r\n                _user['estado']     = \"Desactivado\";\r\n                _user['rol']        = _user.rol;\r\n                setUser({ ...user });\r\n                toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Usuario desactivado', life: 3000 });\r\n            }\r\n        }\r\n        setUsers(_users);\r\n        setUser(emptyUser);\r\n        setDeleteUserDialog(false);\r\n        \r\n    }\r\n\r\n    const findIndexById = (id) => {\r\n        let index = -1;\r\n        for (let i = 0; i < users.length; i++) {\r\n            if (users[i].id === id) {\r\n\r\n                index = i;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return index;\r\n    }\r\n\r\n  \r\n    const idBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">id</span>\r\n                {rowData.id}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const nombreBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Nombre</span>\r\n                {rowData.nombre}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const apellidoBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Apellido</span>\r\n                {rowData.apellido}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const emailBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Correo electronico</span>\r\n                {rowData.email}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const passwordBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Contrasena</span>\r\n                {rowData.password}\r\n                \r\n            </>\r\n        );\r\n    }\r\n\r\n    const estadoBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Estado</span>\r\n                {rowData.estado}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const rolBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Rol</span>\r\n                {rowData.rol}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const findRol = (rolFind) => {\r\n        \r\n        var _roles = [...roles]\r\n\r\n        let res = _roles.find(el => el.id === rolFind);\r\n        console.log(res[\"rol\"]);\r\n        return res;\r\n    }\r\n\r\n    const leftToolbarTemplate = () => {\r\n        return (\r\n            <React.Fragment>\r\n                <Button style={props.layoutColorMode === 'light' ? {'color':'#ffffff','background': '#13af4e'} : {'color':'#ffffff','background': '#13af4e'}} label=\"Nuevo\" icon=\"pi pi-plus\" className=\"p-button-success p-mr-2\" onClick={openNew}/>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    const actionBodyTemplate = (rowData) => {\r\n        return (\r\n            <div className=\"actions\">\r\n                <Button icon=\"pi pi-pencil\" style={{'background': '#13af4e'}} className=\"p-button-rounded p-button-success mr-2\"   onClick={() => editUser(rowData)} />\r\n                <Button icon=\"pi pi-trash\"  style={{'background': '#eee500'}} className=\"p-button-rounded p-button-warning\"        onClick={() => confirmDeleteUser(rowData)} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const deleteUserDialogFooter = (\r\n        <>\r\n            <Button label=\"No\" icon=\"pi pi-times\" style={{'background': '#d13639','color':'#ffffff'}} className=\"p-button-text\" onClick={hideDeleteUserDialog} />\r\n            <Button label=\"Si\" icon=\"pi pi-check\" style={props.layoutColorMode === 'light' ? {'color':'#13af4e','border-color':'#13af4e'} : {'color':'#13af4e','border-color':'#13af4e'}} className=\"p-button-text\" onClick={deleteUser} />\r\n        </>\r\n    );\r\n\r\n    const renderHeader = () => {\r\n        return (\r\n            <div className=\"flex flex-column md:flex-row md:justify-content-between md:align-items-center\">\r\n            <h5 className=\"m-0\">Gestion de usuarios</h5>\r\n            <span className=\"block mt-2 md:mt-0 p-input-icon-left\">\r\n                <i className=\"pi pi-search\" />\r\n                <InputText type=\"search\" onInput={(e) => setGlobalFilter(e.target.value)} placeholder=\"Buscar...\" />\r\n            </span>\r\n        </div>\r\n        )\r\n    }\r\n\r\n    const renderGroup = () => {\r\n        return (\r\n            <ColumnGroup>\r\n                <Row>\r\n                    <Column header={showHeader} colSpan={6}></Column>\r\n                </Row>\r\n                <Row>\r\n                    <Column header=\"ID\"                 field=\"id\"       sortable style={{ 'background-color': '#13af4e', width:'15%'}} />\r\n                    <Column header=\"NOMBRE\"             field=\"nombre\"   sortable style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                    <Column header=\"APELLIDO\"           field=\"apellido\" sortable style={{ 'background-color': '#13af4e', width:'20%'}} />\r\n                    <Column header=\"CORREO ELECTRONICO\" field=\"email\"    sortable style={{ 'background-color': '#13af4e', width:'60%'}}/>\r\n                    <Column header=\"ESTADO\"             field=\"estado\"   sortable style={{ 'background-color': '#13af4e', width:'10%'}}/>\r\n                    <Column header=\"Editar/Eliminar\"                              style={{ 'background-color': '#13af4e', width:'10%'}}/>\r\n                </Row>\r\n            </ColumnGroup>\r\n        )\r\n    }\r\n\r\n\r\n    const showHeader  = renderHeader();\r\n    const headerGroup = renderGroup();\r\n\r\n    const headerDialog =()=>{\r\n        return (stateUser?\"Actualizando usuario\":\"Añadir Usuario\")\r\n    }\r\n\r\n    return (\r\n        \r\n        <div className=\"p-grid crud-demo\">\r\n            <div className=\"p-col-12\">\r\n                <div className=\"card\">\r\n                    <Toast ref={toast} />\r\n                    <Toolbar className=\"p-mb-4\" left={leftToolbarTemplate}></Toolbar>\r\n\r\n                    <DataTable ref={dt} value={users} selection={selectedUsers}  onSelectionChange={(e) => setSelectedUsers(e.value)}\r\n                        dataKey=\"id\" rowHover paginator rows={10} rowsPerPageOptions={[5, 10, 25]} className=\"datatable-responsive p-datatable-sm p-datatable-gridlines p-datatable-striped\"\r\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\r\n                        currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} users\" resizableColumns columnResizeMode=\"fit\" showGridlines\r\n                        globalFilter={globalFilter} emptyMessage=\"No se encontro el rol\" loading={loading} headerColumnGroup={headerGroup}\r\n                        >\r\n                    \r\n                        <Column style={{width:'15%'}} field=\"id\"         header=\"ID\"                 sortable body={idBodyTemplate}></Column>\r\n                        <Column style={{width:'20%'}} field=\"nombre\"     header=\"APELLIDO\"           sortable body={nombreBodyTemplate}></Column>\r\n                        <Column style={{width:'20%'}} field=\"apellido\"   header=\"NOMBRE\"             sortable body={apellidoBodyTemplate}></Column>\r\n                        <Column style={{width:'60%'}} field=\"email\"      header=\"CORREO ELECTRONICO\" sortable body={emailBodyTemplate}></Column>\r\n                        <Column style={{width:'10%'}} field=\"estado\"     header=\"ESTADO\"             sortable body={estadoBodyTemplate}></Column>\r\n                        <Column style={{width:'10%'}} body={actionBodyTemplate}></Column>\r\n\r\n                    </DataTable>\r\n\r\n\r\n                    <Dialog visible={userDialog} style={{ width: '450px' }} header={headerDialog} modal className=\"p-fluid\" onHide={hideDialog}>\r\n                        <form onSubmit={formik.handleSubmit}>\r\n                            <div className=\"p-field mt-2\" >\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <i className=\"pi pi-user\"></i>\r\n                                        </span>\r\n                                        <InputText id=\"nombre\" name='nombre' placeholder=\"Nombre\" value={formik.values.nombre} onChange={formik.handleChange} autoFocus/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('nombre')}\r\n\r\n                            <div className=\"p-field mt-2\">\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <i className=\"pi pi-user\"></i>\r\n                                        </span>\r\n                                        <InputText id=\"apellido\" name='apellido' placeholder=\"Apellido\" value={formik.values.apellido} onChange={formik.handleChange}/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('apellido')}\r\n\r\n                            <div className=\"p-field mt-2\">\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <img   src={props.layoutColorMode === 'light' ? 'assets/layout/images/gmail.png' : 'assets/layout/images/gmail-dark.png'} style={{'height': '1.2em','width':'1.2em',}}/>  \r\n                                        </span>\r\n                                        <InputText id=\"email\" name='email' placeholder=\"Correo electronico\"  value={formik.values.email} onChange={formik.handleChange}/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('email')}\r\n\r\n                            <div className=\"p-field mt-2\">\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <img   src={props.layoutColorMode === 'light' ? 'assets/layout/images/password.png' : 'assets/layout/images/password-dark.png'} style={{'height': '1.2em','width':'1.2em',}}/>  \r\n                                        </span>\r\n                                        <Password id=\"password\" name='password' placeholder=\"Contraseña\"  value={formik.values.password} onChange={formik.handleChange} toggleMask  promptLabel=\"Por favor ingrese una contraseña\" weakLabel=\"Débil\" mediumLabel=\"Medio\" strongLabel=\"Fuerte\"/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('password')}\r\n\r\n                            <div className=\"p-field mt-2\">\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <img   src={props.layoutColorMode === 'light' ? 'assets/layout/images/password.png' : 'assets/layout/images/password-dark.png'} style={{'height': '1.2em','width':'1.2em',}}/>   \r\n                                        </span>\r\n                                        <Password id=\"rol\" name='confirmPassword' placeholder=\"Confirmar contraseña\"  value={formik.values.confirmPassword} onChange={formik.handleChange} toggleMask  promptLabel=\"Por favor ingrese una contraseña\" weakLabel=\"Débil\" mediumLabel=\"Medio\" strongLabel=\"Fuerte\"/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('confirmPassword')}\r\n\r\n                            {(stateUser)?\r\n                                <div className=\"form-group\">\r\n                                    <div className=\"p-field mt-2\">\r\n                                        <div className=\"p-inputgroup\">\r\n                                            <span className=\"p-inputgroup-addon\">\r\n                                                <img   src={props.layoutColorMode === 'light' ? 'assets/layout/images/estado.png' : 'assets/layout/images/estado-dark.png'} style={{'height': '1.2em','width':'1.2em',}}/>   \r\n                                            </span>\r\n                                            <Dropdown id=\"estado\" name=\"estado\" placeholder=\"Seleccione un estado\" value={formik.values.estado} onChange={formik.handleChange} options={estados} optionLabel=\"name\"  optionValue=\"name\"/> \r\n                                        </div>       \r\n                                    </div>\r\n                                    {getFormErrorMessage('estado')}\r\n                                </div>\r\n                            :\r\n                                null\r\n                            }\r\n\r\n                            <div className=\"p-field mt-2\">\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <img   src={props.layoutColorMode === 'light' ? 'assets/layout/images/rol.png' : 'assets/layout/images/rol-dark.png'} style={{'height': '1.2em','width':'1.2em',}}/>   \r\n                                        </span>\r\n                                        <Dropdown id=\"rol\" name=\"rol\" placeholder=\"Seleccione un rol\" value={formik.values.rol} onChange={formik.handleChange} options={roles} optionLabel=\"rol\"  optionValue=\"id\"/>   \r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('rol')}\r\n\r\n                            <div className='mt-2'>\r\n                                <div className=\"flex justify-content-center flex-wrap\">\r\n                                    <div className=\"flex align-items-center justify-content-center  m-2\">\r\n                                        <Button label=\"Cancelar\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDialog} style={props.layoutColorMode === 'light' ? {'color':'#d13639','border-color':'#d13639'} : {'color':'#d13639','border-color':'#d13639'}}/>\r\n                                    </div>\r\n                                    <div className=\"flex align-items-center justify-content-center  m-2\">\r\n                                        <Button label=\"Guardar\"  icon=\"pi pi-check\" type=\"submit\" className=\"p-button-text\" onClick={showDialog} style={{'background': '#13af4e','color':'#ffffff'}}/>  \r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </form>\r\n                    </Dialog>\r\n\r\n\r\n                    <Dialog className=\"mt-2\" visible={deleteUserDialog} style={{ width: '450px' }} header=\"Confirm\" modal footer={deleteUserDialogFooter} onHide={hideDeleteUserDialog}>\r\n                        <div className=\"confirmation-content\">\r\n                            <i className=\"pi pi-exclamation-triangle p-mr-3\" style={{ fontSize: '2rem' }} />\r\n                            {user && <span>¿Estás segura de que quieres eliminar? <b>{user.nombre}</b> <b>{user.apellido}</b>?</span>}\r\n                        </div>\r\n                    </Dialog>\r\n    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import axios from 'axios';\r\n\r\n export const getEmpresas = () =>{\r\n     return axios.get('https://magic-tech-backend.herokuapp.com/api/getEmpresas');\r\n }\r\n\r\n export const getEmpresaID =(id) =>{\r\n     return axios.get(`https://magic-tech-backend.herokuapp.com/api/getEmpresaId/${id}`);\r\n }\r\n\r\n\r\n\r\n export const createEmpresa=(data)=>{\r\n    return axios.post('https://magic-tech-backend.herokuapp.com/api/createEmpresa', \r\n      {\r\n         id:          `${data.id}`,\r\n         nombre:      `${data.nombre}`,\r\n         nombreCorto: `${data.nombreCorto}`,\r\n         nombreLargo: `${data.nombreLargo}`,\r\n         tipoSociedad:`${data.tipoSociedad}`,\r\n         direccion:   `${data.direccion}`,\r\n         email:       `${data.email}`,\r\n         password:    `${data.password}`,\r\n         informacion: `${data.informacion}`,\r\n         estado:      `${data.estado}`,\r\n         user:        `${data.user}`\r\n       \r\n      }\r\n      )\r\n      .then(function (response) {\r\n        console.log(response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n }\r\n\r\nexport const updateEmpresaID =(data,id) =>{\r\n    return axios.put(`https://magic-tech-backend.herokuapp.com/api/updateEmpresa/${id}`, \r\n    {\r\n      nombre:      `${data.nombre}`,\r\n      nombreCorto: `${data.nombreCorto}`,\r\n      nombreLargo: `${data.nombreLargo}`,\r\n      tipoSociedad:`${data.tipoSociedad}`,\r\n      direccion:   `${data.direccion}`,\r\n      email:       `${data.email}`,\r\n      password:    `${data.password}`,\r\n      informacion: `${data.informacion}`,\r\n      estado:      `${data.estado}`,\r\n      user:        `${data.user}`\r\n    }\r\n    )\r\n    .then(function (response) {\r\n      console.log(response);\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error);\r\n    });\r\n}\r\n\r\nexport const deleteEmpresaID =(id) =>{\r\n    return axios.delete(`https://magic-tech-backend.herokuapp.com/api/deleteEmpresaId/${id}`);\r\n}\r\n\r\nexport const getEmpresasActivas = () =>{\r\n  return axios.get('https://magic-tech-backend.herokuapp.com/api/getEmpresasActivas');\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport classNames           from 'classnames';\r\nimport { DataTable }        from 'primereact/datatable';\r\nimport { Column }           from 'primereact/column';\r\nimport { Toast }            from 'primereact/toast';\r\nimport { Button }           from 'primereact/button';\r\nimport { Toolbar }          from 'primereact/toolbar';\r\nimport { Dialog }           from 'primereact/dialog';\r\nimport { InputText }        from 'primereact/inputtext';\r\nimport { InputTextarea }    from 'primereact/inputtextarea';\r\nimport { Password }         from 'primereact/password';\r\nimport { ColumnGroup }      from 'primereact/columngroup';\r\nimport { Row }              from 'primereact/row';\r\nimport { Dropdown }         from 'primereact/dropdown';\r\nimport { useFormik }        from \"formik\";\r\n\r\nimport uniqid               from 'uniqid';\r\n\r\nimport { getUsers,getUserID,getUsersActivas }   from '../service/apiUser';\r\nimport { getEmpresas,createEmpresa,updateEmpresaID,deleteEmpresaID } from '../service/apiEmpresa';\r\n\r\nexport const Empresa = (props) => {\r\n\r\n    let emptyEmpresa = {\r\n        id:              null,\r\n        nombre:          '',\r\n        nombreCorto:     '',\r\n        nombreLargo:     '',\r\n        tipoSociedad:    '',\r\n        direccion:       '',\r\n        email:           '',\r\n        password:        '',\r\n        informacion:     '',\r\n        estado:          '',\r\n        user:            ''\r\n    };\r\n    \r\n    const Sociedades = [\r\n        {name: \"Sociedad de Responsabilidad Limitada\"       , tipo:\"S.R.L.\"},\r\n        {name: \"Sociedad Anónima\"                           , tipo:\"S.A.\"},\r\n        {name: \"Sociedad Colectiva\"                         , tipo:\"S.C.\"},\r\n        {name: \"Sociedad Anónima Mixta o de Economía Mixta\" , tipo:\"S.A.M.\"},\r\n        {name: \"Sociedad en Comandita Simple\"               , tipo:\"S.C.S.\"}\r\n    ];\r\n\r\n    const estados = [\r\n        { name: \"Activo\"      },\r\n        { name: \"Desactivado\" }\r\n    ];\r\n\r\n    const [users, setUsers]                             = useState(null);\r\n\r\n    const [empresas, setEmpresas]                       = useState(null);\r\n    const [empresaDialog, setEmpresaDialog]             = useState(false);\r\n    const [globalFilter, setGlobalFilter]               = useState('');\r\n    const [loading, setLoading]                         = useState(true);\r\n    const [deleteEmpresaDialog, setDeleteEmpresaDialog] = useState(false);\r\n\r\n    const [empresa, setEmpresa]                         = useState(emptyEmpresa);\r\n    const [selectedEmpresas, setSelectedEmpresas]       = useState(null);\r\n    const [submitted, setSubmitted]                     = useState(false);\r\n    const toast                                         = useRef(null);\r\n    const dt                                            = useRef(null);\r\n    const [stateEmpresa,setStateEmpresa]                = useState(false);\r\n    const [emailUpdate, setEmailUpdate]                 = useState(\"\");\r\n    const [empresaUpdate, setEmpresaUpdate]             = useState(\"\");\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            nombre:          '',\r\n            nombreCorto:     '',\r\n            nombreLargo:     '',\r\n            tipoSociedad:    '',\r\n            direccion:       '',\r\n            email:           '',\r\n            password:        '',\r\n            confirmPassword :'',\r\n            informacion:     '',\r\n            estado:          '',\r\n            user:            ''\r\n            \r\n        },\r\n         validate: (data) => {\r\n            let errors = {};\r\n            if(stateEmpresa){\r\n                if (!data.nombre) {\r\n                    errors.nombre = \"Se requiere el nombre\";\r\n                } else if (data.nombre.length < 2) {\r\n                    errors.nombre = \"Como minimo 2 caracteres\";\r\n                } else if (data.nombre.length > 30) {\r\n                    errors.nombre = \"Como maximo 30 caracteres\";\r\n                } else if (!/^^[a-zA-Z\\s]+$/i.test(data.nombre)) {\r\n                    errors.nombre = \"No se permiten numero o caracteres especiales\";\r\n                }else if(!esRepetidoEmpresa(data.nombre) && stateEmpresa === false){\r\n                    errors.nombre = \"Ya existe el nombre de la empresa\";\r\n                } else if(!esRepetidoUpdateEmpresa(data.nombre,empresaUpdate) && stateEmpresa === true){\r\n                    errors.nombre = \"Ya existe el nombre de la empresa\";  \r\n                }\r\n\r\n\r\n                if (!data.nombreCorto) {\r\n                    errors.nombreCorto = \"Se requiere el nombre corto\";\r\n                } else if (data.nombreCorto.length < 2) {\r\n                    errors.nombreCorto = \"Como minimo 2 caracteres\";\r\n                } else if (data.nombreCorto.length > 30) {\r\n                    errors.nombreCorto = \"Como maximo 30 caracteres\";\r\n                } else if (!/^^[a-zA-Z\\s]+$/i.test(data.nombreCorto)) {\r\n                    errors.nombreCorto = \"No se permiten numero o caracteres especiales\";\r\n                }\r\n\r\n                if (!data.nombreLargo) {\r\n                    errors.nombreLargo = \"Se requiere el nombre largo\";\r\n                } else if (data.nombreLargo.length < 2) {\r\n                    errors.nombreLargo = \"Como minimo 2 caracteres\";\r\n                } else if (data.nombreLargo.length > 50) {\r\n                    errors.nombreLargo = \"Como maximo 50 caracteres\";\r\n                } else if (!/^^[a-zA-Z\\s]+$/i.test(data.nombreLargo)) {\r\n                    errors.nombreLargo = \"No se permiten numero o caracteres especiales\";\r\n                }\r\n\r\n                if (!data.tipoSociedad) {\r\n                    errors.tipoSociedad = \"Se requiere el tipo de sociedad\";\r\n                } else if (data.tipoSociedad.length < 2) {\r\n                    errors.tipoSociedad = \"Como minimo 2 caracteres\";\r\n                } else if (data.tipoSociedad.length > 30) {\r\n                    errors.tipoSociedad = \"Como maximo 30 caracteres\";\r\n                } else if (!/^^[a-zA-Z.\\s]+$/i.test(data.tipoSociedad)) {\r\n                    errors.tipoSociedad = \"No se permiten numero o caracteres especiales\";\r\n                }\r\n\r\n                if (!data.direccion) {\r\n                    errors.direccion = \"Se requiere la direccion\";\r\n                } else if (data.direccion.length < 2) {\r\n                    errors.direccion = \"Como minimo 2 caracteres\";\r\n                } else if (data.direccion.length > 50) {\r\n                    errors.direccion = \"Como maximo 50 caracteres\";\r\n                }else if (!/^^[a-zA-Z0-9.\\s]+$/i.test(data.direccion)) {\r\n                    errors.direccion = \"No se permiten numero o caracteres especiales\";\r\n                }\r\n\r\n                if (!data.email) {\r\n                    errors.email = \"Se requiere el correo electronico\";\r\n                } else if (data.email.length > 255) {\r\n                    errors.email = \"Como maximo 255 caracteres\";\r\n                } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(data.email)) {\r\n                    errors.email = 'Dirección de correo electrónico inválida. P.ej. ejemplo@email.com';\r\n                }else if(!esRepetido(data.email) && stateEmpresa === false){\r\n                    errors.email = \"Ya existe el correo electronico\";\r\n                } else if(!esRepetidoUpdate(data.email,emailUpdate) && stateEmpresa === true){\r\n                    errors.email = \"Ya existe el correo electronico\";  \r\n                }\r\n\r\n                if (!data.password) {\r\n                    errors.password = \"Se requiere la contraseña\";\r\n                } else if (data.password.length < 6) {\r\n                    errors.password = \"Como minimo 6 caracteres\";\r\n                } else if (data.password.length > 255) {\r\n                    errors.password = \"Como maximo 255 caracteres\";\r\n                }\r\n\r\n                if (!data.confirmPassword) {\r\n                    errors.confirmPassword = \"Se requiere la confirmacion de la contraseña\";\r\n                }else if (data.confirmPassword != data.password) {\r\n                    errors.confirmPassword = \"Las contraseñas deben coincidir\";\r\n                } \r\n\r\n                if (!data.informacion) {\r\n                    errors.informacion = \"Se requiere la informacion de la empresa\";\r\n                } else if (data.informacion.length < 2) {\r\n                    errors.informacion = \"Como minimo 2 caracteres\";\r\n                } else if (data.informacion.length > 255) {\r\n                    errors.informacion = \"Como maximo 255 caracteres\";\r\n                } else if (!/^^[a-zA-Z0-9.\\s]+$/i.test(data.informacion)) {\r\n                    errors.informacion = \"No se permiten numero o caracteres especiales\";\r\n                }\r\n\r\n                if (!data.user) {\r\n                    errors.user = \"Se requiere el usuario\";\r\n                } else if (data.user.length < 2) {\r\n                    errors.user = \"Como minimo 2 caracteres\";\r\n                } else if (data.user.length > 30) {\r\n                    errors.user = \"Como maximo 30 caracteres\";\r\n                }else if (!/^^[a-zA-Z0-9\\s-]+$/i.test(data.user)) {\r\n                    errors.user = \"No se permiten numero o caracteres especiales\";\r\n                }\r\n\r\n                if (!data.estado) {\r\n                    errors.estado = \"Se requiere el estado\";\r\n                } else if (data.estado.length < 2) {\r\n                    errors.estado = \"Como minimo 2 caracteres\";\r\n                } else if (data.estado.length > 30) {\r\n                    errors.estado = \"Como maximo 30 caracteres\";\r\n                } else if (!/^^[a-zA-Z\\s]+$/i.test(data.estado)) {\r\n                    errors.estado = \"No se permiten numero o caracteres especiales\";\r\n                }\r\n\r\n            }else{\r\n                if (!data.nombre) {\r\n                    errors.nombre = \"Se requiere el nombre\";\r\n                } else if (data.nombre.length < 2) {\r\n                    errors.nombre = \"Como minimo 2 caracteres\";\r\n                } else if (data.nombre.length > 30) {\r\n                    errors.nombre = \"Como maximo 30 caracteres\";\r\n                } else if (!/^^[a-zA-Z\\s]+$/i.test(data.nombre)) {\r\n                    errors.nombre = \"No se permiten numero o caracteres especiales\";\r\n                }else if(!esRepetidoEmpresa(data.nombre) && stateEmpresa === false){\r\n                    errors.nombre = \"Ya existe el nombre de la empresa\";\r\n                } else if(!esRepetidoUpdateEmpresa(data.nombre,empresaUpdate) && stateEmpresa === true){\r\n                    errors.nombre = \"Ya existe el nombre de la empresa\";  \r\n                }\r\n\r\n\r\n                if (!data.nombreCorto) {\r\n                    errors.nombreCorto = \"Se requiere el nombre corto\";\r\n                } else if (data.nombreCorto.length < 2) {\r\n                    errors.nombreCorto = \"Como minimo 2 caracteres\";\r\n                } else if (data.nombreCorto.length > 30) {\r\n                    errors.nombreCorto = \"Como maximo 30 caracteres\";\r\n                } else if (!/^^[a-zA-Z\\s]+$/i.test(data.nombreCorto)) {\r\n                    errors.nombreCorto = \"No se permiten numero o caracteres especiales\";\r\n                }\r\n\r\n                if (!data.nombreLargo) {\r\n                    errors.nombreLargo = \"Se requiere el nombre largo\";\r\n                } else if (data.nombreLargo.length < 2) {\r\n                    errors.nombreLargo = \"Como minimo 2 caracteres\";\r\n                } else if (data.nombreLargo.length > 50) {\r\n                    errors.nombreLargo = \"Como maximo 50 caracteres\";\r\n                } else if (!/^^[a-zA-Z\\s]+$/i.test(data.nombreLargo)) {\r\n                    errors.nombreLargo = \"No se permiten numero o caracteres especiales\";\r\n                }\r\n\r\n                if (!data.tipoSociedad) {\r\n                    errors.tipoSociedad = \"Se requiere el tipo de sociedad\";\r\n                } else if (data.tipoSociedad.length < 2) {\r\n                    errors.tipoSociedad = \"Como minimo 2 caracteres\";\r\n                } else if (data.tipoSociedad.length > 30) {\r\n                    errors.tipoSociedad = \"Como maximo 30 caracteres\";\r\n                } else if (!/^^[a-zA-Z.\\s]+$/i.test(data.tipoSociedad)) {\r\n                    errors.tipoSociedad = \"No se permiten numero o caracteres especiales\";\r\n                }\r\n\r\n                if (!data.direccion) {\r\n                    errors.direccion = \"Se requiere la direccion\";\r\n                } else if (data.direccion.length < 2) {\r\n                    errors.direccion = \"Como minimo 2 caracteres\";\r\n                } else if (data.direccion.length > 50) {\r\n                    errors.direccion = \"Como maximo 50 caracteres\";\r\n                }else if (!/^^[a-zA-Z0-9.\\s]+$/i.test(data.direccion)) {\r\n                    errors.direccion = \"No se permiten numero o caracteres especiales\";\r\n                }\r\n\r\n                if (!data.email) {\r\n                    errors.email = \"Se requiere el correo electronico\";\r\n                } else if (data.email.length > 255) {\r\n                    errors.email = \"Como maximo 255 caracteres\";\r\n                } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(data.email)) {\r\n                    errors.email = 'Dirección de correo electrónico inválida. P.ej. ejemplo@email.com';\r\n                }else if(!esRepetido(data.email) && stateEmpresa === false){\r\n                    errors.email = \"Ya existe el correo electronico\";\r\n                } else if(!esRepetidoUpdate(data.email,emailUpdate) && stateEmpresa === true){\r\n                    errors.email = \"Ya existe el correo electronico\";  \r\n                }\r\n\r\n                if (!data.password) {\r\n                    errors.password = \"Se requiere la contraseña\";\r\n                } else if (data.password.length < 6) {\r\n                    errors.password = \"Como minimo 6 caracteres\";\r\n                } else if (data.password.length > 255) {\r\n                    errors.password = \"Como maximo 255 caracteres\";\r\n                }\r\n\r\n                if (!data.confirmPassword) {\r\n                    errors.confirmPassword = \"Se requiere la confirmacion de la contraseña\";\r\n                }else if (data.confirmPassword != data.password) {\r\n                    errors.confirmPassword = \"Las contraseñas deben coincidir\";\r\n                } \r\n\r\n                if (!data.informacion) {\r\n                    errors.informacion = \"Se requiere la informacion de la empresa\";\r\n                } else if (data.informacion.length < 2) {\r\n                    errors.informacion = \"Como minimo 2 caracteres\";\r\n                } else if (data.informacion.length > 255) {\r\n                    errors.informacion = \"Como maximo 255 caracteres\";\r\n                } else if (!/^^[a-zA-Z0-9.\\s]+$/i.test(data.informacion)) {\r\n                    errors.informacion = \"No se permiten numero o caracteres especiales\";\r\n                }\r\n\r\n                if (!data.user) {\r\n                    errors.user = \"Se requiere el usuario\";\r\n                } else if (data.user.length < 2) {\r\n                    errors.user = \"Como minimo 2 caracteres\";\r\n                } else if (data.user.length > 30) {\r\n                    errors.user = \"Como maximo 30 caracteres\";\r\n                }else if (!/^^[a-zA-Z0-9\\s-]+$/i.test(data.user)) {\r\n                    errors.user = \"No se permiten numero o caracteres especiales\";\r\n                } \r\n            }\r\n\r\n\r\n            return errors;\r\n        },\r\n\r\n        onSubmit: (data) => {\r\n            if(submitted === true){\r\n                let _empresas = [...empresas];\r\n                let _empresa  = {...empresa };\r\n                _empresa['nombre']            = data.nombre;\r\n                _empresa['nombreCorto']       = data.nombreCorto;\r\n                _empresa['nombreLargo']       = data.nombreLargo;\r\n                _empresa['tipoSociedad']      = data.tipoSociedad;\r\n                _empresa['direccion']         = data.direccion;\r\n                _empresa['email']             = data.email;\r\n                _empresa['password']          = data.password;\r\n                _empresa['confirmPassword']   = data.confirmPassword;\r\n                _empresa['informacion']       = data.informacion;\r\n                _empresa['estado']            = data.estado;\r\n                _empresa['user']              = data.user;\r\n\r\n\r\n                if (_empresa.nombre.trim()) {\r\n                    if (empresa.id) {\r\n\r\n                        setEmpresa({ ...empresa });\r\n                        console.log(empresa);\r\n                        const index = findIndexById(empresa.id);\r\n                        _empresas[index] = _empresa;\r\n                        updateEmpresaID({nombre:`${_empresa.nombre}`,nombreCorto:`${_empresa.nombreCorto}`,nombreLargo:`${_empresa.nombreLargo}`,tipoSociedad:`${_empresa.tipoSociedad}`,direccion:`${_empresa.direccion}`,email:`${_empresa.email}`,password:`${_empresa.password}`,informacion:`${_empresa.informacion}`,estado:`${_empresa.estado}`,user:`${_empresa.user}`},empresa.id);\r\n                        toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Empresa Actualizado', life: 3000 });\r\n                    }\r\n                    else {\r\n\r\n                        _empresa.id     = uniqid(\"empresa-\");\r\n                        _empresa.estado = \"Activo\"; \r\n                        _empresas.push(_empresa);\r\n                        createEmpresa({id:`${_empresa.id}`,nombre:`${_empresa.nombre}`,nombreCorto:`${_empresa.nombreCorto}`,nombreLargo:`${_empresa.nombreLargo}`,tipoSociedad:`${_empresa.tipoSociedad}`,direccion:`${_empresa.direccion}`,email:`${_empresa.email}`,password:`${_empresa.password}`,informacion:`${_empresa.informacion}`,estado:`${_empresa.estado}`,user:`${_empresa.user}`});\r\n                        toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Empresa Creado', life: 3000 });\r\n                    }\r\n                }\r\n                setEmpresas(_empresas);\r\n                setEmpresaDialog(false);\r\n                setEmpresa(emptyEmpresa);\r\n                formik.resetForm();\r\n        }\r\n            \r\n        },\r\n      });\r\n\r\n    const isFormFieldValid = (name) => !!(formik.touched[name] && formik.errors[name]);\r\n    const getFormErrorMessage = (name) => {\r\n        return isFormFieldValid(name) && <small className=\"ml-1 p-error\" style={{'color': '#ff0000'}}>{formik.errors[name]}</small>;\r\n    };\r\n\r\n    const esRepetido =(value)=>{\r\n        var _empresas = [...empresas];\r\n        let res = _empresas.find(i => (i.email).toLowerCase() === (value).toLowerCase() );\r\n         if(res === undefined){\r\n             return true;\r\n         }else{\r\n             return false;\r\n         }\r\n    }\r\n    const esRepetidoUpdate =(value,original)=>{\r\n        var _empresas = [...empresas];\r\n        let aux = _empresas.filter(i =>(i.email).toLowerCase() != (original).toLowerCase())\r\n        let res = aux.find(i => (i.email).toLowerCase() === (value).toLowerCase() );\r\n         if(res === undefined || res === original){\r\n             return true;\r\n         }else{\r\n             return false;\r\n         }\r\n    }\r\n\r\n    const esRepetidoEmpresa =(value)=>{\r\n        var _empresas = [...empresas];\r\n        let res = _empresas.find(i => (i.nombre).toLowerCase().trim() === (value).toLowerCase().trim() );\r\n         if(res === undefined){\r\n             return true;\r\n         }else{\r\n             return false;\r\n         }\r\n    }\r\n    const esRepetidoUpdateEmpresa =(value,original)=>{\r\n        var _empresas = [...empresas];\r\n        let aux = _empresas.filter(i =>(i.nombre).toLowerCase().trim() != (original).toLowerCase().trim())\r\n        let res = aux.find(i => (i.nombre).toLowerCase().trim() === (value).toLowerCase().trim() );\r\n         if(res === undefined || res === original){\r\n             return true;\r\n         }else{\r\n             return false;\r\n         }\r\n    }\r\n\r\n\r\n    useEffect(()=>{\r\n        fetchUsers();\r\n    },[])\r\n\r\n    const fetchUsers = () =>{\r\n        getUsersActivas().then(json =>{\r\n            if(json.error){\r\n                console.log(\"Error\");\r\n            }else{\r\n                console.log(\"---------Usuarios insertados-----------\");\r\n                setUsers(json.data);\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        fetchEmpresas();\r\n    },[])\r\n\r\n    const fetchEmpresas = () =>{\r\n        getEmpresas().then(json =>{\r\n            if(json.error){\r\n                console.log(\"Error\");\r\n            }else{\r\n                console.log(\"---------Empresas insertados-----------\");\r\n                setEmpresas(json.data);\r\n                setLoading(false);\r\n            }\r\n        })\r\n    }\r\n\r\n    const openNew = () => {\r\n        setEmpresa(emptyEmpresa);\r\n        formik.resetForm();\r\n        setSubmitted(false);\r\n        setStateEmpresa(false); \r\n        setEmpresaDialog(true);    \r\n    }\r\n\r\n    const hideDialog = () => {\r\n        setSubmitted(false);\r\n        setEmpresaDialog(false);\r\n    }\r\n\r\n    const showDialog = () => {\r\n        setSubmitted(true);\r\n        formik.handleSubmit();\r\n    }\r\n\r\n    const hideDeleteEmpresaDialog = () => {\r\n        setDeleteEmpresaDialog(false);\r\n    }\r\n\r\n    const editEmpresa = (empresa) => {\r\n        setEmpresa({ ...empresa });\r\n        setSubmitted(true);\r\n        formik.resetForm();\r\n        formik.setValues(\r\n        {\r\n            nombre:         `${empresa.nombre}`,\r\n            nombreCorto:    `${empresa.nombreCorto}`,\r\n            nombreLargo:    `${empresa.nombreLargo}`,\r\n            tipoSociedad:   `${empresa.tipoSociedad}`,\r\n            direccion:      `${empresa.direccion}`,\r\n            email:          `${empresa.email}`,\r\n            password:       `${empresa.password}`,\r\n            confirmPassword:`${empresa.password}`,\r\n            informacion:    `${empresa.informacion}`,\r\n            estado:         `${empresa.estado}`,\r\n            user:           `${empresa.user}`\r\n        });\r\n\r\n        setEmailUpdate(`${empresa.email}`);\r\n        setEmpresaUpdate(`${empresa.nombre}`);\r\n        setStateEmpresa(true);\r\n        setEmpresaDialog(true);\r\n    }\r\n\r\n    const confirmDeleteEmpresa = (empresa) => {\r\n        setEmpresa(empresa);\r\n        setDeleteEmpresaDialog(true);\r\n    }\r\n\r\n    const deleteEmpresa = () => {\r\n        let _empresas = [...empresas];\r\n        let _empresa  = {...empresa };\r\n\r\n        if (empresa.email.trim()) {\r\n            if (empresa.id) {\r\n                \r\n                const index = findIndexById(empresa.id);\r\n                _empresas[index] = _empresa;\r\n\r\n                updateEmpresaID({nombre:`${_empresa.nombre}`,nombreCorto:`${_empresa.nombreCorto}`,nombreLargo:`${_empresa.nombreLargo}`,tipoSociedad:`${_empresa.tipoSociedad}`,direccion:`${_empresa.direccion}`,email:`${_empresa.email}`,password:`${_empresa.password}`,informacion:`${_empresa.informacion}`,estado:\"Desactivado\",user:`${_empresa.user}`},empresa.id);\r\n                _empresa['nombre']            = _empresa.nombre;\r\n                _empresa['nombreCorto']       = _empresa.nombreCorto;\r\n                _empresa['nombreLargo']       = _empresa.nombreLargo;\r\n                _empresa['tipoSociedad']      = _empresa.tipoSociedad;\r\n                _empresa['direccion']         = _empresa.direccion;\r\n                _empresa['email']             = _empresa.email;\r\n                _empresa['password']          = _empresa.password;\r\n                _empresa['confirmPassword']   = _empresa.confirmPassword;\r\n                _empresa['informacion']       = _empresa.informacion;\r\n                _empresa['estado']            = \"Desactivado\";\r\n                _empresa['user']              = _empresa.user;\r\n                setEmpresa({ ...empresa });\r\n                toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Empresa Desactivada', life: 3000 });\r\n            }\r\n        }\r\n        setEmpresas(_empresas);\r\n        setEmpresa(emptyEmpresa);\r\n        setDeleteEmpresaDialog(false);\r\n    }\r\n\r\n    const findIndexById = (id) => {\r\n        let index = -1;\r\n        for (let i = 0; i < empresas.length; i++) {\r\n            if (empresas[i].id === id) {\r\n\r\n                index = i;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return index;\r\n    }\r\n\r\n    const idBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">id</span>\r\n                {rowData.id}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const nombreBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Nombre</span>\r\n                {rowData.nombre}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const nombreCortoBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Nombre Corto</span>\r\n                {rowData.nombreCorto}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const nombreLargoBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Nombre Largo</span>\r\n                {rowData.nombreLargo}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const tipoSociedadBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Tipo Sociedad</span>\r\n                {rowData.tipoSociedad}\r\n                \r\n            </>\r\n        );\r\n    }\r\n\r\n    \r\n\r\n\r\n    const direccionBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Direccion</span>\r\n                {rowData.direccion}\r\n               \r\n\r\n            </>\r\n        );\r\n    }\r\n\r\n    const emailBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Correo electronico</span>\r\n                {rowData.email}\r\n               \r\n\r\n            </>\r\n        );\r\n    }\r\n\r\n    const passwordBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">contraseña</span>\r\n                {rowData.password}\r\n               \r\n\r\n            </>\r\n        );\r\n    }\r\n\r\n    const informacionBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Informacion</span>\r\n                {rowData.informacion}\r\n               \r\n\r\n            </>\r\n        );\r\n    }\r\n\r\n    const estadoBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Estado</span>\r\n                {rowData.estado}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const userBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Usuario</span>\r\n                {rowData.user}\r\n               \r\n\r\n            </>\r\n        );\r\n    }\r\n\r\n\r\n    const leftToolbarTemplate = () => {\r\n        return (\r\n            <React.Fragment>\r\n                <Button style={props.layoutColorMode === 'light' ? {'color':'#ffffff','background': '#13af4e'} : {'color':'#ffffff','background': '#13af4e'}} label=\"Nuevo\" icon=\"pi pi-plus\" className=\"p-button-success p-mr-2\" onClick={openNew} />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    const actionBodyTemplate = (rowData) => {\r\n        return (\r\n            <div className=\"actions\">\r\n                <Button icon=\"pi pi-pencil\" style={{'background': '#13af4e'}} className=\"p-button-rounded p-button-success mr-2\"   onClick={() => editEmpresa(rowData)} />\r\n                <Button icon=\"pi pi-trash\"  style={{'background': '#eee500'}} className=\"p-button-rounded p-button-warning\"        onClick={() => confirmDeleteEmpresa(rowData)} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const deleteEmpresaDialogFooter = (\r\n        <>\r\n            <Button label=\"No\" icon=\"pi pi-times\" style={{'background': '#d13639','color':'#ffffff'}} className=\"p-button-text\" onClick={hideDeleteEmpresaDialog} />\r\n            <Button label=\"Si\" icon=\"pi pi-check\" style={props.layoutColorMode === 'light' ? {'color':'#13af4e','border-color':'#13af4e'} : {'color':'#13af4e','border-color':'#13af4e'}} className=\"p-button-text\" onClick={deleteEmpresa} />\r\n        </>\r\n    );\r\n\r\n\r\n    const renderHeader = () => {\r\n        return (\r\n            <div className=\"flex flex-column md:flex-row md:justify-content-between md:align-items-center\">\r\n            <h5 className=\"m-0\">Gestion de empresas</h5>\r\n            <span className=\"block mt-2 md:mt-0 p-input-icon-left\">\r\n                <i className=\"pi pi-search\" />\r\n                <InputText type=\"search\" onInput={(e) => setGlobalFilter(e.target.value)} placeholder=\"Buscar...\" />\r\n            </span>\r\n        </div>\r\n        )\r\n    }\r\n\r\n    const renderGroup = () => {\r\n        return (\r\n            <ColumnGroup>\r\n                <Row>\r\n                    <Column header={showHeader} colSpan={7}></Column>\r\n                </Row>\r\n                <Row>\r\n                    <Column header=\"ID\"                 field=\"id\"           sortable  style={{ 'background-color': '#13af4e', width:'20%'}} />\r\n                    <Column header=\"NOMBRE\"             field=\"nombre\"       sortable  style={{ 'background-color': '#13af4e', width:'20%'}} />\r\n                    <Column header=\"SOCIEDAD\"           field=\"tipoSociedad\" sortable  style={{ 'background-color': '#13af4e', width:'20%'}} />\r\n                    <Column header=\"DIRECCION\"          field=\"direccion\"    sortable  style={{ 'background-color': '#13af4e', width:'20%'}} />\r\n                    <Column header=\"CORREO ELECTRONICO\" field=\"email\"        sortable  style={{ 'background-color': '#13af4e', width:'25%'}} />\r\n                    <Column header=\"ESTADO\"             field=\"estado\"       sortable  style={{ 'background-color': '#13af4e', width:'20%'}} />\r\n                    <Column header=\"Editar/Eliminar\"                         style={{ 'background-color': '#13af4e', width:'20%'}} />\r\n                </Row>\r\n            </ColumnGroup>\r\n        )\r\n    }\r\n\r\n\r\n    const showHeader  = renderHeader();\r\n    const headerGroup = renderGroup();\r\n\r\n\r\n    const headerDialog =()=>{\r\n        return (stateEmpresa)?\"Actualizando Empresa\":\"Añadir Empresa\"\r\n    }\r\n\r\n    return (\r\n        <div className=\"p-grid crud-demo\">\r\n            <div className=\"p-col-12\">\r\n                <div className=\"card\">\r\n                \r\n                    <Toast ref={toast} />\r\n                    <Toolbar className=\"\" left={leftToolbarTemplate}></Toolbar>\r\n\r\n                    <DataTable ref={dt} value={empresas} selection={selectedEmpresas}  onSelectionChange={(e) => setSelectedEmpresas(e.value)}\r\n                        dataKey=\"id\" rowHover paginator rows={10} rowsPerPageOptions={[5, 10, 25]} className=\"datatable-responsive p-datatable-sm p-datatable-gridlines p-datatable-striped\"\r\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\r\n                        currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} users\" resizableColumns columnResizeMode=\"fit\" showGridlines\r\n                        globalFilter={globalFilter} emptyMessage=\"No se encontro el rol\" loading={loading} headerColumnGroup={headerGroup}\r\n                        >\r\n                    \r\n                        <Column style={{width:'20%'}} field=\"id\"              header=\"ID\"                 sortable body={idBodyTemplate}            ></Column>\r\n                        <Column style={{width:'20%'}} field=\"nombre\"          header=\"NOMBRE\"             sortable body={nombreBodyTemplate}        ></Column>\r\n                        <Column style={{width:'20%'}} field=\"tipoSociedad\"    header=\"SOCIEDAD\"           sortable body={tipoSociedadBodyTemplate}  ></Column>\r\n                        <Column style={{width:'20%'}} field=\"direccion\"       header=\"DIRECCION\"          sortable body={direccionBodyTemplate}     ></Column>\r\n                        <Column style={{width:'25%'}} field=\"email\"           header=\"CORREO ELECTRONICO\" sortable body={emailBodyTemplate}         ></Column>\r\n                        <Column style={{width:'20%'}} field=\"estado\"          header=\"ESTADO\"             sortable body={estadoBodyTemplate}          ></Column>\r\n\r\n                        <Column style={{width:'20%'}} body={actionBodyTemplate}></Column>\r\n\r\n                    </DataTable>\r\n\r\n\r\n                    <Dialog visible={empresaDialog} style={{ width: '450px' }} header={headerDialog} modal className=\"p-fluid\" onHide={hideDialog}>\r\n                        <form onSubmit={formik.handleSubmit}>\r\n                            <div className=\"p-field mt-2\" >\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <i className=\"pi pi-user\"></i>\r\n                                        </span>\r\n                                        <InputText id=\"nombre\" name='nombre' placeholder=\"Nombre\" value={formik.values.nombre} onChange={formik.handleChange} autoFocus/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('nombre')}\r\n\r\n                            <div className=\"p-field mt-2\" >\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <i className=\"pi pi-user\"></i>\r\n                                        </span>\r\n                                        <InputText id=\"nombreCorto\" name='nombreCorto' placeholder=\"Nombre Corto\" value={formik.values.nombreCorto} onChange={formik.handleChange}/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('nombreCorto')}\r\n\r\n                            <div className=\"p-field mt-2\" >\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <i className=\"pi pi-user\"></i>\r\n                                        </span>\r\n                                        <InputText id=\"nombreLargo\" name='nombreLargo' placeholder=\"Nombre Largo\" value={formik.values.nombreLargo} onChange={formik.handleChange}/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('nombreLargo')}\r\n\r\n                            <div className=\"p-field mt-2\" >\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <i className=\"pi pi-briefcase\"></i>\r\n                                        </span>\r\n                                        <Dropdown id=\"tipoSociedad\" name=\"tipoSociedad\" placeholder=\"Seleccione el tipo de sociedad\" value={formik.values.tipoSociedad} onChange={formik.handleChange} options={Sociedades} optionLabel=\"tipo\"  optionValue=\"tipo\"/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('tipoSociedad')}\r\n\r\n                            <div className=\"p-field mt-2\" >\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <i className=\"pi pi-map-marker\"></i>\r\n                                        </span>\r\n                                        <InputText id=\"direccion\" name='direccion' placeholder=\"Direccion\" value={formik.values.direccion} onChange={formik.handleChange}/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('direccion')}\r\n\r\n\r\n                            <div className=\"p-field mt-2\">\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <img   src={props.layoutColorMode === 'light' ? 'assets/layout/images/gmail.png' : 'assets/layout/images/gmail-dark.png'} style={{'height': '1.2em','width':'1.2em',}}/>  \r\n                                        </span>\r\n                                        <InputText id=\"email\" name='email' placeholder=\"Correo electronico\"  value={formik.values.email} onChange={formik.handleChange}/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('email')}\r\n\r\n                            <div className=\"p-field mt-2\">\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <img   src={props.layoutColorMode === 'light' ? 'assets/layout/images/password.png' : 'assets/layout/images/password-dark.png'} style={{'height': '1.2em','width':'1.2em',}}/>  \r\n                                        </span>\r\n                                        <Password id=\"password\" name='password' placeholder=\"Contraseña\"  value={formik.values.password} onChange={formik.handleChange} toggleMask  promptLabel=\"Por favor ingrese una contraseña\" weakLabel=\"Débil\" mediumLabel=\"Medio\" strongLabel=\"Fuerte\"/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('password')}\r\n\r\n                            <div className=\"p-field mt-2\">\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <img   src={props.layoutColorMode === 'light' ? 'assets/layout/images/password.png' : 'assets/layout/images/password-dark.png'} style={{'height': '1.2em','width':'1.2em',}}/>   \r\n                                        </span>\r\n                                        <Password id=\"confirmPassword\" name='confirmPassword' placeholder=\"Confirmar contraseña\"  value={formik.values.confirmPassword} onChange={formik.handleChange} toggleMask  promptLabel=\"Por favor ingrese una contraseña\" weakLabel=\"Débil\" mediumLabel=\"Medio\" strongLabel=\"Fuerte\"/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('confirmPassword')}\r\n\r\n                            <div className=\"p-field mt-2\" >\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <i className=\"pi pi-info\"></i>\r\n                                        </span>\r\n                                        <InputTextarea id=\"informacion\" name='informacion' placeholder=\"Informacion\" value={formik.values.informacion} onChange={formik.handleChange}/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('informacion')}\r\n\r\n                            {(stateEmpresa)?\r\n                                <div className=\"form-group\">\r\n                                    <div className=\"p-field mt-2\">\r\n                                        <div className=\"p-inputgroup\">\r\n                                            <span className=\"p-inputgroup-addon\">\r\n                                                <img   src={props.layoutColorMode === 'light' ? 'assets/layout/images/estado.png' : 'assets/layout/images/estado-dark.png'} style={{'height': '1.2em','width':'1.2em',}}/>   \r\n                                            </span>\r\n                                            <Dropdown id=\"estado\" name=\"estado\" placeholder=\"Seleccione un estado\" value={formik.values.estado} onChange={formik.handleChange} options={estados} optionLabel=\"name\"  optionValue=\"name\"/> \r\n                                        </div>       \r\n                                    </div>\r\n                                    {getFormErrorMessage('estado')}\r\n                                </div>\r\n                            :\r\n                                null\r\n                            }\r\n\r\n                            <div className=\"p-field mt-2\" >\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <i className=\"pi pi-user\"></i>\r\n                                        </span>\r\n                                        <Dropdown id=\"user\" name=\"user\" placeholder=\"Seleccione un usuario\" value={formik.values.user} onChange={formik.handleChange} options={users} optionLabel=\"nombre\"  optionValue=\"id\"/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('user')}\r\n\r\n\r\n\r\n                            <div className='mt-2'>\r\n                                <div className=\"flex justify-content-center flex-wrap\">\r\n                                    <div className=\"flex align-items-center justify-content-center  m-2\">\r\n                                        <Button label=\"Cancelar\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDialog} style={props.layoutColorMode === 'light' ? {'color':'#d13639','border-color':'#d13639'} : {'color':'#d13639','border-color':'#d13639'}}/>\r\n                                    </div>\r\n                                    <div className=\"flex align-items-center justify-content-center  m-2\">\r\n                                        <Button label=\"Guardar\"  icon=\"pi pi-check\" type=\"submit\" className=\"p-button-text\" onClick={showDialog} style={{'background': '#13af4e','color':'#ffffff'}}/>  \r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </Dialog>\r\n\r\n\r\n                    <Dialog className=\"mt-2\" visible={deleteEmpresaDialog} style={{ width: '450px' }} header=\"Confirm\" modal footer={deleteEmpresaDialogFooter} onHide={hideDeleteEmpresaDialog}>\r\n                        <div className=\"confirmation-content\">\r\n                            <i className=\"pi pi-exclamation-triangle p-mr-3\" style={{ fontSize: '2rem' }} />\r\n                            {empresa && <span>¿Estás segura de que quieres eliminar? <b>{empresa.nombre}</b> <b>{empresa.tipoSociedadad}</b>?</span>}\r\n                        </div>\r\n                    </Dialog>\r\n    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import axios from 'axios';\r\n\r\n export const getConvocatorias = () =>{\r\n     return axios.get('https://magic-tech-backend.herokuapp.com/api/getConvocatorias');\r\n }\r\n\r\n export const getConvocatoriaID =(id) =>{\r\n     return axios.get(`https://magic-tech-backend.herokuapp.com/api/getConvocatoriaId/${id}`);\r\n }\r\n\r\n\r\n\r\n export const createConvocatoria=(data)=>{\r\n    return axios.post('https://magic-tech-backend.herokuapp.com/api/createConvocatoria', \r\n      {\r\n         id:        `${data.id}`,\r\n         titulo:    `${data.titulo}`,\r\n         codigo:    `${data.codigo}`,\r\n         semestre:  `${data.semestre}`,\r\n         link:      `${data.link}`,\r\n         publicado: `${data.publicado}`,\r\n         estado:    `${data.estado}`,\r\n         user:      `${data.user}`     \r\n      }\r\n      )\r\n      .then(function (response) {\r\n        console.log(response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n }\r\n\r\nexport const updateConvocatoriaID =(data,id) =>{\r\n    return axios.put(`https://magic-tech-backend.herokuapp.com/api/updateConvocatoria/${id}`, \r\n    {\r\n        titulo:    `${data.titulo}`,\r\n        codigo:    `${data.codigo}`,\r\n        semestre:  `${data.semestre}`,\r\n        link:      `${data.link}`,\r\n        publicado: `${data.publicado}`,\r\n        estado:    `${data.estado}`,\r\n        user:      `${data.user}`\r\n    }\r\n    )\r\n    .then(function (response) {\r\n      console.log(response);\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error);\r\n    });\r\n}\r\n\r\nexport const deleteConvocatoriaID =(id) =>{\r\n    return axios.delete(`https://magic-tech-backend.herokuapp.com/api/deleteConvocatoriaId/${id}`);\r\n}\r\n\r\nexport const getConvocatoriasPublicados = () =>{\r\n  return axios.get('https://magic-tech-backend.herokuapp.com/api/getConvocatoriasPublicados');\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport classNames           from 'classnames';\r\nimport { DataTable }        from 'primereact/datatable';\r\nimport { Column }           from 'primereact/column';\r\nimport { Toast }            from 'primereact/toast';\r\nimport { Button }           from 'primereact/button';\r\nimport { Toolbar }          from 'primereact/toolbar';\r\nimport { Dialog }           from 'primereact/dialog';\r\nimport { InputText }        from 'primereact/inputtext';\r\nimport { InputTextarea }    from 'primereact/inputtextarea';\r\nimport { Password }         from 'primereact/password';\r\nimport { ColumnGroup }      from 'primereact/columngroup';\r\nimport { Row }              from 'primereact/row';\r\nimport { Dropdown }         from 'primereact/dropdown';\r\nimport { useFormik }        from \"formik\";\r\nimport { Link }             from 'react-router-dom';\r\n\r\nimport uniqid               from 'uniqid';\r\n\r\nimport { getConvocatorias,getConvocatoriaID,createConvocatoria,updateConvocatoriaID,deleteConvocatoriaID} from '../service/apiConvocatoria';\r\nimport { getUsers,getUsersActivas } from '../service/apiUser';\r\n\r\nexport const Convocatoria = (props) => {\r\n\r\n    let emptyConvocatoria = {\r\n        id:        null,\r\n        titulo:    '',\r\n        codigo:    '',\r\n        semestre:  '',\r\n        link:      '',\r\n        publicado: '',\r\n        estado:    '',\r\n        user:      ''\r\n    };\r\n\r\n    const semestres = [\r\n        { name: \"I-2020\" },\r\n        { name: \"II-2020\"},\r\n        { name: \"I-2021\"},\r\n        { name: \"II-2021\"},\r\n        { name: \"I-2022\"},\r\n        { name: \"II-2022\"}\r\n    ];\r\n\r\n    const publicacion = [\r\n        { name: \"Publicar\"     },\r\n        { name: \"No publicar\" }\r\n    ];\r\n\r\n    const estados = [\r\n        { name: \"Activo\"      },\r\n        { name: \"Desactivado\" }\r\n    ];\r\n\r\n    const [convocatorias, setConvocatorias]                          = useState(null);\r\n    const [users, setUsers]                                          = useState(null);\r\n    const [globalFilter, setGlobalFilter]                            = useState('');\r\n    const [loading, setLoading]                                      = useState(true);\r\n    const [convocatoriaDialog, setConvocatoriaDialog]                = useState(false);\r\n    const [deleteConvocatoriaDialog, setDeleteConvocatoriaDialog]    = useState(false);\r\n\r\n    const [convocatoria, setConvocatoria]                            = useState(emptyConvocatoria);\r\n    const [selectedConvocatorias, setSelectedConvocatorias]          = useState(null);\r\n    const [submitted, setSubmitted]                                  = useState(false);\r\n    const toast                                                      = useRef(null);\r\n    const dt                                                         = useRef(null);\r\n    const [stateConvocatoria,setStateConvocatoria]                   = useState(false);\r\n    const [convocatoriaUpdate, setConvocatoriaUpdate]                = useState(\"\");\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            titulo:    '',\r\n            codigo:    '',\r\n            semestre:  '',\r\n            link:      '',\r\n            publicado: '',\r\n            estado:    '',\r\n            user:      ''\r\n        },\r\n         validate: (data) => {\r\n            let errors = {};\r\n            if(stateConvocatoria){\r\n                if (!data.titulo) {\r\n                    errors.titulo = \"Se requiere el titulo\";\r\n                } else if (data.titulo.length < 2) {\r\n                    errors.titulo = \"Como minimo 2 caracteres\";\r\n                } else if (data.titulo.length > 50) {\r\n                    errors.titulo = \"Como maximo 50 caracteres\";\r\n                } else if (!/^^[a-zA-Z0-9\\s]+$/i.test(data.titulo)) {\r\n                    errors.titulo = \"No se permiten numero o caracteres especiales\";\r\n                }\r\n\r\n                if (!data.codigo) {\r\n                    errors.codigo = \"Se requiere el codigo\";\r\n                } else if (data.codigo.length < 2) {\r\n                    errors.codigo = \"Como minimo 2 caracteres\";\r\n                } else if (data.codigo.length > 30) {\r\n                    errors.codigo = \"Como maximo 30 caracteres\";\r\n                }else if (!/^^[a-zA-Z0-9\\s-]+$/i.test(data.codigo)) {\r\n                    errors.codigo = \"No se permiten numero o caracteres especiales\";\r\n                }else if(!esRepetido(data.codigo) && stateConvocatoria === false){\r\n                    errors.codigo = \"Ya existe el codigo\";\r\n                } else if(!esRepetidoUpdate(data.codigo,convocatoriaUpdate) && stateConvocatoria === true){\r\n                    errors.codigo = \"Ya existe el codigo\";  \r\n                }\r\n\r\n                \r\n                if (!data.semestre) {\r\n                    errors.semestre = \"Se requiere el semestre\";\r\n                } else if (data.semestre.length < 2) {\r\n                    errors.semestre = \"Como minimo 2 caracteres\";\r\n                } else if (data.semestre.length > 30) {\r\n                    errors.semestre = \"Como maximo 30 caracteres\";\r\n                }else if (!/^^[a-zA-Z0-9\\s-]+$/i.test(data.semestre)) {\r\n                    errors.semestre = \"No se permiten numero o caracteres especiales\";\r\n                }\r\n\r\n                if (!data.link) {\r\n                    errors.link = \"Se requiere el link\";\r\n                }else if (data.link.length > 500) {\r\n                    errors.link = \"Como maximo 500 caracteres\";\r\n                }else if (!/^(ftp|http|https):\\/\\/[^ \"]+$/.test(data.link)) {\r\n                errors.link = \"El link no es valido\";\r\n                }\r\n    \r\n                if (!data.publicado) {\r\n                    errors.publicado = \"Se requiere publicar\";\r\n                } else if (data.publicado.length < 2) {\r\n                    errors.publicado = \"Como minimo 2 caracteres\";\r\n                } else if (data.publicado.length > 30) {\r\n                    errors.publicado = \"Como maximo 30 caracteres\";\r\n                } else if (!/^^[a-zA-Z\\s]+$/i.test(data.publicado)) {\r\n                    errors.publicado = \"No se permiten numero o caracteres especiales\";\r\n                }\r\n\r\n                if (!data.estado) {\r\n                    errors.estado = \"Se requiere el estado\";\r\n                } else if (data.estado.length < 2) {\r\n                    errors.estado = \"Como minimo 2 caracteres\";\r\n                } else if (data.estado.length > 30) {\r\n                    errors.estado = \"Como maximo 30 caracteres\";\r\n                } else if (!/^^[a-zA-Z\\s]+$/i.test(data.estado)) {\r\n                    errors.estado = \"No se permiten numero o caracteres especiales\";\r\n                } \r\n\r\n                if (!data.user) {\r\n                    errors.user = \"Se requiere el usuario\";\r\n                } else if (data.user.length < 2) {\r\n                    errors.user = \"Como minimo 2 caracteres\";\r\n                } else if (data.user.length > 30) {\r\n                    errors.user = \"Como maximo 30 caracteres\";\r\n                }else if (!/^^[a-zA-Z0-9\\s-]+$/i.test(data.user)) {\r\n                    errors.user = \"No se permiten numero o caracteres especiales\";\r\n                }\r\n\r\n            }else{\r\n                if (!data.titulo) {\r\n                    errors.titulo = \"Se requiere el titulo\";\r\n                } else if (data.titulo.length < 2) {\r\n                    errors.titulo = \"Como minimo 2 caracteres\";\r\n                } else if (data.titulo.length > 50) {\r\n                    errors.titulo = \"Como maximo 50 caracteres\";\r\n                } else if (!/^^[a-zA-Z0-9\\s]+$/i.test(data.titulo)) {\r\n                    errors.titulo = \"No se permiten numero o caracteres especiales\";\r\n                }\r\n\r\n                if (!data.codigo) {\r\n                    errors.codigo = \"Se requiere el codigo\";\r\n                } else if (data.codigo.length < 2) {\r\n                    errors.codigo = \"Como minimo 2 caracteres\";\r\n                } else if (data.codigo.length > 30) {\r\n                    errors.codigo = \"Como maximo 30 caracteres\";\r\n                }else if (!/^^[a-zA-Z0-9\\s-]+$/i.test(data.codigo)) {\r\n                    errors.codigo = \"No se permiten numero o caracteres especiales\";\r\n                }else if(!esRepetido(data.codigo) && stateConvocatoria === false){\r\n                    errors.codigo = \"Ya existe el codigo\";\r\n                } else if(!esRepetidoUpdate(data.codigo,convocatoriaUpdate) && stateConvocatoria === true){\r\n                    errors.codigo = \"Ya existe el codigo\";  \r\n                }\r\n\r\n                \r\n                if (!data.semestre) {\r\n                    errors.semestre = \"Se requiere el semestre\";\r\n                } else if (data.semestre.length < 2) {\r\n                    errors.semestre = \"Como minimo 2 caracteres\";\r\n                } else if (data.semestre.length > 30) {\r\n                    errors.semestre = \"Como maximo 30 caracteres\";\r\n                }else if (!/^^[a-zA-Z0-9\\s-]+$/i.test(data.semestre)) {\r\n                    errors.semestre = \"No se permiten numero o caracteres especiales\";\r\n                }\r\n\r\n                if (!data.link) {\r\n                    errors.link = \"Se requiere el link\";\r\n                }else if (data.link.length > 500) {\r\n                    errors.link = \"Como maximo 500 caracteres\";\r\n                }else if (!/^(ftp|http|https):\\/\\/[^ \"]+$/.test(data.link)) {\r\n                errors.link = \"El link no es valido\";\r\n                }\r\n\r\n                if (!data.user) {\r\n                    errors.user = \"Se requiere el usuario\";\r\n                } else if (data.user.length < 2) {\r\n                    errors.user = \"Como minimo 2 caracteres\";\r\n                } else if (data.user.length > 30) {\r\n                    errors.user = \"Como maximo 30 caracteres\";\r\n                }else if (!/^^[a-zA-Z0-9\\s-]+$/i.test(data.user)) {\r\n                    errors.user = \"No se permiten numero o caracteres especiales\";\r\n                }\r\n\r\n            }\r\n\r\n            return errors;\r\n        },\r\n\r\n        onSubmit: (data) => {\r\n            if(submitted === true){\r\n                let _convocatorias = [...convocatorias];\r\n                let _convocatoria  = {...convocatoria };\r\n                _convocatoria['titulo']     = data.titulo;\r\n                _convocatoria['codigo']     = data.codigo;\r\n                _convocatoria['semestre']   = data.semestre;\r\n                _convocatoria['link']       = data.link;\r\n                _convocatoria['publicado']  = data.publicado;\r\n                _convocatoria['estado']     = data.estado;\r\n                _convocatoria['user']       = data.user;\r\n\r\n                if (_convocatoria.titulo.trim()) {\r\n                    if (convocatoria.id) {\r\n\r\n                        setConvocatoria({ ...convocatoria });\r\n                        const index = findIndexById(convocatoria.id);\r\n                        _convocatorias[index] = _convocatoria;\r\n\r\n                        updateConvocatoriaID({titulo:`${_convocatoria.titulo}`,codigo:`${_convocatoria.codigo}`,semestre:`${_convocatoria.semestre}`,link:`${_convocatoria.link}`,publicado:`${_convocatoria.publicado}`,estado:`${_convocatoria.estado}`,user:`${_convocatoria.user}`},convocatoria.id);\r\n                        toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Convocatoria Actualizada', life: 3000 });\r\n                    }\r\n                    else {\r\n\r\n                        _convocatoria.id        = uniqid(\"conv-\");\r\n                        _convocatoria.publicado = \"No publicar\";\r\n                        _convocatoria.estado    = \"Activo\"; \r\n                        _convocatorias.push(_convocatoria);\r\n                \r\n                        createConvocatoria({id:`${_convocatoria.id}`,titulo:`${_convocatoria.titulo}`,codigo:`${_convocatoria.codigo}`,semestre:`${_convocatoria.semestre}`,link:`${_convocatoria.link}`,publicado:`${_convocatoria.publicado}`,estado:`${_convocatoria.estado}`,user:`${_convocatoria.user}`});\r\n                        toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Convocatoria Creada', life: 3000 });\r\n                    }\r\n                }\r\n                setConvocatorias(_convocatorias);\r\n                setConvocatoriaDialog(false);\r\n                setConvocatoria(emptyConvocatoria);\r\n                formik.resetForm();\r\n        }\r\n            \r\n        },\r\n      });\r\n\r\n      const esRepetido =(value)=>{\r\n        var _convocatorias = [...convocatorias];\r\n        let res = _convocatorias.find(i => (i.codigo).toLowerCase().trim() === (value).toLowerCase().trim() );\r\n         if(res === undefined){\r\n             return true;\r\n         }else{\r\n             return false;\r\n         }\r\n    }\r\n    const esRepetidoUpdate =(value,original)=>{\r\n        var _convocatorias = [...convocatorias];\r\n        let aux = _convocatorias.filter(i =>(i.codigo).toLowerCase()!= (original).toLowerCase())\r\n        let res = aux.find(i => (i.codigo).toLowerCase().trim() === (value).toLowerCase().trim() );\r\n         if(res === undefined || res === original){\r\n             return true;\r\n         }else{\r\n             return false;\r\n         }\r\n    }\r\n\r\n    const isFormFieldValid = (name) => !!(formik.touched[name] && formik.errors[name]);\r\n    const getFormErrorMessage = (name) => {\r\n        return isFormFieldValid(name) && <small className=\"ml-1 p-error\" style={{'color': '#ff0000'}}>{formik.errors[name]}</small>;\r\n    };\r\n\r\n    useEffect(()=>{\r\n        fetchConvocatorias();\r\n    },[])\r\n\r\n    const fetchConvocatorias = () =>{\r\n        getConvocatorias().then(json =>{\r\n            if(json.error){\r\n                console.log(\"Error\");\r\n            }else{\r\n                console.log(\"---------Convocatorias insertados-----------\");\r\n                setConvocatorias(json.data);\r\n                setLoading(false);\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        fetchUsers();\r\n    },[])\r\n\r\n    const fetchUsers = () =>{\r\n        getUsersActivas().then(json =>{\r\n            if(json.error){\r\n                console.log(\"Error\");\r\n            }else{\r\n                console.log(\"---------Users insertados-----------\");\r\n                setUsers(json.data);\r\n            }\r\n        })\r\n    }\r\n\r\n    const openNew = () => {\r\n        setConvocatoria(emptyConvocatoria);\r\n        formik.resetForm();\r\n        setSubmitted(false);\r\n        setStateConvocatoria(false); \r\n        setConvocatoriaDialog(true);    \r\n    }\r\n\r\n    const hideDialog = () => {\r\n        setSubmitted(false);\r\n        setConvocatoriaDialog(false);\r\n    }\r\n\r\n    const showDialog = () => {\r\n        setSubmitted(true);\r\n        formik.handleSubmit();\r\n    }\r\n\r\n    const hideDeleteConvocatoriaDialog = () => {\r\n        setDeleteConvocatoriaDialog(false);\r\n    }\r\n\r\n    const editConvocatoria = (convocatoria) => {\r\n        setConvocatoria({ ...convocatoria });\r\n        setSubmitted(true);\r\n        formik.resetForm();\r\n        formik.setValues(\r\n        {\r\n            titulo:    `${convocatoria.titulo}`,\r\n            codigo:    `${convocatoria.codigo}`,\r\n            semestre:  `${convocatoria.semestre}`,\r\n            link:      `${convocatoria.link}`,\r\n            publicado: `${convocatoria.publicado}`,\r\n            estado:    `${convocatoria.estado}`,\r\n            user:      `${convocatoria.user}`\r\n        });\r\n        setConvocatoriaUpdate(`${convocatoria.codigo}`);\r\n        setStateConvocatoria(true);\r\n        setConvocatoriaDialog(true);\r\n    }\r\n\r\n    const confirmDeleteConvocatoria = (convocatoria) => {\r\n        setConvocatoria(convocatoria);\r\n        setDeleteConvocatoriaDialog(true);\r\n    }\r\n\r\n    const deleteConvocatoria = () => {\r\n        let _convocatorias = [...convocatorias];\r\n        let _convocatoria  = {...convocatoria };\r\n        \r\n\r\n        if (convocatoria.titulo.trim()) {\r\n            if (convocatoria.id) {\r\n\r\n                \r\n                const index = findIndexById(convocatoria.id);\r\n                _convocatorias[index] = _convocatoria;\r\n                updateConvocatoriaID({titulo:`${_convocatoria.titulo}`,codigo:`${_convocatoria.codigo}`,semestre:`${_convocatoria.semestre}`,link:`${_convocatoria.link}`,publicado:\"No publicar\",estado:\"Desactivado\",user:`${_convocatoria.user}`},convocatoria.id);\r\n                _convocatoria['titulo']     = _convocatoria.titulo;\r\n                _convocatoria['codigo']     = _convocatoria.codigo;\r\n                _convocatoria['semestre']   = _convocatoria.semestre;\r\n                _convocatoria['link']       = _convocatoria.link;\r\n                _convocatoria['publicado']  = \"No publicar\";\r\n                _convocatoria['estado']     = \"Desactivado\";\r\n                _convocatoria['user']       = _convocatoria.user;\r\n                setConvocatoria({ ...convocatoria });\r\n                toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Convocatoria desactivada', life: 3000 });\r\n            }\r\n        }\r\n        setConvocatorias(_convocatorias);\r\n        setConvocatoria(emptyConvocatoria);\r\n        setDeleteConvocatoriaDialog(false);\r\n        \r\n    }\r\n\r\n    const findIndexById = (id) => {\r\n        let index = -1;\r\n        for (let i = 0; i < convocatorias.length; i++) {\r\n            if (convocatorias[i].id === id) {\r\n\r\n                index = i;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return index;\r\n    }\r\n\r\n    const idBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">id</span>\r\n                {rowData.id}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const tituloBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Titulo</span>\r\n                {rowData.titulo}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const codigoBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Codigo</span>\r\n                {rowData.codigo}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const semestreBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Semestre</span>\r\n                {rowData.semestre}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const linkBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Link</span>\r\n                <Button label=\"Ver documento\" className=\"p-button-link\" onClick={() => window.open(`${rowData.link}`)} style={props.layoutColorMode === 'light' ? {'color':'#495057', 'font-weight': 'bold' , 'text-align': 'justify'} : {'color':'#ffffff', 'font-weight': 'bold' , 'text-align': 'justify'}}/>      \r\n            </>\r\n        );\r\n    }\r\n\r\n    const publicadoBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Publicado</span>\r\n                {rowData.publicado}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const estadoBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Estado</span>\r\n                {rowData.estado}\r\n            </>\r\n        );\r\n    }\r\n\r\n    \r\n\r\n\r\n    const userBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">User</span>\r\n                {rowData.user}\r\n               \r\n\r\n            </>\r\n        );\r\n    }\r\n\r\n    const leftToolbarTemplate = () => {\r\n        return (\r\n            <React.Fragment>\r\n                <Button style={props.layoutColorMode === 'light' ? {'color':'#ffffff','background': '#13af4e'} : {'color':'#ffffff','background': '#13af4e'}} label=\"Nuevo\" icon=\"pi pi-plus\" className=\"p-button-success p-mr-2\" onClick={openNew} />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    const actionBodyTemplate = (rowData) => {\r\n        return (\r\n            <div className=\"actions\">\r\n                <Button icon=\"pi pi-pencil\" style={{'background': '#13af4e'}} className=\"p-button-rounded p-button-success mr-2\"   onClick={() => editConvocatoria(rowData)} />\r\n                <Button icon=\"pi pi-trash\"  style={{'background': '#eee500'}} className=\"p-button-rounded p-button-warning\"        onClick={() => confirmDeleteConvocatoria(rowData)} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const deleteConvocatoriaDialogFooter = (\r\n        <>\r\n            <Button label=\"No\" icon=\"pi pi-times\" style={{'background': '#d13639','color':'#ffffff'}} className=\"p-button-text\" onClick={hideDeleteConvocatoriaDialog} />\r\n            <Button label=\"Si\" icon=\"pi pi-check\" style={props.layoutColorMode === 'light' ? {'color':'#13af4e','border-color':'#13af4e'} : {'color':'#13af4e','border-color':'#13af4e'}} className=\"p-button-text\" onClick={deleteConvocatoria} />\r\n        </>\r\n    );\r\n\r\n\r\n\r\n    const renderHeader = () => {\r\n        return (\r\n            <div className=\"flex flex-column md:flex-row md:justify-content-between md:align-items-center\">\r\n            <h5 className=\"m-0\">Gestion de convocatorias</h5>\r\n            <span className=\"block mt-2 md:mt-0 p-input-icon-left\">\r\n                <i className=\"pi pi-search\" />\r\n                <InputText type=\"search\" onInput={(e) => setGlobalFilter(e.target.value)} placeholder=\"Buscar...\" />\r\n            </span>\r\n        </div>\r\n        )\r\n    }\r\n\r\n    const renderGroup = () => {\r\n        return (\r\n            <ColumnGroup>\r\n                <Row>\r\n                    <Column header={showHeader} colSpan={8}></Column>\r\n                </Row>\r\n                <Row>\r\n                    <Column header=\"ID\"                 field=\"id\"        sortable style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                    <Column header=\"TITULO\"             field=\"titulo\"    sortable style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                    <Column header=\"CODIGO\"             field=\"codigo\"    sortable style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                    <Column header=\"SEMESTRE\"           field=\"semestre\"  sortable style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                    <Column header=\"LINK\"               field=\"link\"      sortable style={{ 'background-color': '#13af4e', width:'40%'}}/>\r\n                    <Column header=\"PUBLICADO\"          field=\"publicado\" sortable style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                    <Column header=\"ESTADO\"             field=\"estado\"    sortable style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                    <Column header=\"Editar/Eliminar\"                               style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                </Row>\r\n            </ColumnGroup>\r\n        )\r\n    }\r\n\r\n\r\n    const showHeader  = renderHeader();\r\n    const headerGroup = renderGroup();\r\n\r\n\r\n\r\n    const headerDialog =()=>{\r\n        return (stateConvocatoria)?\"Actualizando convocatoria\":\"Añadir convocatoria\"\r\n    }\r\n\r\n    return (\r\n        <div className=\"p-grid crud-demo\">\r\n            <div className=\"p-col-12\">\r\n                <div className=\"card\">\r\n                \r\n                    <Toast ref={toast} />\r\n                    <Toolbar className=\"\" left={leftToolbarTemplate}></Toolbar>\r\n\r\n                    <DataTable ref={dt} value={convocatorias} selection={selectedConvocatorias}  onSelectionChange={(e) => setSelectedConvocatorias(e.value)}\r\n                        dataKey=\"id\" rowHover paginator rows={10} rowsPerPageOptions={[5, 10, 25]} className=\"datatable-responsive p-datatable-sm p-datatable-gridlines p-datatable-striped\"\r\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\r\n                        currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} users\" resizableColumns columnResizeMode=\"fit\" showGridlines\r\n                        globalFilter={globalFilter} emptyMessage=\"No se encontro el rol\" loading={loading} headerColumnGroup={headerGroup}\r\n                        >\r\n                    \r\n                        <Column style={{width:'20%'}} field=\"id\"        header=\"ID\"        sortable body={idBodyTemplate}></Column>\r\n                        <Column style={{width:'20%'}} field=\"titulo\"    header=\"TITULO\"    sortable body={tituloBodyTemplate}></Column>\r\n                        <Column style={{width:'20%'}} field=\"codigo\"    header=\"CODIGO\"    sortable body={codigoBodyTemplate}></Column>\r\n                        <Column style={{width:'20%'}} field=\"semestre\"  header=\"SEMESTRE\"  sortable body={semestreBodyTemplate}></Column>\r\n                        <Column style={{width:'40%'}} field=\"link\"      header=\"LINK\"      sortable body={linkBodyTemplate}></Column>\r\n                        <Column style={{width:'20%'}} field=\"publicado\" header=\"PUBLICADO\" sortable body={publicadoBodyTemplate}></Column>\r\n                        <Column style={{width:'20%'}} field=\"estado\"    header=\"ESTADO\"    sortable body={estadoBodyTemplate}></Column>\r\n                        <Column style={{width:'20%'}} body={actionBodyTemplate}></Column>\r\n\r\n                    </DataTable>\r\n\r\n\r\n                    <Dialog visible={convocatoriaDialog} style={{ width: '450px' }} header={headerDialog} modal className=\"p-fluid\" onHide={hideDialog}>\r\n                        <form onSubmit={formik.handleSubmit}>\r\n                            <div className=\"p-field mt-2\" >\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <img   src={props.layoutColorMode === 'light' ? 'assets/layout/images/title.png' : 'assets/layout/images/title-dark.png'} style={{'height': '1.2em','width':'1.2em',}}/>  \r\n                                        </span>\r\n                                        <InputText id=\"titulo\" name='titulo' placeholder=\"Titulo\" value={formik.values.titulo} onChange={formik.handleChange} autoFocus/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('titulo')}\r\n\r\n                            <div className=\"p-field mt-2\">\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <img   src={props.layoutColorMode === 'light' ? 'assets/layout/images/code.png' : 'assets/layout/images/code-dark.png'} style={{'height': '1.2em','width':'1.2em',}}/>  \r\n                                        </span>\r\n                                        <InputText id=\"codigo\" name='codigo' placeholder=\"Codigo\" value={formik.values.codigo} onChange={formik.handleChange}/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('codigo')}\r\n\r\n                            \r\n                            <div className=\"p-field mt-2\">\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <i className=\"pi pi-calendar\"></i>\r\n                                        </span>\r\n                                        <Dropdown id=\"semestre\" name=\"semestre\" placeholder=\"Seleccione el semestre\" value={formik.values.semestre} onChange={formik.handleChange} options={semestres} optionLabel=\"name\"  optionValue=\"name\"/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('semestre')}\r\n\r\n                            <div className=\"p-field mt-2\">\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <i className=\"pi pi-link\"></i>\r\n                                        </span>\r\n                                        <InputTextarea id=\"link\" name='link' placeholder=\"Link\"  value={formik.values.link} onChange={formik.handleChange}/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('link')}\r\n\r\n                            {(stateConvocatoria)?(\r\n                                <div className=\"form-group\">\r\n                                    <div className=\"p-field mt-2\">\r\n                                            <div className=\"p-inputgroup\">\r\n                                                    <span className=\"p-inputgroup-addon\">\r\n                                                        <img   src={props.layoutColorMode === 'light' ? 'assets/layout/images/post.png' : 'assets/layout/images/post-dark.png'} style={{'height': '1.2em','width':'1.2em',}}/>  \r\n                                                    </span>\r\n                                                    <Dropdown id=\"publicado\" name=\"publicado\" placeholder=\"Seleccione si se publica\" value={formik.values.publicado} onChange={formik.handleChange} options={publicacion} optionLabel=\"name\"  optionValue=\"name\"/>\r\n                                            </div>       \r\n                                    </div>\r\n                                    {getFormErrorMessage('publicado')}\r\n\r\n                                    <div className=\"p-field mt-2\">\r\n                                        <div className=\"p-inputgroup\">\r\n                                            <span className=\"p-inputgroup-addon\">\r\n                                                <img   src={props.layoutColorMode === 'light' ? 'assets/layout/images/estado.png' : 'assets/layout/images/estado-dark.png'} style={{'height': '1.2em','width':'1.2em',}}/>   \r\n                                            </span>\r\n                                            <Dropdown id=\"estado\" name=\"estado\" placeholder=\"Seleccione un estado\" value={formik.values.estado} onChange={formik.handleChange} options={estados} optionLabel=\"name\"  optionValue=\"name\"/> \r\n                                        </div>       \r\n                                    </div>\r\n                                    {getFormErrorMessage('estado')}\r\n                                </div>\r\n                            ):\r\n                                null\r\n                            }\r\n\r\n                            <div className=\"p-field mt-2\">\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <i className=\"pi pi-user\"></i>\r\n                                        </span>\r\n                                        <Dropdown id=\"user\" name=\"user\" placeholder=\"Seleccione un usuario\" value={formik.values.user} onChange={formik.handleChange} options={users} optionLabel=\"nombre\"  optionValue=\"id\"/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('user')}\r\n\r\n\r\n                            <div className='mt-2'>\r\n                                <div className=\"flex justify-content-center flex-wrap\">\r\n                                    <div className=\"flex align-items-center justify-content-center  m-2\">\r\n                                        <Button label=\"Cancelar\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDialog} style={props.layoutColorMode === 'light' ? {'color':'#d13639','border-color':'#d13639'} : {'color':'#d13639','border-color':'#d13639'}}/>\r\n                                    </div>\r\n                                    <div className=\"flex align-items-center justify-content-center  m-2\">\r\n                                        <Button label=\"Guardar\"  icon=\"pi pi-check\" type=\"submit\" className=\"p-button-text\" onClick={showDialog} style={{'background': '#13af4e','color':'#ffffff'}}/>  \r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </Dialog>\r\n\r\n\r\n                    <Dialog className=\"mt-2\" visible={deleteConvocatoriaDialog} style={{ width: '450px' }} header=\"Confirm\" modal footer={deleteConvocatoriaDialogFooter} onHide={hideDeleteConvocatoriaDialog}>\r\n                        <div className=\"confirmation-content\">\r\n                            <i className=\"pi pi-exclamation-triangle p-mr-3\" style={{ fontSize: '2rem' }} />\r\n                            {convocatoria && <span>¿Estás segura de que quieres eliminar? <b>{convocatoria.titulo}</b> <b>{convocatoria.semestre}</b>?</span>}\r\n                        </div>\r\n                    </Dialog>\r\n    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import axios from 'axios';\r\n\r\n export const getPliegos = () =>{\r\n     return axios.get('https://magic-tech-backend.herokuapp.com/api/getPliegos');\r\n }\r\n\r\n export const getPliegoID =(id) =>{\r\n     return axios.get(`https://magic-tech-backend.herokuapp.com/api/getPliegoId/${id}`);\r\n }\r\n\r\n\r\n\r\n export const createPliego=(data)=>{\r\n    return axios.post('https://magic-tech-backend.herokuapp.com/api/createPliego', \r\n      {\r\n        id:        `${data.id}`,\r\n        titulo:    `${data.titulo}`,\r\n        codigo:    `${data.codigo}`,\r\n        semestre:  `${data.semestre}`,\r\n        link:      `${data.link}`,\r\n        publicado: `${data.publicado}`,\r\n        estado:    `${data.estado}`,\r\n        user:      `${data.user}` \r\n      }\r\n      )\r\n      .then(function (response) {\r\n        console.log(response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n }\r\n\r\nexport const updatePliegoID =(data,id) =>{\r\n    return axios.put(`https://magic-tech-backend.herokuapp.com/api/updatePliego/${id}`, \r\n    {\r\n        titulo:    `${data.titulo}`,\r\n        codigo:    `${data.codigo}`,\r\n        semestre:  `${data.semestre}`,\r\n        link:      `${data.link}`,\r\n        publicado: `${data.publicado}`,\r\n        estado:    `${data.estado}`,\r\n        user:      `${data.user}` \r\n    }\r\n    )\r\n    .then(function (response) {\r\n      console.log(response);\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error);\r\n    });\r\n}\r\n\r\nexport const deletePliegoID =(id) =>{\r\n    return axios.delete(`https://magic-tech-backend.herokuapp.com/api/deletePliegoId/${id}`);\r\n}\r\n\r\nexport const getPliegosPublicados = () =>{\r\n  return axios.get('https://magic-tech-backend.herokuapp.com/api/getPliegosPublicados');\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport classNames           from 'classnames';\r\nimport { DataTable }        from 'primereact/datatable';\r\nimport { Column }           from 'primereact/column';\r\nimport { Toast }            from 'primereact/toast';\r\nimport { Button }           from 'primereact/button';\r\nimport { Toolbar }          from 'primereact/toolbar';\r\nimport { Dialog }           from 'primereact/dialog';\r\nimport { InputText }        from 'primereact/inputtext';\r\nimport { InputTextarea }    from 'primereact/inputtextarea';\r\nimport { Password }         from 'primereact/password';\r\nimport { ColumnGroup }      from 'primereact/columngroup';\r\nimport { Row }              from 'primereact/row';\r\nimport { Dropdown }         from 'primereact/dropdown';\r\nimport { useFormik }        from \"formik\";\r\nimport { Link }             from 'react-router-dom';\r\n\r\nimport uniqid               from 'uniqid';\r\n\r\nimport { getPliegos,createPliego,updatePliegoID,deletePliegoID} from '../service/apiPliego';\r\nimport { getUsers,getUsersActivas } from '../service/apiUser';\r\n\r\nexport const PliegoEspecificacion = (props) => {\r\n\r\n    let emptyPliego = {\r\n        id:        null,\r\n        titulo:    '',\r\n        codigo:    '',\r\n        semestre:  '',\r\n        link:      '',\r\n        publicado: '',\r\n        estado:    '',\r\n        user:      ''\r\n    };\r\n\r\n    const semestres = [\r\n        { name: \"I-2020\" },\r\n        { name: \"II-2020\"},\r\n        { name: \"I-2021\"},\r\n        { name: \"II-2021\"},\r\n        { name: \"I-2022\"},\r\n        { name: \"II-2022\"}\r\n    ];\r\n\r\n    const publicacion = [\r\n        { name: \"Publicar\"     },\r\n        { name: \"No publicar\" }\r\n    ];\r\n\r\n    const estados = [\r\n        { name: \"Activo\"      },\r\n        { name: \"Desactivado\" }\r\n    ];\r\n\r\n    const [pliegos, setPliegos]                          = useState(null);\r\n    const [users, setUsers]                              = useState(null);\r\n    const [globalFilter, setGlobalFilter]                = useState('');\r\n    const [loading, setLoading]                          = useState(true);\r\n    const [pliegoDialog, setPliegoDialog]                = useState(false);\r\n    const [deletePliegoDialog, setDeletePliegoDialog]    = useState(false);\r\n\r\n    const [pliego, setPliego]                            = useState(emptyPliego);\r\n    const [selectedPliegos, setSelectedPliegos]          = useState(null);\r\n    const [submitted, setSubmitted]                      = useState(false);\r\n    const toast                                          = useRef(null);\r\n    const dt                                             = useRef(null);\r\n    const [statePliego,setStatePliego]                   = useState(false);\r\n    const [pliegoUpdate, setPliegoUpdate]                = useState(\"\");\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            titulo:    '',\r\n            codigo:    '',\r\n            semestre:  '',\r\n            link:      '',\r\n            publicado: '',\r\n            estado:    '',\r\n            user:      ''\r\n        },\r\n         validate: (data) => {\r\n            let errors = {};\r\n            if(statePliego){\r\n\r\n                if (!data.titulo) {\r\n                    errors.titulo = \"Se requiere el titulo\";\r\n                } else if (data.titulo.length < 2) {\r\n                    errors.titulo = \"Como minimo 2 caracteres\";\r\n                } else if (data.titulo.length > 50) {\r\n                    errors.titulo = \"Como maximo 50 caracteres\";\r\n                } else if (!/^^[a-zA-Z0-9\\s]+$/i.test(data.titulo)) {\r\n                    errors.titulo = \"No se permiten numero o caracteres especiales\";\r\n                }\r\n\r\n                if (!data.codigo) {\r\n                    errors.codigo = \"Se requiere el codigo\";\r\n                } else if (data.codigo.length < 2) {\r\n                    errors.codigo = \"Como minimo 2 caracteres\";\r\n                } else if (data.codigo.length > 30) {\r\n                    errors.codigo = \"Como maximo 30 caracteres\";\r\n                }else if (!/^^[a-zA-Z0-9\\s-]+$/i.test(data.codigo)) {\r\n                    errors.codigo = \"No se permiten numero o caracteres especiales\";\r\n                }else if(!esRepetido(data.codigo) && statePliego === false){\r\n                    errors.codigo = \"Ya existe el codigo\";\r\n                } else if(!esRepetidoUpdate(data.codigo,pliegoUpdate) && statePliego === true){\r\n                    errors.codigo = \"Ya existe el codigo\";  \r\n                }\r\n\r\n                \r\n                if (!data.semestre) {\r\n                    errors.semestre = \"Se requiere el semestre\";\r\n                } else if (data.semestre.length < 2) {\r\n                    errors.semestre = \"Como minimo 2 caracteres\";\r\n                } else if (data.semestre.length > 30) {\r\n                    errors.semestre = \"Como maximo 30 caracteres\";\r\n                }else if (!/^^[a-zA-Z0-9\\s-]+$/i.test(data.semestre)) {\r\n                    errors.semestre = \"No se permiten numero o caracteres especiales\";\r\n                }\r\n\r\n                if (!data.link) {\r\n                    errors.link = \"Se requiere el link\";\r\n                }else if (data.link.length > 500) {\r\n                    errors.link = \"Como maximo 500 caracteres\";\r\n                }else if (!/^(ftp|http|https):\\/\\/[^ \"]+$/.test(data.link)) {\r\n                    errors.link = \"El link no es valido\";\r\n                }\r\n\r\n                if (!data.publicado) {\r\n                    errors.publicado = \"Se requiere publicarlo\";\r\n                } else if (data.publicado.length < 2) {\r\n                    errors.publicado = \"Como minimo 2 caracteres\";\r\n                } else if (data.publicado.length > 30) {\r\n                    errors.publicado = \"Como maximo 30 caracteres\";\r\n                } else if (!/^^[a-zA-Z\\s]+$/i.test(data.publicado)) {\r\n                    errors.publicado = \"No se permiten numero o caracteres especiales\";\r\n                }\r\n\r\n                if (!data.estado) {\r\n                    errors.estado = \"Se requiere el estado\";\r\n                } else if (data.estado.length < 2) {\r\n                    errors.estado = \"Como minimo 2 caracteres\";\r\n                } else if (data.estado.length > 30) {\r\n                    errors.estado = \"Como maximo 30 caracteres\";\r\n                } else if (!/^^[a-zA-Z\\s]+$/i.test(data.estado)) {\r\n                    errors.estado = \"No se permiten numero o caracteres especiales\";\r\n                } \r\n\r\n                if (!data.user) {\r\n                    errors.user = \"Se requiere el usuario\";\r\n                } else if (data.user.length < 2) {\r\n                    errors.user = \"Como minimo 2 caracteres\";\r\n                } else if (data.user.length > 30) {\r\n                    errors.user = \"Como maximo 30 caracteres\";\r\n                }else if (!/^^[a-zA-Z0-9\\s-]+$/i.test(data.user)) {\r\n                    errors.user = \"No se permiten numero o caracteres especiales\";\r\n                }\r\n\r\n            }else{\r\n\r\n                if (!data.titulo) {\r\n                    errors.titulo = \"Se requiere el titulo\";\r\n                } else if (data.titulo.length < 2) {\r\n                    errors.titulo = \"Como minimo 2 caracteres\";\r\n                } else if (data.titulo.length > 50) {\r\n                    errors.titulo = \"Como maximo 50 caracteres\";\r\n                } else if (!/^^[a-zA-Z0-9\\s]+$/i.test(data.titulo)) {\r\n                    errors.titulo = \"No se permiten numero o caracteres especiales\";\r\n                }\r\n\r\n                if (!data.codigo) {\r\n                    errors.codigo = \"Se requiere el codigo\";\r\n                } else if (data.codigo.length < 2) {\r\n                    errors.codigo = \"Como minimo 2 caracteres\";\r\n                } else if (data.codigo.length > 30) {\r\n                    errors.codigo = \"Como maximo 30 caracteres\";\r\n                }else if (!/^^[a-zA-Z0-9\\s-]+$/i.test(data.codigo)) {\r\n                    errors.codigo = \"No se permiten numero o caracteres especiales\";\r\n                }else if(!esRepetido(data.codigo) && statePliego === false){\r\n                    errors.codigo = \"Ya existe el codigo\";\r\n                } else if(!esRepetidoUpdate(data.codigo,pliegoUpdate) && statePliego === true){\r\n                    errors.codigo = \"Ya existe el codigo\";  \r\n                }\r\n\r\n                \r\n                if (!data.semestre) {\r\n                    errors.semestre = \"Se requiere el semestre\";\r\n                } else if (data.semestre.length < 2) {\r\n                    errors.semestre = \"Como minimo 2 caracteres\";\r\n                } else if (data.semestre.length > 30) {\r\n                    errors.semestre = \"Como maximo 30 caracteres\";\r\n                }else if (!/^^[a-zA-Z0-9\\s-]+$/i.test(data.semestre)) {\r\n                    errors.semestre = \"No se permiten numero o caracteres especiales\";\r\n                }\r\n\r\n                if (!data.link) {\r\n                    errors.link = \"Se requiere el link\";\r\n                }else if (data.link.length > 500) {\r\n                    errors.link = \"Como maximo 500 caracteres\";\r\n                }else if (!/^(ftp|http|https):\\/\\/[^ \"]+$/.test(data.link)) {\r\n                    errors.link = \"El link no es valido\";\r\n                }\r\n\r\n                if (!data.user) {\r\n                    errors.user = \"Se requiere el usuario\";\r\n                } else if (data.user.length < 2) {\r\n                    errors.user = \"Como minimo 2 caracteres\";\r\n                } else if (data.user.length > 30) {\r\n                    errors.user = \"Como maximo 30 caracteres\";\r\n                }else if (!/^^[a-zA-Z0-9\\s-]+$/i.test(data.user)) {\r\n                    errors.user = \"No se permiten numero o caracteres especiales\";\r\n                }\r\n\r\n            }\r\n\r\n            return errors;\r\n        },\r\n\r\n        onSubmit: (data) => {\r\n            if(submitted === true){\r\n                let _pliegos = [...pliegos];\r\n                let _pliego  = {...pliego };\r\n                _pliego['titulo']     = data.titulo;\r\n                _pliego['codigo']     = data.codigo;\r\n                _pliego['semestre']   = data.semestre;\r\n                _pliego['link']       = data.link;\r\n                _pliego['publicado']  = data.publicado;\r\n                _pliego['estado']     = data.estado;\r\n                _pliego['user']       = data.user;\r\n\r\n                if (_pliego.titulo.trim()) {\r\n                    if (pliego.id) {\r\n\r\n                        setPliego({ ...pliego });\r\n                        const index = findIndexById(pliego.id);\r\n                        _pliegos[index] = _pliego;\r\n\r\n                        updatePliegoID({titulo:`${_pliego.titulo}`,codigo:`${_pliego.codigo}`,semestre:`${_pliego.semestre}`,link:`${_pliego.link}`,publicado:`${_pliego.publicado}`,estado:`${_pliego.estado}`,user:`${_pliego.user}`},pliego.id);\r\n                        toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Pliego de especificaciones Actualizada', life: 3000 });\r\n                    }\r\n                    else {\r\n\r\n                        _pliego.id        = uniqid(\"plieg-\");\r\n                        _pliego.publicado = \"No publicar\";\r\n                        _pliego.estado    = \"Activo\";\r\n                        _pliegos.push(_pliego);\r\n\r\n                        createPliego({id:`${_pliego.id}`,titulo:`${_pliego.titulo}`,codigo:`${_pliego.codigo}`,semestre:`${_pliego.semestre}`,link:`${_pliego.link}`,publicado:`${_pliego.publicado}`,estado:`${_pliego.estado}`,user:`${_pliego.user}`});\r\n                        toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Pliego de especificaciones Creada', life: 3000 });\r\n                    }\r\n                }\r\n                setPliegos(_pliegos);\r\n                setPliegoDialog(false);\r\n                setPliego(emptyPliego);\r\n                formik.resetForm();\r\n        }\r\n            \r\n        },\r\n      });\r\n\r\n    const esRepetido =(value)=>{\r\n        var _pliegos = [...pliegos];\r\n        let res = _pliegos.find(i => (i.codigo).toLowerCase().trim() === (value).toLowerCase().trim() );\r\n         if(res === undefined){\r\n             return true;\r\n         }else{\r\n             return false;\r\n         }\r\n    }\r\n    const esRepetidoUpdate =(value,original)=>{\r\n        var _pliegos = [...pliegos];\r\n        let aux = _pliegos.filter(i =>(i.codigo).toLowerCase().trim() != (original).toLowerCase().trim())\r\n        let res = aux.find(i => (i.codigo).toLowerCase().trim() === (value).toLowerCase().trim() );\r\n         if(res === undefined || res === original){\r\n             return true;\r\n         }else{\r\n             return false;\r\n         }\r\n    }\r\n\r\n    const isFormFieldValid = (name) => !!(formik.touched[name] && formik.errors[name]);\r\n    const getFormErrorMessage = (name) => {\r\n        return isFormFieldValid(name) && <small className=\"ml-1 p-error\" style={{'color': '#ff0000'}}>{formik.errors[name]}</small>;\r\n    };\r\n\r\n    useEffect(()=>{\r\n        fetchPliegos();\r\n    },[])\r\n\r\n    const fetchPliegos = () =>{\r\n        getPliegos().then(json =>{\r\n            if(json.error){\r\n                console.log(\"Error\");\r\n            }else{\r\n                console.log(\"---------Pliego de espeficiaciones insertados-----------\");\r\n                setPliegos(json.data);\r\n                setLoading(false);\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        fetchUsers();\r\n    },[])\r\n\r\n    const fetchUsers = () =>{\r\n        getUsersActivas().then(json =>{\r\n            if(json.error){\r\n                console.log(\"Error\");\r\n            }else{\r\n                console.log(\"---------Users insertados-----------\");\r\n                setUsers(json.data);\r\n            }\r\n        })\r\n    }\r\n\r\n    const openNew = () => {\r\n        setPliego(emptyPliego);\r\n        formik.resetForm();\r\n        setSubmitted(false);\r\n        setStatePliego(false); \r\n        setPliegoDialog(true);    \r\n    }\r\n\r\n    const hideDialog = () => {\r\n        setSubmitted(false);\r\n        setPliegoDialog(false);\r\n    }\r\n\r\n    const showDialog = () => {\r\n        setSubmitted(true);\r\n        formik.handleSubmit();\r\n    }\r\n\r\n    const hideDeletePliegoDialog = () => {\r\n        setDeletePliegoDialog(false);\r\n    }\r\n\r\n    const editPliego = (pliego) => {\r\n        setPliego({ ...pliego });\r\n        setSubmitted(true);\r\n        formik.resetForm();\r\n        formik.setValues(\r\n        {\r\n            titulo:    `${pliego.titulo}`,\r\n            codigo:    `${pliego.codigo}`,\r\n            semestre:  `${pliego.semestre}`,\r\n            link:      `${pliego.link}`,\r\n            publicado: `${pliego.publicado}`,\r\n            estado:    `${pliego.estado}`,\r\n            user:      `${pliego.user}`\r\n        });\r\n        setPliegoUpdate(`${pliego.codigo}`);\r\n        setStatePliego(true);\r\n        setPliegoDialog(true);\r\n    }\r\n\r\n    const confirmDeletePliego = (pliego) => {\r\n        setPliego(pliego);\r\n        setDeletePliegoDialog(true);\r\n    }\r\n\r\n    const deletePliego = () => {\r\n        let _pliegos = [...pliegos];\r\n        let _pliego  = {...pliego };\r\n        \r\n\r\n        if (pliego.titulo.trim()) {\r\n            if (pliego.id) {\r\n\r\n                \r\n                const index = findIndexById(pliego.id);\r\n                _pliegos[index] = _pliego;\r\n\r\n                updatePliegoID({titulo:`${_pliego.titulo}`,codigo:`${_pliego.codigo}`,semestre:`${_pliego.semestre}`,link:`${_pliego.link}`,publicado:\"No publicar\",estado:\"Desactivado\",user:`${_pliego.user}`},pliego.id);\r\n                _pliego['titulo']     = _pliego.titulo;\r\n                _pliego['codigo']     = _pliego.codigo;\r\n                _pliego['semestre']   = _pliego.semestre;\r\n                _pliego['link']       = _pliego.link;\r\n                _pliego['publicado']  = \"No publicar\";\r\n                _pliego['estado']     = \"Desactivado\";\r\n                _pliego['user']       = _pliego.user;\r\n                setPliego({ ...pliego });\r\n                toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Pliego de espeficiacion Eliminada', life: 3000 });\r\n            }\r\n        }\r\n        setPliegos(_pliegos);\r\n        setPliego(emptyPliego);\r\n        setDeletePliegoDialog(false);\r\n        \r\n    }\r\n\r\n    const findIndexById = (id) => {\r\n        let index = -1;\r\n        for (let i = 0; i < pliegos.length; i++) {\r\n            if (pliegos[i].id === id) {\r\n\r\n                index = i;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return index;\r\n    }\r\n\r\n    const idBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">id</span>\r\n                {rowData.id}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const tituloBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Titulo</span>\r\n                {rowData.titulo}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const codigoBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Codigo</span>\r\n                {rowData.codigo}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const semestreBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Semestre</span>\r\n                {rowData.semestre}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const linkBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Link</span>\r\n                <Button label=\"Ver documento\" className=\"p-button-link\" onClick={() => window.open(`${rowData.link}`)} style={props.layoutColorMode === 'light' ? {'color':'#495057', 'font-weight': 'bold' , 'text-align': 'justify'} : {'color':'#ffffff', 'font-weight': 'bold' , 'text-align': 'justify'}}/>      \r\n            </>\r\n        );\r\n    }\r\n\r\n    const publicadoBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Publicado</span>\r\n                {rowData.publicado}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const estadoBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Estado</span>\r\n                {rowData.estado}\r\n            </>\r\n        );\r\n    }\r\n\r\n\r\n    const userBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">User</span>\r\n                {rowData.user}\r\n               \r\n\r\n            </>\r\n        );\r\n    }\r\n\r\n    const leftToolbarTemplate = () => {\r\n        return (\r\n            <React.Fragment>\r\n                <Button style={props.layoutColorMode === 'light' ? {'color':'#ffffff','background': '#13af4e'} : {'color':'#ffffff','background': '#13af4e'}} label=\"Nuevo\" icon=\"pi pi-plus\" className=\"p-button-success p-mr-2\" onClick={openNew} />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    const actionBodyTemplate = (rowData) => {\r\n        return (\r\n            <div className=\"actions\">\r\n                <Button icon=\"pi pi-pencil\" style={{'background': '#13af4e'}} className=\"p-button-rounded p-button-success mr-2\"   onClick={() => editPliego(rowData)} />\r\n                <Button icon=\"pi pi-trash\"  style={{'background': '#eee500'}} className=\"p-button-rounded p-button-warning\"        onClick={() => confirmDeletePliego(rowData)} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const deletePliegoDialogFooter = (\r\n        <>\r\n            <Button label=\"No\" icon=\"pi pi-times\" style={{'background': '#d13639','color':'#ffffff'}} className=\"p-button-text\" onClick={hideDeletePliegoDialog} />\r\n            <Button label=\"Si\" icon=\"pi pi-check\" style={props.layoutColorMode === 'light' ? {'color':'#13af4e','border-color':'#13af4e'} : {'color':'#13af4e','border-color':'#13af4e'}} className=\"p-button-text\" onClick={deletePliego} />\r\n        </>\r\n    );\r\n\r\n    const renderHeader = () => {\r\n        return (\r\n            <div className=\"flex flex-column md:flex-row md:justify-content-between md:align-items-center\">\r\n            <h5 className=\"m-0\">Gestion de pliego de especificaciones</h5>\r\n            <span className=\"block mt-2 md:mt-0 p-input-icon-left\">\r\n                <i className=\"pi pi-search\" />\r\n                <InputText type=\"search\" onInput={(e) => setGlobalFilter(e.target.value)} placeholder=\"Buscar...\" />\r\n            </span>\r\n        </div>\r\n        )\r\n    }\r\n\r\n    const renderGroup = () => {\r\n        return (\r\n            <ColumnGroup>\r\n                <Row>\r\n                    <Column header={showHeader} colSpan={8}></Column>\r\n                </Row>\r\n                <Row>\r\n                    <Column header=\"ID\"                 field=\"id\"       sortable style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                    <Column header=\"TITULO\"             field=\"titulo\"   sortable style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                    <Column header=\"CODIGO\"             field=\"codigo\"   sortable style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                    <Column header=\"SEMESTRE\"           field=\"semestre\" sortable style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                    <Column header=\"LINK\"               field=\"link\"     sortable style={{ 'background-color': '#13af4e', width:'40%'}}/>\r\n                    <Column header=\"PUBLICADO\"          field=\"publicado\" sortable style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                    <Column header=\"ESTADO\"             field=\"estado\"    sortable style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                    <Column header=\"Editar/Eliminar\"                              style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                </Row>\r\n            </ColumnGroup>\r\n        )\r\n    }\r\n\r\n\r\n    const showHeader  = renderHeader();\r\n    const headerGroup = renderGroup();\r\n\r\n\r\n    const headerDialog =()=>{\r\n        return (statePliego)?\"Actualizando pliego de espeficiciones\":\"Añadir pliego de espeficiciones\"\r\n    }\r\n\r\n    return (\r\n        <div className=\"p-grid crud-demo\">\r\n            <div className=\"p-col-12\">\r\n                <div className=\"card\">\r\n                \r\n                    <Toast ref={toast} />\r\n                    <Toolbar className=\"\" left={leftToolbarTemplate}></Toolbar>\r\n\r\n                    <DataTable ref={dt} value={pliegos} selection={selectedPliegos}  onSelectionChange={(e) => setSelectedPliegos(e.value)}\r\n                        dataKey=\"id\" rowHover paginator rows={10} rowsPerPageOptions={[5, 10, 25]} className=\"datatable-responsive p-datatable-sm p-datatable-gridlines p-datatable-striped\"\r\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\r\n                        currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} users\" resizableColumns columnResizeMode=\"fit\" showGridlines\r\n                        globalFilter={globalFilter} emptyMessage=\"No se encontro el rol\" loading={loading} headerColumnGroup={headerGroup}\r\n                        >\r\n                    \r\n                        <Column style={{width:'20%'}} field=\"id\"        header=\"ID\"        sortable body={idBodyTemplate}></Column>\r\n                        <Column style={{width:'20%'}} field=\"titulo\"    header=\"TITULO\"    sortable body={tituloBodyTemplate}></Column>\r\n                        <Column style={{width:'20%'}} field=\"codigo\"    header=\"CODIGO\"    sortable body={codigoBodyTemplate}></Column>\r\n                        <Column style={{width:'20%'}} field=\"semestre\"  header=\"SEMESTRE\"  sortable body={semestreBodyTemplate}></Column>\r\n                        <Column style={{width:'40%'}} field=\"link\"      header=\"LINK\"      sortable body={linkBodyTemplate}></Column>\r\n                        <Column style={{width:'20%'}} field=\"publicado\" header=\"PUBLICADO\" sortable body={publicadoBodyTemplate}></Column>\r\n                        <Column style={{width:'20%'}} field=\"estado\"    header=\"ESTADO\"    sortable body={estadoBodyTemplate}></Column>\r\n                        <Column style={{width:'20%'}} body={actionBodyTemplate}></Column>\r\n\r\n                    </DataTable>\r\n\r\n\r\n                    <Dialog visible={pliegoDialog} style={{ width: '450px' }} header={headerDialog} modal className=\"p-fluid\" onHide={hideDialog}>\r\n                        <form onSubmit={formik.handleSubmit}>\r\n                            <div className=\"p-field mt-2\" >\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <img   src={props.layoutColorMode === 'light' ? 'assets/layout/images/title.png' : 'assets/layout/images/title-dark.png'} style={{'height': '1.2em','width':'1.2em',}}/>  \r\n                                        </span>\r\n                                        <InputText id=\"titulo\" name='titulo' placeholder=\"Titulo\" value={formik.values.titulo} onChange={formik.handleChange} autoFocus/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('titulo')}\r\n\r\n                            <div className=\"p-field mt-2\">\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <img   src={props.layoutColorMode === 'light' ? 'assets/layout/images/code.png' : 'assets/layout/images/code-dark.png'} style={{'height': '1.2em','width':'1.2em',}}/>  \r\n                                        </span>\r\n                                        <InputText id=\"codigo\" name='codigo' placeholder=\"Codigo\" value={formik.values.codigo} onChange={formik.handleChange}/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('codigo')}\r\n\r\n                            \r\n                            <div className=\"p-field mt-2\">\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <i className=\"pi pi-calendar\"></i>\r\n                                        </span>\r\n                                        <Dropdown id=\"semestre\" name=\"semestre\" placeholder=\"Seleccione el semestre\" value={formik.values.semestre} onChange={formik.handleChange} options={semestres} optionLabel=\"name\"  optionValue=\"name\"/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('semestre')}\r\n\r\n                            <div className=\"p-field mt-2\">\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <i className=\"pi pi-link\"></i>\r\n                                        </span>\r\n                                        <InputTextarea id=\"link\" name='link' placeholder=\"Link\"  value={formik.values.link} onChange={formik.handleChange}/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('link')}\r\n\r\n                            {(statePliego)?(\r\n                                <div className=\"form-group\">\r\n                                    <div className=\"p-field mt-2\">\r\n                                            <div className=\"p-inputgroup\">\r\n                                                    <span className=\"p-inputgroup-addon\">\r\n                                                        <img   src={props.layoutColorMode === 'light' ? 'assets/layout/images/post.png' : 'assets/layout/images/post-dark.png'} style={{'height': '1.2em','width':'1.2em',}}/>  \r\n                                                    </span>\r\n                                                    <Dropdown id=\"publicado\" name=\"publicado\" placeholder=\"Seleccione si se publica\" value={formik.values.publicado} onChange={formik.handleChange} options={publicacion} optionLabel=\"name\"  optionValue=\"name\"/>\r\n                                            </div>       \r\n                                    </div>\r\n                                    {getFormErrorMessage('publicado')}\r\n\r\n                                    <div className=\"p-field mt-2\">\r\n                                        <div className=\"p-inputgroup\">\r\n                                            <span className=\"p-inputgroup-addon\">\r\n                                                <img   src={props.layoutColorMode === 'light' ? 'assets/layout/images/estado.png' : 'assets/layout/images/estado-dark.png'} style={{'height': '1.2em','width':'1.2em',}}/>   \r\n                                            </span>\r\n                                            <Dropdown id=\"estado\" name=\"estado\" placeholder=\"Seleccione un estado\" value={formik.values.estado} onChange={formik.handleChange} options={estados} optionLabel=\"name\"  optionValue=\"name\"/> \r\n                                        </div>       \r\n                                    </div>\r\n                                    {getFormErrorMessage('estado')}\r\n                                </div>\r\n                            ):\r\n                                null\r\n                            }\r\n                            \r\n                            <div className=\"p-field mt-2\">\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <i className=\"pi pi-user\"></i>\r\n                                        </span>\r\n                                        <Dropdown id=\"user\" name=\"user\" placeholder=\"Seleccione un usuario\" value={formik.values.user} onChange={formik.handleChange} options={users} optionLabel=\"nombre\"  optionValue=\"id\"/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('user')}\r\n\r\n\r\n                            <div className='mt-2'>\r\n                                <div className=\"flex justify-content-center flex-wrap\">\r\n                                    <div className=\"flex align-items-center justify-content-center  m-2\">\r\n                                        <Button label=\"Cancelar\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDialog} style={props.layoutColorMode === 'light' ? {'color':'#d13639','border-color':'#d13639'} : {'color':'#d13639','border-color':'#d13639'}}/>\r\n                                    </div>\r\n                                    <div className=\"flex align-items-center justify-content-center  m-2\">\r\n                                        <Button label=\"Guardar\"  icon=\"pi pi-check\" type=\"submit\" className=\"p-button-text\" onClick={showDialog} style={{'background': '#13af4e','color':'#ffffff'}}/>  \r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </Dialog>\r\n\r\n\r\n                    <Dialog className=\"mt-2\" visible={deletePliegoDialog} style={{ width: '450px' }} header=\"Confirm\" modal footer={deletePliegoDialogFooter} onHide={hideDeletePliegoDialog}>\r\n                        <div className=\"confirmation-content\">\r\n                            <i className=\"pi pi-exclamation-triangle p-mr-3\" style={{ fontSize: '2rem' }} />\r\n                            {pliego && <span>¿Estás segura de que quieres eliminar? <b>{pliego.titulo}</b> <b>{pliego.semestre}</b>?</span>}\r\n                        </div>\r\n                    </Dialog>\r\n    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react';\r\n\r\n\r\nexport const Aviso = () => {\r\n\r\n    return (\r\n        <div className=\"grid\">\r\n             <h1>Estamos trabajando - En los Avisos</h1>\r\n        </div>\r\n    );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { DataTable }                  from 'primereact/datatable';\r\nimport { Column }                     from 'primereact/column';\r\nimport { ColumnGroup }                from 'primereact/columngroup';\r\nimport { Row }                        from 'primereact/row';\r\nimport { InputText }                  from 'primereact/inputtext';\r\nimport { getEmpresas}                 from '../service/apiEmpresa';\r\n\r\nexport const ListEmpresa = (props) => {\r\n\r\n    const [empresas, setEmpresas]           = useState(null);\r\n    const [globalFilter, setGlobalFilter]   = useState('');\r\n    const [loading, setLoading]             = useState(true);\r\n\r\n    useEffect(()=>{\r\n        fetchEmpresas();\r\n    },[])\r\n\r\n    const fetchEmpresas = () =>{\r\n        getEmpresas().then(json =>{\r\n            if(json.error){\r\n                console.log(\"Error\");\r\n            }else{\r\n                console.log(\"---------Empresas insertados-----------\");\r\n                setEmpresas(json.data);\r\n                setLoading(false);\r\n            }\r\n        })\r\n    }\r\n\r\n  \r\n\r\n       \r\n\r\n    const nombreBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Nombre</span>\r\n                {rowData.nombre}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const tipoSociedadBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Tipo Sociedad</span>\r\n                {rowData.tipoSociedad}\r\n                \r\n            </>\r\n        );\r\n    }\r\n\r\n    const direccionBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Direccion</span>\r\n                {rowData.direccion}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const emailBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Correo electronico</span>\r\n                {rowData.email}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const renderHeader = () => {\r\n        return (\r\n            <div className=\"flex flex-column md:flex-row md:justify-content-between md:align-items-center\">\r\n            <h5 className=\"m-0\">Lista de empresas registradas en funda empresa</h5>\r\n            <span className=\"block mt-2 md:mt-0 p-input-icon-left\">\r\n                <i className=\"pi pi-search\" />\r\n                <InputText type=\"search\" onInput={(e) => setGlobalFilter(e.target.value)} placeholder=\"Buscar...\" />\r\n            </span>\r\n        </div>\r\n        )\r\n    }\r\n\r\n    const renderGroup = () => {\r\n        return (\r\n            <ColumnGroup>\r\n                <Row>\r\n                    <Column header={showHeader} colSpan={4}></Column>\r\n                </Row>\r\n                <Row>\r\n                    <Column header=\"NOMBRE\"                 field=\"nombre\"       sortable style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                    <Column header=\"SOCIEDAD\"               field=\"tipoSociedad\" sortable style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                    <Column header=\"DIRECCION\"              field=\"direccion\"    sortable style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                    <Column header=\"CORREO ELECTRONICO\"     field=\"email\"        sortable style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                </Row>\r\n            </ColumnGroup>\r\n        )\r\n    }\r\n\r\n\r\n    const showHeader  = renderHeader();\r\n    const headerGroup = renderGroup();\r\n\r\n            \r\n\r\n    return (\r\n        <div className=\"grid table-demo\">\r\n            <div className=\"col-12\">\r\n                <div className=\"card\">\r\n                    <DataTable value={empresas} className=\"p-datatable-gridlines p-datatable-striped p-datatable-sm p-datatable-customers \" dataKey=\"id\" rowHover\r\n                        paginator rows={10} rowsPerPageOptions={[5, 10, 25]} globalFilter={globalFilter} emptyMessage=\"No se encontraron empresas\" loading={loading} \r\n                        headerColumnGroup={headerGroup} >\r\n                        <Column style={{width:'20%'}} field=\"nombre\"          header=\"NOMBRE\"             sortable body={nombreBodyTemplate}        ></Column>\r\n                        <Column style={{width:'20%'}} field=\"tipoSociedad\"    header=\"SOCIEDAD\"           sortable body={tipoSociedadBodyTemplate}  ></Column>\r\n                        <Column style={{width:'20%'}} field=\"direccion\"       header=\"DIRECCION\"          sortable body={direccionBodyTemplate}     ></Column>\r\n                        <Column style={{width:'25%'}} field=\"email\"           header=\"CORREO ELECTRONICO\" sortable body={emailBodyTemplate}         ></Column>\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { DataTable }                  from 'primereact/datatable';\r\nimport { Column }                     from 'primereact/column';\r\nimport { Button }                     from 'primereact/button';\r\nimport { ColumnGroup }                from 'primereact/columngroup';\r\nimport { Row }                        from 'primereact/row';\r\nimport { InputText }                  from 'primereact/inputtext';\r\nimport { getConvocatoriasPublicados}  from '../service/apiConvocatoria';\r\n\r\nexport const ListConvocatoria = (props) => {\r\n\r\n    const [convocatorias, setConvocatorias] = useState(null);\r\n    const [globalFilter, setGlobalFilter]   = useState('');\r\n    const [loading, setLoading]             = useState(true);\r\n\r\n    useEffect(()=>{\r\n        fetchConvocatorias();\r\n    },[])\r\n\r\n    const fetchConvocatorias = () =>{\r\n        getConvocatoriasPublicados().then(json =>{\r\n            if(json.error){\r\n                console.log(\"Error\");\r\n            }else{\r\n                console.log(\"---------Convocatorias insertados-----------\");\r\n                setConvocatorias(json.data);\r\n                setLoading(false);\r\n            }\r\n        })\r\n    }\r\n\r\n    const tituloBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Titulo</span>\r\n                {rowData.titulo}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const codigoBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Codigo</span>\r\n                {rowData.codigo}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const semestreBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Semestre</span>\r\n                {rowData.semestre}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const linkBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Link</span>\r\n                <Button label=\"Ver documento\" className=\"p-button-link\" onClick={() => window.open(`${rowData.link}`)} style={props.layoutColorMode === 'light' ? {'color':'#495057', 'font-weight': 'bold' , 'text-align': 'justify'} : {'color':'#ffffff', 'font-weight': 'bold' , 'text-align': 'justify'}}/>      \r\n            </>\r\n        );\r\n    }\r\n\r\n\r\n    const renderHeader = () => {\r\n        return (\r\n            <div className=\"flex flex-column md:flex-row md:justify-content-between md:align-items-center\">\r\n            <h5 className=\"m-0\">Lista de convocatorias publicadas</h5>\r\n            <span className=\"block mt-2 md:mt-0 p-input-icon-left\">\r\n                <i className=\"pi pi-search\" />\r\n                <InputText type=\"search\" onInput={(e) => setGlobalFilter(e.target.value)} placeholder=\"Buscar...\" />\r\n            </span>\r\n        </div>\r\n        )\r\n    }\r\n\r\n    const renderGroup = () => {\r\n        return (\r\n            <ColumnGroup>\r\n                <Row>\r\n                    <Column header={showHeader} colSpan={4}></Column>\r\n                </Row>\r\n                <Row>\r\n                    <Column header=\"TITULO\"     field=\"titulo\"      sortable style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                    <Column header=\"SOCIEDAD\"   field=\"codigo\"      sortable style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                    <Column header=\"DIRECCION\"  field=\"semestre\"    sortable style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                    <Column header=\"LINK\"       field=\"link\"        sortable style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                </Row>\r\n            </ColumnGroup>\r\n        )\r\n    }\r\n\r\n\r\n    const showHeader  = renderHeader();\r\n    const headerGroup = renderGroup();\r\n\r\n    return (\r\n        <div className=\"grid table-demo\">\r\n            <div className=\"col-12\">\r\n                <div className=\"card\">\r\n                    <DataTable value={convocatorias} className=\"p-datatable-gridlines p-datatable-striped p-datatable-sm p-datatable-customers\" dataKey=\"id\" rowHover\r\n                        paginator rows={10} rowsPerPageOptions={[5, 10, 25]} globalFilter={globalFilter} emptyMessage=\"No se encontraron empresas\" loading={loading} \r\n                        headerColumnGroup={headerGroup} >\r\n                        <Column style={{width:'20%'}} field=\"titulo\"    header=\"TITULO\"     sortable body={tituloBodyTemplate}    ></Column>\r\n                        <Column style={{width:'20%'}} field=\"codigo\"    header=\"CODIGO\"     sortable body={codigoBodyTemplate}    ></Column>\r\n                        <Column style={{width:'20%'}} field=\"semestre\"  header=\"SEMESTRE\"   sortable body={semestreBodyTemplate}  ></Column>\r\n                        <Column style={{width:'25%'}} field=\"link\"      header=\"LINK\"       sortable body={linkBodyTemplate}      ></Column>\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { DataTable }                  from 'primereact/datatable';\r\nimport { Column }                     from 'primereact/column';\r\nimport { Button }                     from 'primereact/button';\r\nimport { ColumnGroup }                from 'primereact/columngroup';\r\nimport { Row }                        from 'primereact/row';\r\nimport { InputText }                  from 'primereact/inputtext';\r\nimport { getPliegosPublicados}        from '../service/apiPliego';\r\n\r\nexport const ListPliego = (props) => {\r\n\r\n    const [pliegos, setPliegos]             = useState(null);\r\n    const [globalFilter, setGlobalFilter]   = useState('');\r\n    const [loading, setLoading]             = useState(true);\r\n\r\n    useEffect(()=>{\r\n        fetchPliegos();\r\n    },[])\r\n\r\n    const fetchPliegos = () =>{\r\n        getPliegosPublicados().then(json =>{\r\n            if(json.error){\r\n                console.log(\"Error\");\r\n            }else{\r\n                console.log(\"---------Pliegos insertados-----------\");\r\n                setPliegos(json.data);\r\n                setLoading(false);\r\n            }\r\n        })\r\n    }\r\n\r\n    const tituloBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Titulo</span>\r\n                {rowData.titulo}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const codigoBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Codigo</span>\r\n                {rowData.codigo}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const semestreBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Semestre</span>\r\n                {rowData.semestre}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const linkBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Link</span>\r\n                <Button label=\"Ver documento\" className=\"p-button-link\" onClick={() => window.open(`${rowData.link}`)} style={props.layoutColorMode === 'light' ? {'color':'#495057', 'font-weight': 'bold' , 'text-align': 'justify'} : {'color':'#ffffff', 'font-weight': 'bold' , 'text-align': 'justify'}}/>      \r\n            </>\r\n        );\r\n    }\r\n\r\n    const renderHeader = () => {\r\n        return (\r\n            <div className=\"flex flex-column md:flex-row md:justify-content-between md:align-items-center\">\r\n            <h5 className=\"m-0\">Lista de pliegos de especificaciones publicadas</h5>\r\n            <span className=\"block mt-2 md:mt-0 p-input-icon-left\">\r\n                <i className=\"pi pi-search\" />\r\n                <InputText type=\"search\" onInput={(e) => setGlobalFilter(e.target.value)} placeholder=\"Buscar...\" />\r\n            </span>\r\n        </div>\r\n        )\r\n    }\r\n\r\n    const renderGroup = () => {\r\n        return (\r\n            <ColumnGroup>\r\n                <Row>\r\n                    <Column header={showHeader} colSpan={4}></Column>\r\n                </Row>\r\n                <Row>\r\n                    <Column header=\"TITULO\"     field=\"titulo\"      sortable style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                    <Column header=\"SOCIEDAD\"   field=\"CODIGO\"      sortable style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                    <Column header=\"DIRECCION\"  field=\"SEMESTRE\"    sortable style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                    <Column header=\"LINK\"       field=\"LINK\"        sortable style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                </Row>\r\n            </ColumnGroup>\r\n        )\r\n    }\r\n\r\n\r\n    const showHeader  = renderHeader();\r\n    const headerGroup = renderGroup();\r\n\r\n    return (\r\n        <div className=\"grid table-demo\">\r\n            <div className=\"col-12\">\r\n                <div className=\"card\">\r\n                    <DataTable value={pliegos} className=\"p-datatable-gridlines p-datatable-striped p-datatable-sm p-datatable-customers\" dataKey=\"id\" rowHover\r\n                        paginator rows={10} rowsPerPageOptions={[5, 10, 25]} globalFilter={globalFilter} emptyMessage=\"No se encontraron empresas\" loading={loading} \r\n                        headerColumnGroup={headerGroup}  >\r\n                        <Column style={{width:'20%'}} field=\"titulo\"    header=\"TITULO\"     sortable body={tituloBodyTemplate}    ></Column>\r\n                        <Column style={{width:'20%'}} field=\"codigo\"    header=\"CODIGO\"     sortable body={codigoBodyTemplate}    ></Column>\r\n                        <Column style={{width:'20%'}} field=\"semestre\"  header=\"SEMESTRE\"   sortable body={semestreBodyTemplate}  ></Column>\r\n                        <Column style={{width:'25%'}} field=\"link\"      header=\"LINK\"       sortable body={linkBodyTemplate}      ></Column>\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport './styles.css';\r\n\r\nexport const Navegacion = () => {\r\n     return (  \r\n          <nav className=\"col-12 col-md-8\">\r\n               <Link to={'/'}>Todos los Foros</Link>\r\n               <Link to={'/crear'}>Nuevo Foro</Link>\r\n          </nav>\r\n     );\r\n}\r\n \r\n","import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport swal from 'sweetalert2';\r\n\r\nclass Post extends Component {\r\n\r\n    confirmarEliminacion = () => {\r\n\r\n            const {id} = this.props.info;\r\n\r\n            swal.fire({\r\n                title: 'Estas seguro??',\r\n                text: \"Esta acción no se puede deshacer!\",\r\n                type: 'warning',\r\n                showCancelButton: true,\r\n                confirmButtonColor: '#3085d6',\r\n                cancelButtonColor: '#d33',\r\n                confirmButtonText: 'Si, borrar!',\r\n                cancelButtonText : 'Cancelar'\r\n            }).then((result) => {\r\n                if (result.value) {\r\n                    this.props.borrarPost(id)\r\n                    swal.fire(\r\n                        'Eliminado!',\r\n                        'El post ha sido eliminado.',\r\n                        'success'\r\n                    )\r\n                }\r\n            })\r\n\r\n        \r\n    }\r\n\r\n     render() { \r\n\r\n          const {id, title} = this.props.info;\r\n\r\n          return (\r\n               <tr  >\r\n                    <td>{id}</td>\r\n                    <td>{title}</td>\r\n                    <td style={{'margin-left':'auto','margin-right':'auto'}}>\r\n\r\n                        \r\n                         <Link to={`/post/${id}`} class=\"p-button p-component p-button-rounded p-button-success mr-2 p-button-icon-only\" style={{'background': 'rgb(19, 175, 78'}}> Ver</Link>\r\n                         <Link to={`/editar/${id}`} class=\"p-button p-component p-button-rounded p-button-success mr-2 p-button-icon-only\" style={{'background': 'rgb(19, 175, 78'}}> \r\n                            <span class=\"p-button-icon p-c pi pi-pencil\"></span>\r\n                            <span class=\"p-button-label p-c\">&nbsp;</span>\r\n                            <span class=\"p-ink\" style={{'height': '50px', 'width': '50px', 'top': '-5.64062px', 'left': '-2px'}}></span>  \r\n                         </Link>\r\n                         \r\n                         <button onClick={ this.confirmarEliminacion }  class=\"p-button p-component p-button-rounded p-button-warning p-button-icon-only\" style={{'background': 'rgb(238, 229, 0)'}}>\r\n                             <span class=\"p-button-icon p-c pi pi-trash\"></span>\r\n                             <span class=\"p-button-label p-c\">&nbsp;</span>\r\n                             <span class=\"p-ink\" style={{'height': '38px', 'width': '38px', 'top': '4.85938px', 'left': '0.296875px'}}></span>\r\n                             </button>\r\n                         </td>\r\n               </tr>\r\n           );\r\n     }\r\n}\r\n \r\nexport default Post;","import React, { Component } from 'react';\r\nimport Post from './Post';\r\n\r\nexport class Listado extends Component {\r\n\r\n     mostrarPosts = () => {\r\n          const posts = this.props.posts;\r\n\r\n          if(posts.length === 0) return null;\r\n\r\n          return (\r\n               <React.Fragment>\r\n                    {Object.keys(posts).map(post => (\r\n                         <Post\r\n                              key={post}\r\n                              info={this.props.posts[post]}\r\n                              borrarPost={this.props.borrarPost}\r\n                         />\r\n                    ))}\r\n               </React.Fragment>\r\n          )\r\n     }\r\n     \r\n\r\n     render() { \r\n          return (\r\n               <table className=\"table\">\r\n                    <thead>\r\n                         <tr > \r\n                              <th style={{'background-color': 'rgb(19, 175, 78)', 'width': '5%'}} scope=\"col\">ID</th>\r\n                              <th style={{'background-color': 'rgb(19, 175, 78)', 'width': '50%'}} scope=\"col\">Titulo</th>\r\n                              <th style={{'background-color': 'rgb(19, 175, 78)', 'width': '10%'}} scope=\"col\">Acciones</th>\r\n                         </tr> \r\n                    </thead>\r\n                    <tbody>\r\n                         {this.mostrarPosts() }\r\n                    </tbody>\r\n               </table>\r\n           )\r\n     }\r\n}\r\n \r\n","import React, { Component } from 'react';\r\nimport {Listado} from './Listado';\r\n\r\nexport class Posts extends Component {\r\n     state = {  }\r\n     render() { \r\n          return (\r\n               <div className=\"col-12 col-md-8\">\r\n                   \r\n                    <Listado \r\n                         posts={this.props.posts}\r\n                         borrarPost={this.props.borrarPost}\r\n                    />\r\n               </div>\r\n           );\r\n     }\r\n}\r\n \r\n","import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport swal from 'sweetalert2';\r\nimport './styles.css';\r\n\r\nexport class MostarComent extends Component {\r\n\r\n   \r\n\r\n     render() { \r\n\r\n          const {id, name,body,email} = this.props.info;\r\n\r\n          return (\r\n               <>\r\n\r\n                    <div className='contenedorComentario'>\r\n                         <div className=\"contenidoComentario\">\r\n                              {/*<h2>{id}</h2>*/}\r\n                              <div className='usuario' >\r\n                                   <p >nombre : {name} </p>\r\n                                   <p>   email: {email}</p>\r\n\r\n                              </div>\r\n                              <hr className='separarUsuario'/>\r\n                              <p>{body}</p>\r\n\r\n                         </div>\r\n\r\n                    </div>\r\n                    <br/>\r\n                    <hr/>\r\n\r\n               </>\r\n           );\r\n     }\r\n}\r\n \r\n","import React, { Component } from 'react';\r\nimport Post from './Post';\r\nimport { MostarComent } from './MostrarComent';\r\n\r\nexport class ListadoCometario extends Component {\r\n\r\n     mostrarPosts = () => {\r\n          const comment = this.props.comment;\r\n\r\n          if(comment.length === 0) return null;\r\n\r\n          return (\r\n               <React.Fragment>\r\n                    {Object.keys(comment).map(comm => (\r\n                         <>\r\n                         \r\n                         <MostarComent\r\n                              key={comm}\r\n                              info={this.props.comment[comm]}\r\n                              usuario={this.props.usuario}\r\n                             // borrarPost={this.props.borrarPost}\r\n                         />\r\n                         </>\r\n                     \r\n                    ))}\r\n               </React.Fragment>\r\n          )\r\n     }\r\n     \r\n\r\n     render() { \r\n          return (\r\n               \r\n           \r\n           \r\n                    <div>\r\n                         {this.mostrarPosts() }\r\n                    </div>\r\n               \r\n           )\r\n     }\r\n}\r\n \r\n","import React, { Component } from 'react';\r\nimport './styles.css'\r\n\r\nexport class FormularioComentario extends Component {\r\n\r\n     // crear los refs\r\n     tituloRef = React.createRef();\r\n     entradaRef = React.createRef();\r\n\r\n     crearPost = (e) => {\r\n          e.preventDefault();\r\n\r\n          // leer los refs\r\n          const post = {\r\n               name:\"cesar\",\r\n               email:\"cesar@gmail.com\",\r\n               body: this.entradaRef.current.value,\r\n               userId: 1\r\n          }\r\n\r\n          // console.log(post);\r\n\r\n          // enviar por props o petición de axios\r\n          this.props.crearComentario(post);\r\n     }\r\n\r\n     render() {  \r\n          return ( \r\n\r\n               <form onSubmit={this.crearPost} className=\"col-8\">\r\n                    <legend className=\"text-center\">Crear Nuevo Comentario</legend>\r\n                    <div className=\"form-group\">\r\n                  \r\n                         <textarea className=\"texarea\" ref={this.entradaRef}  placeholder=\"Escribe un comentario...\"></textarea>\r\n                    </div>\r\n                    \r\n                    <button type=\"submit\" class=\"p-button p-component p-button-success p-mr-2\" style={{'color': 'rgb(255, 255, 255)', 'background': 'rgb(19, 175, 78)'}}>\r\n                         \r\n                         <span class=\"p-button-label p-c\">Comentar</span>\r\n                         <span class=\"p-ink\" style={{'height': '104px', 'width': '104px', 'top': '-31px', 'left': '20px'}}></span>\r\n                         </button>\r\n               </form>\r\n           );\r\n     }\r\n}\r\n \r\n","import React, { Component } from 'react';\r\nimport {ListadoCometario}from './ListadoCometario'\r\nimport { FormularioComentario } from './FormularioComentario';\r\nimport swal from 'sweetalert2'\r\n\r\nimport axios from 'axios';\r\n\r\nexport class Comentario extends Component{\r\n  \r\n    \r\n\r\n    render(){\r\n\r\n        return(\r\n            <>\r\n                <div className=\"col-12 col-md-8\">\r\n                    <h2 className=\"text-center\">Comentarios</h2>\r\n\r\n                    <ListadoCometario\r\n                        comment={this.props.comment}\r\n                        usuario={this.props.usuario}\r\n                    //borrarPost={this.props.borrarPost}\r\n                    />\r\n                    <FormularioComentario\r\n\r\n                        comment={this.props.comment}\r\n                        usuario={this.props.usuario}\r\n                        crearComentario={this.props.crearComentario}\r\n                    />\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Comentario } from './Comentario';\r\nimport swal from 'sweetalert2';\r\nimport './styles.css';\r\n\r\nimport axios from 'axios';\r\n\r\n\r\n\r\n\r\nexport class SinglePost extends Component {\r\n     state = { \r\n          comment: []\r\n          \r\n      }\r\n\r\n     componentDidMount() {\r\n          this.obtenerComment();\r\n          \r\n     }\r\n     obtenerComment = () => {\r\n          axios.get(`https://jsonplaceholder.typicode.com/comments`)\r\n               .then(res => {\r\n                    let aux=[]\r\n                 res.data.forEach(element => {\r\n\r\n                      if(element.postId=== 1){\r\n                          aux.push(element);\r\n                         console.log(element)\r\n                      }\r\n                 });\r\n                   \r\n              console.log(aux)\r\n              this.setState({\r\n                   comment:aux\r\n              })\r\n               })\r\n\r\n              \r\n     }\r\n     crearComentario = (comm) => {\r\n          axios.post(`https://jsonplaceholder.typicode.com/comments`, {comm})\r\n                 .then(res => {\r\n                     if(res.status === 201) {\r\n\r\n                         let postId = {id: res.data.id};\r\n                        const nuevoPost = Object.assign({}, res.data.comm, postId);\r\n  \r\n                        this.setState(prevState => ({\r\n                          comment: [...prevState.comment, nuevoPost]\r\n                        }))\r\n                     }\r\n                 })\r\n      }\r\n\r\n\r\n\r\n\r\n     mostrarPost = (props, cc) => {\r\n          if(!props.post) return null;\r\n          const {title, body, userId, id } = this.props.post;\r\n\r\n          return (\r\n               <React.Fragment>\r\n                    <div className='contenedorForo'>\r\n                         <h1>{title}</h1>\r\n                         <p>Autor: {userId}</p>\r\n                         {body}\r\n\r\n                    </div>\r\n\r\n                    \r\n                    <Comentario comment={this.state.comment} usuario={this.props.post} crearComentario={this.crearComentario}/>  \r\n               </React.Fragment>\r\n          )\r\n     }\r\n\r\n\r\n     render() { \r\n\r\n          return (\r\n               <>\r\n                    <div className=\"col-12 col-md-8\">\r\n                         \r\n                         {this.mostrarPost(this.props, this.crearComentario)}\r\n                         \r\n                    \r\n                    </div>\r\n                    \r\n                   \r\n               </>\r\n\r\n          );\r\n     }\r\n}\r\n ","import React, { Component } from 'react';\r\nimport './styles.css'\r\n\r\nexport class Formulario extends Component {\r\n\r\n     // crear los refs\r\n     tituloRef = React.createRef();\r\n     entradaRef = React.createRef();\r\n\r\n     crearPost = (e) => {\r\n          e.preventDefault();\r\n\r\n          // leer los refs\r\n          const post = {\r\n               title : this.tituloRef.current.value,\r\n               body: this.entradaRef.current.value,\r\n               userId: 1\r\n          }\r\n\r\n          // console.log(post);\r\n\r\n          // enviar por props o petición de axios\r\n          this.props.crearPost(post);\r\n     }\r\n\r\n     render() {  \r\n          return ( \r\n\r\n               <form onSubmit={this.crearPost} className=\"col-8\">\r\n                    <legend className=\"text-center\">Crear Nuevo Foro</legend>\r\n                    <div className=\"\">\r\n                         <label>Titulo del Foro:</label>\r\n                         <input type=\"text\" ref={this.tituloRef} className=\"textareaTitle\" placeholder=\"Titulo del Foro\"/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                         <label>Contenido: </label>\r\n                         <textarea className=\"texarea\" ref={this.entradaRef}  placeholder=\"Contenido...\"></textarea>\r\n                    </div>\r\n                    \r\n                    <button type=\"submit\" class=\"p-button p-component p-button-success p-mr-2\" style={{'color': 'rgb(255, 255, 255)', 'background': 'rgb(19, 175, 78)'}}>\r\n                         \r\n                         <span class=\"p-button-label p-c\">Crear</span>\r\n                         <span class=\"p-ink\" style={{'height': '104px', 'width': '104px', 'top': '-31px', 'left': '20px'}}></span>\r\n                         </button>\r\n               </form>\r\n           );\r\n     }\r\n}\r\n \r\n","import React, { Component } from 'react';\r\nimport './styles.css'\r\n\r\nexport class Editar extends Component {\r\n\r\n     // crear los refs\r\n     tituloRef = React.createRef();\r\n     entradaRef = React.createRef();\r\n\r\n     editarPost = (e) => {\r\n          e.preventDefault();\r\n\r\n          // leer los refs\r\n          const post = {\r\n               title : this.tituloRef.current.value,\r\n               body: this.entradaRef.current.value,\r\n               userId: 1,\r\n               id: this.props.post.id\r\n          }\r\n\r\n          // console.log(post);\r\n\r\n          // enviar por props o petición de axios\r\n           this.props.editarPost(post);\r\n     }\r\n\r\n     cargarFormulario = () => {\r\n\r\n          if(!this.props.post) return null;\r\n\r\n          const {title, body} = this.props.post;\r\n\r\n          return(\r\n               <form onSubmit={this.editarPost} className=\"col-8\">\r\n                    <legend className=\"text-center\">Editar foro</legend>\r\n                    <div className=\"form-group\">\r\n                         <label>Titulo del Foro:</label>\r\n                         <input  type=\"text\" ref={this.tituloRef} className=\"textareaTitle\" defaultValue={title} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                         <label>Contenido: </label>\r\n                         <textarea className=\"texarea\"  ref={this.entradaRef}  defaultValue={body} ></textarea>\r\n                    </div>\r\n                    <button type=\"submit\" class=\"p-button p-component p-button-success p-mr-2\" style={{'color': 'rgb(255, 255, 255)', 'background': 'rgb(19, 175, 78)'}}>\r\n                         \r\n                         <span class=\"p-button-label p-c\">Guardar Cambios</span>\r\n                         <span class=\"p-ink\" style={{'height': '104px', 'width': '104px', 'top': '-31px', 'left': '20px'}}></span>\r\n                    </button>\r\n               </form>\r\n          )\r\n     }\r\n\r\n     render() { \r\n\r\n          \r\n          return ( \r\n               <React.Fragment>\r\n                    { this.cargarFormulario() }\r\n               </React.Fragment>\r\n           );\r\n     }\r\n}\r\n \r\n","import React, { Component } from 'react';\r\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport swal from 'sweetalert2'\r\n\r\nimport {Navegacion} from './foro/Navegacion';\r\nimport {Posts} from './foro/Posts';\r\nimport {SinglePost} from './foro/SinglePost';\r\nimport {Formulario} from './foro/Formulario';\r\nimport {Editar} from './foro/Editar';\r\nimport { Toast }            from 'primereact/toast';\r\n\r\nexport class Forum extends Component {\r\n     state = { \r\n          posts: []\r\n      }\r\n      componentDidMount() {\r\n           this.obtenerPost();\r\n      }\r\n\r\n     obtenerPost = () => {\r\n          axios.get(`https://jsonplaceholder.typicode.com/posts`)\r\n               .then(res => {\r\n                    this.setState({\r\n                         posts: res.data\r\n                    })\r\n               })\r\n     }\r\n\r\n     borrarPost = (id) => {\r\n          axios.delete(`https://jsonplaceholder.typicode.com/posts/${id}`)\r\n               .then(res=>{\r\n                    if(res.status === 200) {\r\n                         const posts = [...this.state.posts];\r\n                         \r\n                         let resultado = posts.filter(post => (\r\n                              post.id != id\r\n                         ));\r\n                         this.setState({\r\n                              posts: resultado\r\n                         })\r\n                    }\r\n               })\r\n     }\r\n\r\n     crearPost = (post) => {\r\n         axios.post(`https://jsonplaceholder.typicode.com/posts`, {post})\r\n                .then(res => {\r\n                    if(res.status === 201) {\r\n                        swal.fire(\r\n                            'Post Creado',\r\n                            'Se creo correctamente',\r\n                            'success'\r\n                        \r\n                        )\r\n                        let postId = {id: res.data.id};\r\n                       const nuevoPost = Object.assign({}, res.data.post, postId);\r\n\r\n                       this.setState(prevState => ({\r\n                           posts: [...prevState.posts, nuevoPost]\r\n                       }))\r\n                    }\r\n                })\r\n     }\r\n\r\n     editarPost = (postActualizado) => {\r\n        //  console.log(postActualizado);\r\n\r\n         const {id} = postActualizado;\r\n\r\n         axios.put(`https://jsonplaceholder.typicode.com/posts/${id}`, {postActualizado})\r\n            .then(res => {\r\n                if(res.status === 200) {\r\n\r\n                    swal.fire(\r\n                        'Post Actualizado',\r\n                        'Se guardó correctamente',\r\n                        'success'\r\n                    )\r\n\r\n                    let postId = res.data.id;\r\n\r\n                    const posts = [...this.state.posts];\r\n\r\n                    const postEditar = posts.findIndex(post => postId === post.id );\r\n\r\n                    posts[postEditar] = postActualizado;\r\n\r\n                    this.setState({\r\n                        posts\r\n                    })\r\n                }\r\n            })\r\n     }\r\n\r\n     render() { \r\n          return ( \r\n               <BrowserRouter>\r\n                    <div className=\"container\">\r\n                         <div className=\"row justify-content-center\">\r\n                             \r\n                              <Navegacion/>\r\n                              <Switch>\r\n                                   <Route exact path=\"/\" render={ () => {\r\n                                        return(\r\n                                             <Posts \r\n                                                  posts={this.state.posts}\r\n                                                  borrarPost={this.borrarPost}\r\n                                             />\r\n                                        )\r\n                                   }}\r\n                                   />\r\n                                   <Route exact path=\"/post/:postId\" render={ (props) => {\r\n                                        let idPost = props.location.pathname.replace('/post/', '');\r\n\r\n                                        const posts = this.state.posts;\r\n\r\n                                        let filtro;\r\n                                        filtro = posts.filter(post => (\r\n                                             post.id === Number(idPost)\r\n                                        ))\r\n                                        return(\r\n                                             <SinglePost\r\n                                                  post={filtro[0]}\r\n                                             />\r\n                                        )\r\n                                   } }\r\n                                   />\r\n\r\n                                   <Route exact path=\"/crear\" render={ () => {\r\n                                            return(\r\n                                                <Formulario \r\n                                                    crearPost={this.crearPost}\r\n                                                />\r\n                                            )\r\n                                    }}\r\n                                    />\r\n                                    <Route exact path=\"/editar/:postId\" render={ (props) => {\r\n                                        let idPost = props.location.pathname.replace('/editar/', '');\r\n\r\n                                        const posts = this.state.posts;\r\n\r\n                                        let filtro;\r\n                                        filtro = posts.filter(post => (\r\n                                             post.id === Number(idPost)\r\n                                        ))\r\n                                        return(\r\n                                             <Editar\r\n                                                  post={filtro[0]}\r\n                                                  editarPost={this.editarPost}\r\n                                             />\r\n                                        )\r\n                                   } }\r\n                                   />\r\n\r\n                              </Switch>\r\n                         </div>\r\n                    </div>\r\n               </BrowserRouter>\r\n           );\r\n     }\r\n}\r\n \r\n","import axios from 'axios';\r\n\r\n export const getContratos = () =>{\r\n     return axios.get('https://magic-tech-backend.herokuapp.com/api/getContratos');\r\n }\r\n\r\n export const getContratoId =(id) =>{\r\n     return axios.get(`https://magic-tech-backend.herokuapp.com/api/getContratoId/${id}`);\r\n }\r\n\r\n\r\n\r\n export const createContrato=(data)=>{\r\n    return axios.post('https://magic-tech-backend.herokuapp.com/api/createContrato', \r\n      {\r\n         id:                 `${data.id}`,\r\n         fecha:              `${data.fecha}`,\r\n         codigoConvocatoria: `${data.codigoConvocatoria}`,\r\n         codigoPliego:       `${data.codigoPliego}`,\r\n         estado:             `${data.estado}`,\r\n         empresa:            `${data.empresa}`,\r\n         user:               `${data.user}`\r\n       \r\n      }\r\n      )\r\n      .then(function (response) {\r\n        console.log(response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n }\r\n\r\nexport const updateContratoID =(data,id) =>{\r\n    return axios.put(`https://magic-tech-backend.herokuapp.com/api/updateContrato/${id}`, \r\n    {\r\n        fecha:              `${data.fecha}`,\r\n        codigoConvocatoria: `${data.codigoConvocatoria}`,\r\n        codigoPliego:       `${data.codigoPliego}`,\r\n        estado:             `${data.estado}`,\r\n        empresa:            `${data.empresa}`,\r\n        user:               `${data.user}`\r\n    }\r\n    )\r\n    .then(function (response) {\r\n      console.log(response);\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error);\r\n    });\r\n}\r\n\r\nexport const deleteContratoID =(id) =>{\r\n    return axios.delete(`https://magic-tech-backend.herokuapp.com/api/deleteContratoId/${id}`);\r\n}\r\n\r\nexport const getContratosActivas = () =>{\r\n  return axios.get('https://magic-tech-backend.herokuapp.com/api/getContratosActivas');\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport classNames           from 'classnames';\r\nimport { DataTable }        from 'primereact/datatable';\r\nimport { Column }           from 'primereact/column';\r\nimport { Toast }            from 'primereact/toast';\r\nimport { Button }           from 'primereact/button';\r\nimport { Toolbar }          from 'primereact/toolbar';\r\nimport { Dialog }           from 'primereact/dialog';\r\nimport { InputText }        from 'primereact/inputtext';\r\nimport { InputTextarea }    from 'primereact/inputtextarea';\r\nimport { Password }         from 'primereact/password';\r\nimport { ColumnGroup }      from 'primereact/columngroup';\r\nimport { Calendar }         from 'primereact/calendar';\r\nimport { Row }              from 'primereact/row';\r\nimport { Dropdown }         from 'primereact/dropdown';\r\nimport { addLocale }        from 'primereact/api';\r\nimport { useFormik }        from \"formik\";\r\nimport { Link }             from 'react-router-dom';\r\nimport { renderToString }   from 'react-dom/server';\r\nimport jsPDF                from 'jspdf';\r\nimport 'jspdf-autotable';\r\n\r\nimport uniqid               from 'uniqid';\r\n\r\nimport { getContratos,createContrato,updateContratoID} from '../service/apiContrato';\r\nimport { getUsersActivas    } from '../service/apiUser';\r\nimport { getEmpresasActivas,getEmpresaID } from '../service/apiEmpresa';\r\nimport { getConvocatoriasPublicados    } from '../service/apiConvocatoria';\r\nimport { getPliegosPublicados }          from '../service/apiPliego';\r\n\r\nexport const Contrato = (props) => {\r\n\r\n    let emptyContrato = {\r\n        id:                 null,\r\n        fecha:              '',\r\n        codigoConvocatoria: '',\r\n        codigoPliego:       '',\r\n        estado:             '',\r\n        empresa:            '',\r\n        user:               ''\r\n    };\r\n\r\n\r\n    const estados = [\r\n        { name: \"Activo\"      },\r\n        { name: \"Desactivado\" }\r\n    ];\r\n\r\n    addLocale('es', {\r\n        firstDayOfWeek: 1,\r\n        dayNames: ['domingo', 'lunes', 'martes', 'miércoles', 'jueves', 'viernes', 'sábado'],\r\n        dayNamesShort: ['dom', 'lun', 'mar', 'mié', 'jue', 'vie', 'sáb'],\r\n        dayNamesMin: ['D', 'L', 'M', 'X', 'J', 'V', 'S'],\r\n        monthNames: ['enero', 'febrero', 'marzo', 'abril', 'mayo', 'junio', 'julio', 'agosto', 'septiembre', 'octubre', 'noviembre', 'diciembre'],\r\n        monthNamesShort: ['ene', 'feb', 'mar', 'abr', 'may', 'jun', 'jul', 'ago', 'sep', 'oct', 'nov', 'dic'],\r\n        today: 'Hoy',\r\n        clear: 'Claro'\r\n    });\r\n\r\n    const [contratos, setContratos]                          = useState(null);\r\n    const [users, setUsers]                                  = useState(null);\r\n    const [empresas, setEmpresas]                            = useState(null);\r\n\r\n    const [convocatorias, setConvocatorias]                  = useState(null);\r\n    const [pliegos, setPliegos]                              = useState(null);\r\n    const [globalFilter, setGlobalFilter]                    = useState('');\r\n    const [loading, setLoading]                              = useState(true);\r\n    const [contratoDialog, setContratoDialog]                = useState(false);\r\n    const [deleteContratoDialog, setDeleteContratoDialog]    = useState(false);\r\n\r\n    const [contrato, setContrato]                            = useState(emptyContrato);\r\n    const [selectedContratos, setSelectedContratos]          = useState(null);\r\n    const [submitted, setSubmitted]                          = useState(false);\r\n    const toast                                              = useRef(null);\r\n    const dt                                                 = useRef(null);\r\n    const [stateContrato,setStateContrato]                   = useState(false);\r\n    const [contratoUpdate, setContratoUpdate]                = useState(\"\");\r\n    const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\r\n\r\n    let today = new Date();\r\n    let month = today.getMonth();\r\n    let year = today.getFullYear();\r\n    let prevMonth = (month === 0) ? 11 : month - 0;\r\n    let prevYear = (prevMonth === 11) ? year - 0 : year;\r\n    let nextMonth = (month === 11) ? 0 : month + 1;\r\n    let nextYear = (nextMonth === 0) ? year + 1 : year;\r\n\r\n    let minDate = new Date();\r\n    minDate.setMonth(prevMonth);\r\n    minDate.setFullYear(prevYear);\r\n\r\n    let maxDate = new Date();\r\n    maxDate.setMonth(nextMonth);\r\n    maxDate.setFullYear(nextYear);\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            fecha:              '',\r\n            codigoConvocatoria: '',\r\n            codigoPliego:       '',\r\n            estado:             '',\r\n            empresa:            '',\r\n            user:               ''\r\n        },\r\n         validate: (data) => {\r\n            let errors = {};\r\n\r\n            if(stateContrato){\r\n                if (!data.fecha) {\r\n                    errors.fecha = \"Se requiere la fecha\";\r\n                } \r\n\r\n                if (!data.codigoConvocatoria) {\r\n                    errors.codigoConvocatoria = \"Se requiere el codigo de la convocatoria\";\r\n                } else if (data.codigoConvocatoria.length < 2) {\r\n                    errors.codigoConvocatoria = \"Como minimo 2 caracteres\";\r\n                } else if (data.codigoConvocatoria.length > 30) {\r\n                    errors.codigoConvocatoria = \"Como maximo 30 caracteres\";\r\n                }\r\n\r\n                if (!data.codigoPliego) {\r\n                    errors.codigoPliego = \"Se requiere el codigo del pliego de espeficicaciones\";\r\n                } else if (data.codigoPliego.length < 2) {\r\n                    errors.codigoPliego = \"Como minimo 2 caracteres\";\r\n                } else if (data.codigoPliego.length > 30) {\r\n                    errors.codigoPliego = \"Como maximo 30 caracteres\";\r\n                }\r\n\r\n                if (!data.estado) {\r\n                    errors.estado = \"Se requiere el estado\";\r\n                } else if (data.estado.length < 2) {\r\n                    errors.estado = \"Como minimo 2 caracteres\";\r\n                } else if (data.estado.length > 30) {\r\n                    errors.estado = \"Como maximo 30 caracteres\";\r\n                } else if (!/^^[a-zA-Z\\s]+$/i.test(data.estado)) {\r\n                    errors.estado = \"No se permiten numero o caracteres especiales\";\r\n                }\r\n                \r\n                if (!data.empresa) {\r\n                    errors.empresa = \"Se requiere la empresa\";\r\n                } else if (data.empresa.length < 2) {\r\n                    errors.empresa = \"Como minimo 2 caracteres\";\r\n                } else if (data.empresa.length > 30) {\r\n                    errors.empresa = \"Como maximo 30 caracteres\";\r\n                }else if (!/^^[a-zA-Z0-9\\s-]+$/i.test(data.empresa)) {\r\n                    errors.empresa = \"No se permiten numero o caracteres especiales\";\r\n                }\r\n\r\n                if (!data.user) {\r\n                    errors.user = \"Se requiere el usuario\";\r\n                } else if (data.user.length < 2) {\r\n                    errors.user = \"Como minimo 2 caracteres\";\r\n                } else if (data.user.length > 30) {\r\n                    errors.user = \"Como maximo 30 caracteres\";\r\n                }else if (!/^^[a-zA-Z0-9\\s-]+$/i.test(data.user)) {\r\n                    errors.user = \"No se permiten numero o caracteres especiales\";\r\n                }\r\n\r\n            }else{\r\n                if (!data.fecha) {\r\n                    errors.fecha = \"Se requiere la fecha\";\r\n                }\r\n\r\n                if (!data.codigoConvocatoria) {\r\n                    errors.codigoConvocatoria = \"Se requiere el codigo de la convocatoria\";\r\n                } else if (data.codigoConvocatoria.length < 2) {\r\n                    errors.codigoConvocatoria = \"Como minimo 2 caracteres\";\r\n                } else if (data.codigoConvocatoria.length > 30) {\r\n                    errors.codigoConvocatoria = \"Como maximo 30 caracteres\";\r\n                }\r\n\r\n                if (!data.codigoPliego) {\r\n                    errors.codigoPliego = \"Se requiere el codigo del pliego de espeficicaciones\";\r\n                } else if (data.codigoPliego.length < 2) {\r\n                    errors.codigoPliego = \"Como minimo 2 caracteres\";\r\n                } else if (data.codigoPliego.length > 30) {\r\n                    errors.codigoPliego = \"Como maximo 30 caracteres\";\r\n                }\r\n                \r\n                if (!data.empresa) {\r\n                    errors.empresa = \"Se requiere la empresa\";\r\n                } else if (data.empresa.length < 2) {\r\n                    errors.empresa = \"Como minimo 2 caracteres\";\r\n                } else if (data.empresa.length > 30) {\r\n                    errors.empresa = \"Como maximo 30 caracteres\";\r\n                }else if (!/^^[a-zA-Z0-9\\s-]+$/i.test(data.empresa)) {\r\n                    errors.empresa = \"No se permiten numero o caracteres especiales\";\r\n                }\r\n\r\n                if (!data.user) {\r\n                    errors.user = \"Se requiere el usuario\";\r\n                } else if (data.user.length < 2) {\r\n                    errors.user = \"Como minimo 2 caracteres\";\r\n                } else if (data.user.length > 30) {\r\n                    errors.user = \"Como maximo 30 caracteres\";\r\n                }else if (!/^^[a-zA-Z0-9\\s-]+$/i.test(data.user)) {\r\n                    errors.user = \"No se permiten numero o caracteres especiales\";\r\n                }\r\n\r\n            }\r\n\r\n            return errors;\r\n        },\r\n\r\n        onSubmit: (data) => {\r\n            if(submitted === true){\r\n                let _contratos = [...contratos];\r\n                let _contrato  = {...contrato };\r\n                console.log(data.fecha);\r\n                let dat = new Date(data.fecha);\r\n                let convertido = dat.toLocaleDateString(undefined, options);\r\n                _contrato['fecha']              = convertido;\r\n                _contrato['codigoConvocatoria'] = data.codigoConvocatoria;\r\n                _contrato['codigoPliego']       = data.codigoPliego;\r\n                _contrato['estado']             = data.estado;\r\n                _contrato['empresa']            = data.empresa;\r\n                _contrato['user']               = data.user;\r\n\r\n                if (_contrato.codigoConvocatoria.trim()) {\r\n                    if (contrato.id) {\r\n\r\n                        setContrato({ ...contrato });\r\n                        const index = findIndexById(contrato.id);\r\n                        _contratos[index] = _contrato;\r\n\r\n                        updateContratoID({fecha:`${_contrato.fecha}`,codigoConvocatoria:`${_contrato.codigoConvocatoria}`,codigoPliego:`${_contrato.codigoPliego}`,estado:`${_contrato.estado}`,empresa:`${_contrato.empresa}`,user:`${_contrato.user}`},contrato.id);\r\n                        toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Contrato Actualizado', life: 3000 });\r\n                    }\r\n                    else {\r\n\r\n                        _contrato.id        = uniqid(\"cont-\");\r\n                        _contrato.estado    = \"Activo\"; \r\n                        _contratos.push(_contrato);\r\n                \r\n                        createContrato({id:`${_contrato.id}`,fecha:`${_contrato.fecha}`,codigoConvocatoria:`${_contrato.codigoConvocatoria}`,codigoPliego:`${_contrato.codigoPliego}`,estado:`${_contrato.estado}`,empresa:`${_contrato.empresa}`,user:`${_contrato.user}`});\r\n                        toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Contrato Creado', life: 3000 });\r\n                    }\r\n                }\r\n                setContratos(_contratos);\r\n                setContratoDialog(false);\r\n                setContrato(emptyContrato);\r\n                formik.resetForm();\r\n        }\r\n            \r\n        },\r\n      });\r\n\r\n    const isFormFieldValid = (name) => !!(formik.touched[name] && formik.errors[name]);\r\n    const getFormErrorMessage = (name) => {\r\n        return isFormFieldValid(name) && <small className=\"ml-1 p-error\" style={{'color': '#ff0000'}}>{formik.errors[name]}</small>;\r\n    };\r\n\r\n    useEffect(()=>{\r\n        fetchContratos();\r\n    },[])\r\n\r\n    const fetchContratos = () =>{\r\n        getContratos().then(json =>{\r\n            if(json.error){\r\n                console.log(\"Error\");\r\n            }else{\r\n                console.log(\"---------Contratos insertados-----------\");\r\n                setContratos(json.data);\r\n                setLoading(false);\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        fetchUsers();\r\n    },[])\r\n\r\n    const fetchUsers = () =>{\r\n        getUsersActivas().then(json =>{\r\n            if(json.error){\r\n                console.log(\"Error\");\r\n            }else{\r\n                console.log(\"---------Users insertados-----------\");\r\n                setUsers(json.data);\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        fetchEmpresas();\r\n    },[])\r\n\r\n    const fetchEmpresas = () =>{\r\n        getEmpresasActivas().then(json =>{\r\n            if(json.error){\r\n                console.log(\"Error\");\r\n            }else{\r\n                console.log(\"---------Empresas insertadas-----------\");\r\n                setEmpresas(json.data);\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        fetchConvocatorias();\r\n    },[])\r\n\r\n    const fetchConvocatorias = () =>{\r\n        getConvocatoriasPublicados().then(json =>{\r\n            if(json.error){\r\n                console.log(\"Error\");\r\n            }else{\r\n                console.log(\"---------Convocatorias insertadas-----------\");\r\n                setConvocatorias(json.data);\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        fetchPliegos();\r\n    },[])\r\n\r\n    const fetchPliegos = () =>{\r\n        getPliegosPublicados().then(json =>{\r\n            if(json.error){\r\n                console.log(\"Error\");\r\n            }else{\r\n                console.log(\"---------Pliegos insertados-----------\");\r\n                setPliegos(json.data);\r\n            }\r\n        })\r\n    }\r\n\r\n    \r\n\r\n    const openNew = () => {\r\n        setContrato(emptyContrato);\r\n        formik.resetForm();\r\n        setSubmitted(false);\r\n        setStateContrato(false); \r\n        setContratoDialog(true);    \r\n    }\r\n\r\n    const hideDialog = () => {\r\n        setSubmitted(false);\r\n        setContratoDialog(false);\r\n    }\r\n\r\n    const showDialog = () => {\r\n        setSubmitted(true);\r\n        formik.handleSubmit();\r\n    }\r\n\r\n    const hideDeleteContratoDialog = () => {\r\n        setDeleteContratoDialog(false);\r\n    }\r\n\r\n    const editContratto = (contrato) => {\r\n        setContrato({ ...contrato });\r\n        setSubmitted(true);\r\n\r\n        formik.resetForm();\r\n        formik.setValues(\r\n        {\r\n            fecha:              `${contrato.fecha}`,\r\n            codigoConvocatoria: `${contrato.codigoConvocatoria}`,\r\n            codigoPliego:       `${contrato.codigoPliego}`,\r\n            estado:             `${contrato.estado}`,\r\n            empresa:            `${contrato.empresa}`,\r\n            user:               `${contrato.user}`\r\n        });\r\n        setContratoUpdate(`${contrato.codigoConvocatoria}`);\r\n        setStateContrato(true);\r\n        setContratoDialog(true);\r\n    }\r\n\r\n    const confirmDeleteContrato = (contrato) => {\r\n        setContrato(contrato);\r\n        setDeleteContratoDialog(true);\r\n    }\r\n\r\n    const deleteContrato = () => {\r\n        let _contratos = [...contratos];\r\n        let _contrato  = {...contrato };\r\n        \r\n\r\n        if (contrato.codigoConvocatoria.trim()) {\r\n            if (contrato.id) {\r\n\r\n                \r\n                const index = findIndexById(contrato.id);\r\n                _contratos[index] = _contrato;\r\n                updateContratoID({fecha:`${_contrato.fecha}`,codigoConvocatoria:`${_contrato.codigoConvocatoria}`,codigoPliego:`${_contrato.codigoPliego}`,estado:\"Desactivado\",empresa:`${_contrato.empresa}`,user:`${_contrato.user}`},contrato.id);\r\n                _contrato['fecha']              = _contrato.fecha;\r\n                _contrato['codigoConvocatoria'] = _contrato.codigoConvocatoria;\r\n                _contrato['codigoPliego']       = _contrato.codigoPliego;\r\n                _contrato['estado']             = \"Desactivado\";\r\n                _contrato['empresa']            = _contrato.empresa;\r\n                _contrato['user']               = _contrato.user;\r\n                setContrato({ ...contrato });\r\n                toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Contrato desactivado', life: 3000 });\r\n            }\r\n        }\r\n        setContratos(_contratos);\r\n        setContrato(emptyContrato);\r\n        setDeleteContratoDialog(false);\r\n        \r\n    }\r\n\r\n    const findIndexById = (id) => {\r\n        let index = -1;\r\n        for (let i = 0; i < contratos.length; i++) {\r\n            if (contratos[i].id === id) {\r\n\r\n                index = i;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return index;\r\n    }\r\n\r\n    const findIndexByIdEmpresa = (id) => {\r\n        let data;\r\n        for (let i = 0; i < empresas.length; i++) {\r\n            if (empresas[i].id === id) {\r\n                data = {\r\n                    id:              empresas[i].id,\r\n                    nombre:          empresas[i].nombre,\r\n                    nombreCorto:     empresas[i].nombreCorto,\r\n                    nombreLargo:     empresas[i].nombreLargo,\r\n                    tipoSociedad:    empresas[i].tipoSociedad,\r\n                    direccion:       empresas[i].direccion,\r\n                    email:           empresas[i].direccion,\r\n                    password:        empresas[i].password,\r\n                    informacion:     empresas[i].informacion,\r\n                    estado:          empresas[i].estado,\r\n                    user:            empresas[i].user\r\n                }\r\n\r\n                break;\r\n            }\r\n        }\r\n        return data;\r\n    }\r\n\r\n    const findIndexByIdUser = (id) => {\r\n        let data;\r\n        for (let i = 0; i < users.length; i++) {\r\n            if (users[i].id === id) {\r\n                data = {\r\n                    id:       users[i].id,\r\n                    nombre:   users[i].nombre,\r\n                    apellido: users[i].apellido,\r\n                    email:    users[i].email,\r\n                    password: users[i].password,\r\n                    estado:   users[i].estado,\r\n                    rol:      users[i].rol\r\n                }\r\n\r\n                break;\r\n            }\r\n        }\r\n        return data;\r\n    }\r\n\r\n    const idBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">id</span>\r\n                {rowData.id}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const fechaBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Fecha</span>\r\n                {rowData.fecha}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const codigoConvocatoriaBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Codigo convocatoria</span>\r\n                {rowData.codigoConvocatoria}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const codigoPliegoBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Codigo de Pliego</span>\r\n                {rowData.codigoPliego}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const estadoBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Estado</span>\r\n                {rowData.estado}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const empresaBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Empresa</span>\r\n                {rowData.empresa}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const userBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">User</span>\r\n                {rowData.user}\r\n               \r\n\r\n            </>\r\n        );\r\n    }\r\n\r\n    const leftToolbarTemplate = () => {\r\n        return (\r\n            <React.Fragment>\r\n                <Button style={props.layoutColorMode === 'light' ? {'color':'#ffffff','background': '#13af4e'} : {'color':'#ffffff','background': '#13af4e'}} label=\"Nuevo\" icon=\"pi pi-plus\" className=\"p-button-success p-mr-2\" onClick={openNew} />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    const actionBodyTemplate = (rowData) => {\r\n        return (\r\n            <div className=\"actions\">\r\n                <Button icon=\"pi pi-pencil\"    style={{'background': '#13af4e'}} className=\"p-button-rounded p-button-success mr-2\"   onClick={() => editContratto(rowData)} />\r\n                <Button icon=\"pi pi-trash\"     style={{'background': '#eee500'}} className=\"p-button-rounded p-button-warning \"       onClick={() => confirmDeleteContrato(rowData)} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    const generatePDF = (contrato) => {\r\n        console.log(contrato.empresa)\r\n        let index = findIndexByIdEmpresa(contrato.empresa);\r\n        let _user = findIndexByIdUser(index.user);\r\n        var doc = new jsPDF();\r\n        doc.setFont(\"Arial Bold\");\r\n        doc.text(60, 20,'CONTRATO DE PRESTACIÓN DE');\r\n        doc.text(65, 25,'SERVICIOS - CONSULTORÍA');\r\n        doc.setFontSize(15);\r\n        doc.setFont(\"normal\");\r\n        doc.setFontSize(12); \r\n        doc.text(70, 30,`${contrato.fecha}`);\r\n\r\n        doc.text(20, 40, 'Que suscriben la empresa Taller de Ingeniería de Software - TIS, que en lo sucesivo se');\r\n        doc.text(20, 45, 'denominará TIS, por una parte, y la consultora '+ `${index.nombre.toLocaleUpperCase()}`+ ' '+ `${index.tipoSociedad.toLocaleUpperCase()}`+' registrada debidamente en el ');\r\n        doc.text(20, 50, 'Departamento de Procesamiento de Datos y Registro e Inscripciones, domiciliada en la ciudad de');\r\n        doc.text(20, 55, 'Cochabamba, que en lo sucesivo se denominará '+ `${index.nombre.toLocaleUpperCase()}`+ ' '+ `${index.tipoSociedad.toLocaleUpperCase()}`+', por otra parte, de');\r\n        doc.text(20, 60, 'conformidad a las cláusulas que se detallan a continuación:');\r\n\r\n        doc.text(20, 70, 'PRIMERA.- TIS contratará los servicios del Contratista para la provisión de un Sistema de Apoyo a');\r\n        doc.text(20, 75, 'la Empresa TIS que se realizará, conforme a la modalidad y presupuesto entregado por la');\r\n        doc.text(20, 80, 'Consultora, en su documento de propuesta técnica, y normas estipuladas por TIS.');\r\n\r\n        doc.text(20, 90, 'SEGUNDO.- El objeto de este contrato es la provisión de un producto software.');\r\n\r\n        doc.text(20, 100,'TERCERO.- La consultora ' + `${index.nombre.toLocaleUpperCase()}`+ ' '+ `${index.tipoSociedad.toLocaleUpperCase()}`+', se hace responsable por la buena ejecución de las');\r\n        doc.text(20, 105,'distintas fases, que involucren su ingeniería del proyecto, especificadas en la propuesta técnica');\r\n        doc.text(20, 110,'corregida de acuerdo al pliego de especificaciones.');\r\n\r\n        doc.text(20, 120,'CUARTO.- Para cualquier otro punto no estipulado en el presente contrato, debe hacerse referencia');\r\n        doc.text(20, 125,'a la Convocatoria Pública '+ `${contrato.codigoConvocatoria.toLocaleUpperCase()}`+', al Pliego de Especificaciones '+ `${contrato.codigoPliego.toLocaleUpperCase()}`+' y/o a');\r\n        doc.text(20, 130,'PG-TIS (Plan Global - TIS)');\r\n\r\n        doc.text(20, 140,'QUINTO.- Se pone en evidencia que cualquier incumplimiento de las cláusulas estipuladas en el ');\r\n        doc.text(20, 145,'presente contrato, es pasible a la disolución del mismo.');\r\n        \r\n        doc.text(20, 155,'SEXTO.- La consultora '+ `${index.nombre.toLocaleUpperCase()}`+ ' '+ `${index.tipoSociedad.toLocaleUpperCase()}`+', declara su absoluta conformidad con los términos del ');\r\n        doc.text(20, 160,'presente contrato. Se deja constancia de que los datos y antecedentes personales jurídicos ');\r\n        doc.text(20, 165,'proporcionados por el adjudicatario son verídicos.');\r\n\r\n        doc.text(20, 175,'SEPTIMO.- El presente contrato se disuelve también, por cualquier motivo de incumplimiento a');\r\n        doc.text(20, 180,'normas establecidas en PG-TIS (Plan Global - TIS).');\r\n\r\n        doc.text(20, 190,'OCTAVO.- Por la disolución del contrato, TIS tiene todo el derecho de ejecutar la boleta de garantía, ');\r\n        doc.text(20, 195,'que es entregada por el contratado como documento de seriedad de la empresa.');\r\n\r\n        doc.text(20, 205,'NOVENO.- La información que TIS brinde al contratado debe ser de rigurosa confidencialidad, y no');\r\n        doc.text(20, 210,'utilizarse para otros fines que no sea el desarrollo del proyecto.');\r\n\r\n        doc.text(20, 220,'DECIMO.- TIS representada por su directorio Lic. Corina Flores V., Lic. M. Leticia Blanco C., Lic.');\r\n        doc.text(20, 225,'David Escalera F., y Lic. Patricia Rodriguez, y por otra; la consultora '+ `${index.nombre.toLocaleUpperCase()}`+ ' '+ `${index.tipoSociedad.toLocaleUpperCase()}`+', ');\r\n        doc.text(20, 230,'representada por su representante legal '+`${_user.nombre}`+' '+`${_user.apellido}` +', dan su plena');\r\n        doc.text(20, 235,'conformidad a los términos y condiciones establecidos en el presente Contrato de Prestación de');\r\n        doc.text(20, 240,'Servicios y Consultoría, firmando en constancia al pie de presente documento.');\r\n\r\n        doc.text(70, 250,'Cochabamba, '+`${contrato.fecha}`);\r\n\r\n        doc.text(20, 270,'REPRESENTANTE');\r\n        doc.text(20, 275,'GRUPOEMPRESA');\r\n\r\n        doc.text(150, 270,'REPRESENTANTE');\r\n        doc.text(150, 275,'CONSULTORA TIS');\r\n\r\n        doc.save('contrato.pdf')\r\n    } \r\n\r\n    const pdfBodyTemplate = (rowData) => {\r\n        return (\r\n            <div className=\"actions\">\r\n                <Button icon=\"pi pi-file-pdf\"  style={{'background': '#ed4651'}} className=\"p-button-rounded p-button-success mr-2\"  onClick={() =>(generatePDF(rowData))}     />\r\n            </div>\r\n        );\r\n    }\r\n    \r\n\r\n    const deleteContratoDialogFooter = (\r\n        <>\r\n            <Button label=\"No\" icon=\"pi pi-times\" style={{'background': '#d13639','color':'#ffffff'}} className=\"p-button-text\" onClick={hideDeleteContratoDialog} />\r\n            <Button label=\"Si\" icon=\"pi pi-check\" style={props.layoutColorMode === 'light' ? {'color':'#13af4e','border-color':'#13af4e'} : {'color':'#13af4e','border-color':'#13af4e'}} className=\"p-button-text\" onClick={deleteContrato} />\r\n        </>\r\n    );\r\n\r\n\r\n\r\n    const renderHeader = () => {\r\n        return (\r\n            <div className=\"flex flex-column md:flex-row md:justify-content-between md:align-items-center\">\r\n            <h5 className=\"m-0\">Gestion de firma de contrato</h5>\r\n            <span className=\"block mt-2 md:mt-0 p-input-icon-left\">\r\n                <i className=\"pi pi-search\" />\r\n                <InputText type=\"search\" onInput={(e) => setGlobalFilter(e.target.value)} placeholder=\"Buscar...\" />\r\n            </span>\r\n        </div>\r\n        )\r\n    }\r\n\r\n    const renderGroup = () => {\r\n        return (\r\n            <ColumnGroup>\r\n                <Row>\r\n                    <Column header={showHeader} colSpan={7}></Column>\r\n                </Row>\r\n                <Row>\r\n                    <Column header=\"ID\"                     field=\"id\"                  sortable style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                    <Column header=\"FECHA\"                  field=\"fecha\"               sortable style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                    <Column header=\"COD. CONVOCATORIA\"      field=\"codigoConvocatoria\"  sortable style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                    <Column header=\"COD. PLIEGO\"            field=\"codigoPliego\"        sortable style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                    <Column header=\"ESTADO\"                 field=\"estado\"              sortable style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                    <Column header=\"Editar/Eliminar\"                                             style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                    <Column header=\"Generar PDF\"                                                 style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                </Row>\r\n            </ColumnGroup>\r\n        )\r\n    }\r\n\r\n\r\n    const showHeader  = renderHeader();\r\n    const headerGroup = renderGroup();\r\n\r\n\r\n\r\n    const headerDialog =()=>{\r\n        return (stateContrato)?\"Actualizando contrato\":\"Añadir contrato\"\r\n    }\r\n\r\n    return (\r\n        <div className=\"p-grid crud-demo\">\r\n            <div className=\"p-col-12\">\r\n                <div className=\"card\">\r\n                \r\n                    <Toast ref={toast} />\r\n                    <Toolbar className=\"\" left={leftToolbarTemplate}></Toolbar>\r\n\r\n                    <DataTable ref={dt} value={contratos} selection={selectedContratos}  onSelectionChange={(e) => setSelectedContratos(e.value)}\r\n                        dataKey=\"id\" rowHover paginator rows={10} rowsPerPageOptions={[5, 10, 25]} className=\"datatable-responsive p-datatable-sm p-datatable-gridlines p-datatable-striped\"\r\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\r\n                        currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} contratos\" resizableColumns columnResizeMode=\"fit\" showGridlines\r\n                        globalFilter={globalFilter} emptyMessage=\"No se encontro los contratos\" loading={loading} headerColumnGroup={headerGroup}\r\n                        >\r\n                    \r\n                        <Column style={{width:'20%'}} field=\"id\"                    header=\"ID\"                     sortable body={idBodyTemplate}></Column>\r\n                        <Column style={{width:'20%'}} field=\"fecha\"                 header=\"FECHA\"                  sortable body={fechaBodyTemplate}></Column>\r\n                        <Column style={{width:'20%'}} field=\"codigoConvocatoria\"    header=\"COD. CONVOCATORIA\"      sortable body={codigoConvocatoriaBodyTemplate}></Column>\r\n                        <Column style={{width:'20%'}} field=\"codigoPliego\"          header=\"COD. PLIEGO\"            sortable body={codigoPliegoBodyTemplate}></Column>                   \r\n                        <Column style={{width:'20%'}} field=\"estado\"                header=\"ESTADO\"                 sortable body={estadoBodyTemplate}></Column>\r\n                        <Column style={{width:'20%'}} body={actionBodyTemplate}></Column>\r\n                        <Column header=\"Generar PDF\"  body={pdfBodyTemplate}></Column>\r\n\r\n                    </DataTable>\r\n\r\n\r\n                    <Dialog visible={contratoDialog} style={{ width: '450px' }} header={headerDialog} modal className=\"p-fluid\" onHide={hideDialog}>\r\n                        <form onSubmit={formik.handleSubmit}>\r\n                            <div className=\"p-field mt-2\">\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <i className=\"pi pi-calendar\"></i>\r\n                                        </span>\r\n                                        <Calendar id=\"fecha\" name=\"fecha\" placeholder=\"Seleccione una fecha\" value={formik.values.fecha} onChange={formik.handleChange} locale=\"es\" dateFormat =\"mm/dd/yy\" minDate={minDate} maxDate={maxDate} readOnlyInput/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('fecha')}\r\n\r\n                            <div className=\"p-field mt-2\">\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                        <img   src={props.layoutColorMode === 'light' ? 'assets/layout/images/code.png' : 'assets/layout/images/code-dark.png'} style={{'height': '1.2em','width':'1.2em',}}/>  \r\n                                        </span>\r\n                                        <Dropdown id=\"codigoConvocatoria\" name=\"codigoConvocatoria\" placeholder=\"Seleccione el codigo de convocatoria\" value={formik.values.codigoConvocatoria} onChange={formik.handleChange} options={convocatorias} optionLabel=\"codigo\"  optionValue=\"codigo\"/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('codigoConvocatoria')}\r\n\r\n                            <div className=\"p-field mt-2\">\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                        <img   src={props.layoutColorMode === 'light' ? 'assets/layout/images/code.png' : 'assets/layout/images/code-dark.png'} style={{'height': '1.2em','width':'1.2em',}}/>  \r\n                                        </span>\r\n                                        <Dropdown id=\"codigoPliego\" name=\"codigoPliego\" placeholder=\"Seleccione el codigo de pliego\" value={formik.values.codigoPliego} onChange={formik.handleChange} options={pliegos} optionLabel=\"codigo\"  optionValue=\"codigo\"/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('codigoPliego')}\r\n\r\n                            {(stateContrato)?(\r\n                                <div className=\"form-group\">\r\n                                    <div className=\"p-field mt-2\">\r\n                                        <div className=\"p-inputgroup\">\r\n                                            <span className=\"p-inputgroup-addon\">\r\n                                                <img   src={props.layoutColorMode === 'light' ? 'assets/layout/images/estado.png' : 'assets/layout/images/estado-dark.png'} style={{'height': '1.2em','width':'1.2em',}}/>   \r\n                                            </span>\r\n                                            <Dropdown id=\"estado\" name=\"estado\" placeholder=\"Seleccione un estado\" value={formik.values.estado} onChange={formik.handleChange} options={estados} optionLabel=\"name\"  optionValue=\"name\"/> \r\n                                        </div>       \r\n                                    </div>\r\n                                    {getFormErrorMessage('estado')}\r\n                                </div>\r\n                            ):\r\n                                null\r\n                            }\r\n\r\n                            <div className=\"p-field mt-2\">\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <i className=\"pi pi-briefcase\"></i>\r\n                                        </span>\r\n                                        <Dropdown id=\"empresa\" name=\"empresa\" placeholder=\"Seleccione una empresa\" value={formik.values.empresa} onChange={formik.handleChange} options={empresas} optionLabel=\"nombre\"  optionValue=\"id\"/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('empresa')}\r\n\r\n                            <div className=\"p-field mt-2\">\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <i className=\"pi pi-user\"></i>\r\n                                        </span>\r\n                                        <Dropdown id=\"user\" name=\"user\" placeholder=\"Seleccione un usuario\" value={formik.values.user} onChange={formik.handleChange} options={users} optionLabel=\"nombre\"  optionValue=\"id\"/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('user')}\r\n\r\n\r\n                            <div className='mt-2'>\r\n                                <div className=\"flex justify-content-center flex-wrap\">\r\n                                    <div className=\"flex align-items-center justify-content-center  m-2\">\r\n                                        <Button label=\"Cancelar\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDialog} style={props.layoutColorMode === 'light' ? {'color':'#d13639','border-color':'#d13639'} : {'color':'#d13639','border-color':'#d13639'}}/>\r\n                                    </div>\r\n                                    <div className=\"flex align-items-center justify-content-center  m-2\">\r\n                                        <Button label=\"Guardar\"  icon=\"pi pi-check\" type=\"submit\" className=\"p-button-text\" onClick={showDialog} style={{'background': '#13af4e','color':'#ffffff'}}/>  \r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </Dialog>\r\n\r\n\r\n                    <Dialog className=\"mt-2\" visible={deleteContratoDialog} style={{ width: '450px' }} header=\"Confirm\" modal footer={deleteContratoDialogFooter} onHide={hideDeleteContratoDialog}>\r\n                        <div className=\"confirmation-content\">\r\n                            <i className=\"pi pi-exclamation-triangle p-mr-3\" style={{ fontSize: '2rem' }} />\r\n                            {contrato && <span>¿Estás segura de que quieres eliminar? <b>{contrato.id}</b>?</span>}\r\n                        </div>\r\n                    </Dialog>\r\n    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import axios from 'axios';\r\n\r\n export const getOrdens = () =>{\r\n     return axios.get('https://magic-tech-backend.herokuapp.com/api/getOrdens');\r\n }\r\n\r\n export const getOrdenID =(id) =>{\r\n     return axios.get(`https://magic-tech-backend.herokuapp.com/api/getOrdenId/${id}`);\r\n }\r\n\r\n\r\n\r\n export const createOrden=(data)=>{\r\n    return axios.post('https://magic-tech-backend.herokuapp.com/api/createOrden', \r\n      {\r\n         id:                     `${data.id}`,\r\n         fecha:                  `${data.fecha}`,\r\n         caratulaA:              `${data.caratulaA}`,\r\n         indiceA:                `${data.indiceA}`,\r\n         cartaA:                 `${data.cartaA}`,\r\n         boletaA:                `${data.boletaA}`,\r\n         conformacionA:          `${data.conformacionA}`,\r\n         solvenciaA:             `${data.solvenciaA}`,\r\n         caratulaB:              `${data.caratulaB}`,\r\n         indiceB:                `${data.indiceB}`,\r\n         propuestaServicioB:     `${data.propuestaServicioB}`,\r\n         planificacionB:         `${data.planificacionB}`,\r\n         propuestaEconomicaB:    `${data.propuestaEconomicaB}`,\r\n         planPagosB:             `${data.planPagosB}`,\r\n         cumplimientoProponente: `${data.cumplimientoProponente}`,\r\n         claridadOrganizacion:   `${data.claridadOrganizacion}`,\r\n         cumplimientoTecnico:    `${data.cumplimientoTecnico}`,\r\n         claridadProceso:        `${data.claridadProceso}`,\r\n         plazosEjecucion:        `${data.plazosEjecucion}`,\r\n         precioTotal:            `${data.precioTotal}`,\r\n         usoHerramienta:         `${data.usoHerramienta}`,\r\n         estado:                 `${data.estado}`,\r\n         empresa:                `${data.empresa}`,\r\n         user:                   `${data.user}`\r\n       \r\n      }\r\n      )\r\n      .then(function (response) {\r\n        console.log(response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n }\r\n\r\nexport const updateOrdenID =(data,id) =>{\r\n    return axios.put(`https://magic-tech-backend.herokuapp.com/api/updateOrden/${id}`, \r\n    {\r\n        fecha:                  `${data.fecha}`,\r\n        caratulaA:              `${data.caratulaA}`,\r\n        indiceA:                `${data.indiceA}`,\r\n        cartaA:                 `${data.cartaA}`,\r\n        boletaA:                `${data.boletaA}`,\r\n        conformacionA:          `${data.conformacionA}`,\r\n        solvenciaA:             `${data.solvenciaA}`,\r\n        caratulaB:              `${data.caratulaB}`,\r\n        indiceB:                `${data.indiceB}`,\r\n        propuestaServicioB:     `${data.propuestaServicioB}`,\r\n        planificacionB:         `${data.planificacionB}`,\r\n        propuestaEconomicaB:    `${data.propuestaEconomicaB}`,\r\n        planPagosB:             `${data.planPagosB}`,\r\n        cumplimientoProponente: `${data.cumplimientoProponente}`,\r\n        claridadOrganizacion:   `${data.claridadOrganizacion}`,\r\n        cumplimientoTecnico:    `${data.cumplimientoTecnico}`,\r\n        claridadProceso:        `${data.claridadProceso}`,\r\n        plazosEjecucion:        `${data.plazosEjecucion}`,\r\n        precioTotal:            `${data.precioTotal}`,\r\n        usoHerramienta:         `${data.usoHerramienta}`,\r\n        estado:                 `${data.estado}`,\r\n        empresa:                `${data.empresa}`,\r\n        user:                   `${data.user}`\r\n    }\r\n    )\r\n    .then(function (response) {\r\n      console.log(response);\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error);\r\n    });\r\n}\r\n\r\nexport const deleteOrdenID =(id) =>{\r\n    return axios.delete(`https://magic-tech-backend.herokuapp.com/api/deleteOrdenId/${id}`);\r\n}\r\n\r\nexport const getOrdensActivas = () =>{\r\n  return axios.get('https://magic-tech-backend.herokuapp.com/api/getOrdensActivas');\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport classNames           from 'classnames';\r\nimport { DataTable }        from 'primereact/datatable';\r\nimport { Column }           from 'primereact/column';\r\nimport { Toast }            from 'primereact/toast';\r\nimport { Button }           from 'primereact/button';\r\nimport { Toolbar }          from 'primereact/toolbar';\r\nimport { Dialog }           from 'primereact/dialog';\r\nimport { InputText }        from 'primereact/inputtext';\r\nimport { InputTextarea }    from 'primereact/inputtextarea';\r\nimport { Password }         from 'primereact/password';\r\nimport { ColumnGroup }      from 'primereact/columngroup';\r\nimport { Calendar }         from 'primereact/calendar';\r\nimport { Row }              from 'primereact/row';\r\nimport { Dropdown }         from 'primereact/dropdown';\r\nimport { addLocale }        from 'primereact/api';\r\nimport { useFormik }        from \"formik\";\r\nimport { Link }             from 'react-router-dom';\r\nimport jsPDF                from 'jspdf';\r\n\r\nimport uniqid               from 'uniqid';\r\n\r\nimport { getOrdens,createOrden,updateOrdenID} from '../service/apiOrden';\r\nimport { getUsersActivas  }                   from '../service/apiUser';\r\nimport { getEmpresasActivas }                 from '../service/apiEmpresa';\r\n\r\n\r\nexport const Orden = (props) => {\r\n\r\n    let emptyParte = {\r\n        id:                     null,\r\n        fecha:                  '',\r\n        caratulaA:              '',\r\n        indiceA:                '',\r\n        cartaA:                 '',\r\n        boletaA:                '',\r\n        conformacionA:          '',\r\n        solvenciaA:             '',\r\n        caratulaB:              '',\r\n        indiceB:                '',\r\n        propuestaServicioB:     '',\r\n        planificacionB:         '',\r\n        propuestaEconomicaB:    '',\r\n        planPagosB:             '',\r\n        cumplimientoProponente: '',\r\n        claridadOrganizacion:   '',\r\n        cumplimientoTecnico:    '',\r\n        claridadProceso:        '',\r\n        plazosEjecucion:        '',\r\n        precioTotal:            '',\r\n        usoHerramienta:         '',\r\n        estado:                 '',\r\n        empresa:                '',\r\n        user:                   ''\r\n    };\r\n\r\n    const estados = [\r\n        { name: \"Activo\"      },\r\n        { name: \"Desactivado\" }\r\n    ];\r\n\r\n    const puntuacion1 = [\r\n        { name: '0'},\r\n        { name: '1'},\r\n        { name: '2' },\r\n        { name: '3'},\r\n        { name: '4'},\r\n        { name: '5'},\r\n        { name: '6'},\r\n        { name: '7' },\r\n        { name: '8'},\r\n        { name: '9'},\r\n        { name: '10'},\r\n        { name: '11'},\r\n        { name: '12' },\r\n        { name: '13'},\r\n        { name: '14'},\r\n        { name: '15'}\r\n    ];\r\n\r\n    const puntuacion2 = [\r\n        { name: '0'},\r\n        { name: '1'},\r\n        { name: '2' },\r\n        { name: '3'},\r\n        { name: '4'},\r\n        { name: '5'},\r\n        { name: '6'},\r\n        { name: '7' },\r\n        { name: '8'},\r\n        { name: '9'},\r\n        { name: '10'}\r\n    ];\r\n    const puntuacion3 = [\r\n        { name: '0'},\r\n        { name: '1'},\r\n        { name: '2' },\r\n        { name: '3'},\r\n        { name: '4'},\r\n        { name: '5'},\r\n        { name: '6'},\r\n        { name: '7' },\r\n        { name: '8'},\r\n        { name: '9'},\r\n        { name: '10'},\r\n        { name: '11'},\r\n        { name: '12' },\r\n        { name: '13'},\r\n        { name: '14'},\r\n        { name: '15'},\r\n        { name: '16'},\r\n        { name: '17' },\r\n        { name: '18'},\r\n        { name: '19'},\r\n        { name: '20'},\r\n        { name: '21'},\r\n        { name: '22' },\r\n        { name: '23'},\r\n        { name: '24'},\r\n        { name: '25'},\r\n        { name: '26'},\r\n        { name: '27' },\r\n        { name: '28'},\r\n        { name: '29'},\r\n        { name: '30'}\r\n    ];\r\n    const puntuacion4 = [\r\n        { name: '0'},\r\n        { name: '1'},\r\n        { name: '2' },\r\n        { name: '3'},\r\n        { name: '4'},\r\n        { name: '5'},\r\n        { name: '6'},\r\n        { name: '7' },\r\n        { name: '8'},\r\n        { name: '9'},\r\n        { name: '10'}\r\n    ];\r\n    const puntuacion5 = [\r\n        { name: '0'},\r\n        { name: '1'},\r\n        { name: '2' },\r\n        { name: '3'},\r\n        { name: '4'},\r\n        { name: '5'},\r\n        { name: '6'},\r\n        { name: '7' },\r\n        { name: '8'},\r\n        { name: '9'},\r\n        { name: '10'}\r\n    ];\r\n    const puntuacion6 = [\r\n        { name: '0'},\r\n        { name: '1'},\r\n        { name: '2' },\r\n        { name: '3'},\r\n        { name: '4'},\r\n        { name: '5'},\r\n        { name: '6'},\r\n        { name: '7' },\r\n        { name: '8'},\r\n        { name: '9'},\r\n        { name: '10'},\r\n        { name: '11'},\r\n        { name: '12' },\r\n        { name: '13'},\r\n        { name: '14'},\r\n        { name: '15'}\r\n    ];\r\n    const puntuacion7 = [\r\n        { name: '0'},\r\n        { name: '1'},\r\n        { name: '2' },\r\n        { name: '3'},\r\n        { name: '4'},\r\n        { name: '5'},\r\n        { name: '6'},\r\n        { name: '7' },\r\n        { name: '8'},\r\n        { name: '9'},\r\n        { name: '10'}\r\n    ];\r\n\r\n    addLocale('es', {\r\n        firstDayOfWeek: 1,\r\n        dayNames: ['domingo', 'lunes', 'martes', 'miércoles', 'jueves', 'viernes', 'sábado'],\r\n        dayNamesShort: ['dom', 'lun', 'mar', 'mié', 'jue', 'vie', 'sáb'],\r\n        dayNamesMin: ['D', 'L', 'M', 'X', 'J', 'V', 'S'],\r\n        monthNames: ['enero', 'febrero', 'marzo', 'abril', 'mayo', 'junio', 'julio', 'agosto', 'septiembre', 'octubre', 'noviembre', 'diciembre'],\r\n        monthNamesShort: ['ene', 'feb', 'mar', 'abr', 'may', 'jun', 'jul', 'ago', 'sep', 'oct', 'nov', 'dic'],\r\n        today: 'Hoy',\r\n        clear: 'Claro'\r\n    });\r\n\r\n    const [partes, setPartes]                          = useState(null);\r\n    const [users, setUsers]                            = useState(null);\r\n    const [empresas, setEmpresas]                      = useState(null);\r\n\r\n    const [globalFilter, setGlobalFilter]              = useState('');\r\n    const [loading, setLoading]                        = useState(true);\r\n    const [parteDialog, setParteDialog]                = useState(false);\r\n    const [deleteParteDialog, setDeleteParteDialog]    = useState(false);\r\n\r\n    const [parte, setParte]                            = useState(emptyParte);\r\n    const [selectedPartes, setSelectedPartes]          = useState(null);\r\n    const [submitted, setSubmitted]                    = useState(false);\r\n    const toast                                        = useRef(null);\r\n    const dt                                           = useRef(null);\r\n    const [stateParte,setStateParte]                   = useState(false);\r\n    const [parteUpdate, setParteUpdate]                = useState(\"\");\r\n\r\n    const options1 = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\r\n\r\n    let today = new Date();\r\n    let month = today.getMonth();\r\n    let year = today.getFullYear();\r\n    let prevMonth = (month === 0) ? 11 : month - 0;\r\n    let prevYear = (prevMonth === 11) ? year - 0 : year;\r\n    let nextMonth = (month === 11) ? 0 : month + 1;\r\n    let nextYear = (nextMonth === 0) ? year + 1 : year;\r\n\r\n    let minDate = new Date();\r\n    minDate.setMonth(prevMonth);\r\n    minDate.setFullYear(prevYear);\r\n\r\n    let maxDate = new Date();\r\n    maxDate.setMonth(nextMonth);\r\n    maxDate.setFullYear(nextYear);\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            fecha:                  '',\r\n            caratulaA:              '',\r\n            indiceA:                '',\r\n            cartaA:                 '',\r\n            boletaA:                '',\r\n            conformacionA:          '',\r\n            solvenciaA:             '',\r\n            caratulaB:              '',\r\n            indiceB:                '',\r\n            propuestaServicioB:     '',\r\n            planificacionB:         '',\r\n            propuestaEconomicaB:    '',\r\n            planPagosB:             '',\r\n            cumplimientoProponente: '',\r\n            claridadOrganizacion:   '',\r\n            cumplimientoTecnico:    '',\r\n            claridadProceso:        '',\r\n            plazosEjecucion:        '',\r\n            precioTotal:            '',\r\n            usoHerramienta:         '',\r\n            estado:                 '',\r\n            empresa:                '',\r\n            user:                   ''\r\n        },\r\n         validate: (data) => {\r\n            let errors = {};\r\n\r\n            if(stateParte){\r\n\r\n                if (!data.fecha) {\r\n                    errors.fecha = \"Se requiere la fecha\";\r\n                } \r\n\r\n                if (!data.caratulaA) {\r\n                    errors.caratulaA = \"Se requiere la caratula\";\r\n                } else if (data.caratulaA.length < 2) {\r\n                    errors.caratulaA = \"Como minimo 2 caracteres\";\r\n                } else if (data.caratulaA.length > 512) {\r\n                    errors.caratulaA = \"Como maximo 512 caracteres\";\r\n                }\r\n\r\n                \r\n                if (!data.indiceA) {\r\n                    errors.indiceA = \"Se requiere el indice\";\r\n                } else if (data.indiceA.length < 2) {\r\n                    errors.indiceA = \"Como minimo 2 caracteres\";\r\n                } else if (data.indiceA.length > 512) {\r\n                    errors.indiceA = \"Como maximo 512 caracteres\";\r\n                }\r\n\r\n                if (!data.cartaA) {\r\n                    errors.cartaA = \"Se requiere la carta\";\r\n                } else if (data.cartaA.length < 2) {\r\n                    errors.cartaA = \"Como minimo 2 caracteres\";\r\n                } else if (data.cartaA.length > 512) {\r\n                    errors.cartaA = \"Como maximo 512 caracteres\";\r\n                }\r\n\r\n                if (!data.boletaA) {\r\n                    errors.boletaA = \"Se requiere la boleta de garantia\";\r\n                } else if (data.boletaA.length < 2) {\r\n                    errors.boletaA = \"Como minimo 2 caracteres\";\r\n                } else if (data.boletaA.length > 512) {\r\n                    errors.boletaA = \"Como maximo 512 caracteres\";\r\n                }\r\n\r\n                if (!data.conformacionA) {\r\n                    errors.conformacionA = \"Se requiere la conformacion del grupo empresa\";\r\n                } else if (data.conformacionA.length < 2) {\r\n                    errors.conformacionA = \"Como minimo 2 caracteres\";\r\n                } else if (data.conformacionA.length > 512) {\r\n                    errors.conformacionA = \"Como maximo 512 caracteres\";\r\n                }\r\n\r\n                if (!data.solvenciaA) {\r\n                    errors.solvenciaA = \"Se requiere la solvencia tecnica\";\r\n                } else if (data.solvenciaA.length < 2) {\r\n                    errors.solvenciaA = \"Como minimo 2 caracteres\";\r\n                } else if (data.solvenciaA.length > 512) {\r\n                    errors.solvenciaA = \"Como maximo 512 caracteres\";\r\n                } \r\n\r\n                if (!data.caratulaB) {\r\n                    errors.caratulaB = \"Se requiere la caratula\";\r\n                } else if (data.caratulaB.length < 2) {\r\n                    errors.caratulaB = \"Como minimo 2 caracteres\";\r\n                } else if (data.caratulaB.length > 512) {\r\n                    errors.caratulaB = \"Como maximo 512 caracteres\";\r\n                }\r\n\r\n                if (!data.indiceB) {\r\n                    errors.indiceB = \"Se requiere el indice\";\r\n                } else if (data.indiceB.length < 2) {\r\n                    errors.indiceB = \"Como minimo 2 caracteres\";\r\n                } else if (data.indiceB.length > 512) {\r\n                    errors.indiceB = \"Como maximo 512 caracteres\";\r\n                } \r\n\r\n                if (!data.propuestaServicioB) {\r\n                    errors.propuestaServicioB = \"Se requiere la propuesta de servicio\";\r\n                } else if (data.propuestaServicioB.length < 2) {\r\n                    errors.propuestaServicioB = \"Como minimo 2 caracteres\";\r\n                } else if (data.propuestaServicioB.length > 512) {\r\n                    errors.propuestaServicioB = \"Como maximo 512 caracteres\";\r\n                } \r\n\r\n                if (!data.planificacionB) {\r\n                    errors.planificacionB = \"Se requiere la planificacion\";\r\n                } else if (data.planificacionB.length < 2) {\r\n                    errors.planificacionB = \"Como minimo 2 caracteres\";\r\n                } else if (data.planificacionB.length > 512) {\r\n                    errors.planificacionB = \"Como maximo 512 caracteres\";\r\n                } \r\n\r\n                if (!data.propuestaEconomicaB) {\r\n                    errors.propuestaEconomicaB = \"Se requiere la propuesta economica\";\r\n                } else if (data.propuestaEconomicaB.length < 2) {\r\n                    errors.propuestaEconomicaB = \"Como minimo 2 caracteres\";\r\n                } else if (data.propuestaEconomicaB.length > 512) {\r\n                    errors.propuestaEconomicaB = \"Como maximo 512 caracteres\";\r\n                } \r\n\r\n                if (!data.planPagosB) {\r\n                    errors.planPagosB = \"Se requiere el plan de pagos\";\r\n                } else if (data.planPagosB.length < 2) {\r\n                    errors.planPagosB = \"Como minimo 2 caracteres\";\r\n                } else if (data.planPagosB.length > 512) {\r\n                    errors.planPagosB = \"Como maximo 512 caracteres\";\r\n                } \r\n\r\n                //---------------------------------------------------------\r\n                if (!data.cumplimientoProponente) {\r\n                    errors.cumplimientoProponente = \"Se requiere el cumplimiento de espeficicaciones\";\r\n                } else if (data.cumplimientoProponente.length < 1) {\r\n                    errors.cumplimientoProponente = \"Como minimo 2 caracteres\";\r\n                } else if (data.cumplimientoProponente.length > 512) {\r\n                    errors.cumplimientoProponente = \"Como maximo 512 caracteres\";\r\n                } \r\n\r\n                if (!data.claridadOrganizacion) {\r\n                    errors.claridadOrganizacion = \"Se requiere el clarida de organizacion\";\r\n                } else if (data.claridadOrganizacion.length < 1) {\r\n                    errors.claridadOrganizacion = \"Como minimo 2 caracteres\";\r\n                } else if (data.claridadOrganizacion.length > 512) {\r\n                    errors.claridadOrganizacion = \"Como maximo 512 caracteres\";\r\n                } \r\n\r\n\r\n                if (!data.cumplimientoTecnico) {\r\n                    errors.cumplimientoTecnico = \"Se requiere el cumplimiento de especificaciones tecnicas\";\r\n                } else if (data.cumplimientoTecnico.length < 1) {\r\n                    errors.cumplimientoTecnico = \"Como minimo 2 caracteres\";\r\n                } else if (data.cumplimientoTecnico.length > 512) {\r\n                    errors.cumplimientoTecnico = \"Como maximo 512 caracteres\";\r\n                } \r\n\r\n                if (!data.claridadProceso) {\r\n                    errors.claridadProceso = \"Se requiere el claridad de proceso de desarrollo\";\r\n                } else if (data.claridadProceso.length < 1) {\r\n                    errors.claridadProceso = \"Como minimo 2 caracteres\";\r\n                } else if (data.claridadProceso.length > 512) {\r\n                    errors.claridadProceso = \"Como maximo 512 caracteres\";\r\n                } \r\n\r\n                \r\n                if (!data.plazosEjecucion) {\r\n                    errors.plazosEjecucion = \"Se requiere los plazos de ejecucion\";\r\n                } else if (data.plazosEjecucion.length < 1) {\r\n                    errors.plazosEjecucion = \"Como minimo 2 caracteres\";\r\n                } else if (data.plazosEjecucion.length > 512) {\r\n                    errors.plazosEjecucion = \"Como maximo 512 caracteres\";\r\n                } \r\n\r\n                if (!data.precioTotal) {\r\n                    errors.precioTotal = \"Se requiere los precios totales\";\r\n                } else if (data.precioTotal.length < 1) {\r\n                    errors.precioTotal = \"Como minimo 2 caracteres\";\r\n                } else if (data.precioTotal.length > 512) {\r\n                    errors.precioTotal = \"Como maximo 512 caracteres\";\r\n                }\r\n\r\n                if (!data.usoHerramienta) {\r\n                    errors.usoHerramienta = \"Se requiere el uso de herramienta\";\r\n                } else if (data.usoHerramienta.length < 1) {\r\n                    errors.usoHerramienta = \"Como minimo 2 caracteres\";\r\n                } else if (data.usoHerramienta.length > 512) {\r\n                    errors.usoHerramienta = \"Como maximo 512 caracteres\";\r\n                } \r\n\r\n\r\n                if (!data.estado) {\r\n                    errors.estado = \"Se requiere el estado\";\r\n                } else if (data.estado.length < 2) {\r\n                    errors.estado = \"Como minimo 2 caracteres\";\r\n                } else if (data.estado.length > 30) {\r\n                    errors.estado = \"Como maximo 30 caracteres\";\r\n                } else if (!/^^[a-zA-Z\\s]+$/i.test(data.estado)) {\r\n                    errors.estado = \"No se permiten numero o caracteres especiales\";\r\n                }\r\n\r\n                if (!data.empresa) {\r\n                    errors.empresa = \"Se requiere la empresa\";\r\n                } else if (data.empresa.length < 2) {\r\n                    errors.empresa = \"Como minimo 2 caracteres\";\r\n                } else if (data.empresa.length > 30) {\r\n                    errors.empresa = \"Como maximo 30 caracteres\";\r\n                }else if (!/^^[a-zA-Z0-9\\s-]+$/i.test(data.empresa)) {\r\n                    errors.empresa = \"No se permiten numero o caracteres especiales\";\r\n                }\r\n                \r\n                if (!data.user) {\r\n                    errors.user = \"Se requiere el usuario\";\r\n                } else if (data.user.length < 2) {\r\n                    errors.user = \"Como minimo 2 caracteres\";\r\n                } else if (data.user.length > 30) {\r\n                    errors.user = \"Como maximo 30 caracteres\";\r\n                }else if (!/^^[a-zA-Z0-9\\s-]+$/i.test(data.user)) {\r\n                    errors.user = \"No se permiten numero o caracteres especiales\";\r\n                }\r\n\r\n            }else{\r\n\r\n                if (!data.fecha) {\r\n                    errors.fecha = \"Se requiere la fecha\";\r\n                } \r\n\r\n                if (!data.caratulaA) {\r\n                    errors.caratulaA = \"Se requiere la caratula\";\r\n                } else if (data.caratulaA.length < 2) {\r\n                    errors.caratulaA = \"Como minimo 2 caracteres\";\r\n                } else if (data.caratulaA.length > 512) {\r\n                    errors.caratulaA = \"Como maximo 512 caracteres\";\r\n                } \r\n\r\n                \r\n                if (!data.indiceA) {\r\n                    errors.indiceA = \"Se requiere el indice\";\r\n                } else if (data.indiceA.length < 2) {\r\n                    errors.indiceA = \"Como minimo 2 caracteres\";\r\n                } else if (data.indiceA.length > 512) {\r\n                    errors.indiceA = \"Como maximo 512 caracteres\";\r\n                } \r\n\r\n                if (!data.cartaA) {\r\n                    errors.cartaA = \"Se requiere la carta\";\r\n                } else if (data.cartaA.length < 2) {\r\n                    errors.cartaA = \"Como minimo 2 caracteres\";\r\n                } else if (data.cartaA.length > 512) {\r\n                    errors.cartaA = \"Como maximo 512 caracteres\";\r\n                } \r\n\r\n                if (!data.boletaA) {\r\n                    errors.boletaA = \"Se requiere la boleta de garantia\";\r\n                } else if (data.boletaA.length < 2) {\r\n                    errors.boletaA = \"Como minimo 2 caracteres\";\r\n                } else if (data.boletaA.length > 512) {\r\n                    errors.boletaA = \"Como maximo 512 caracteres\";\r\n                } \r\n\r\n                if (!data.conformacionA) {\r\n                    errors.conformacionA = \"Se requiere la conformacion del grupo empresa\";\r\n                } else if (data.conformacionA.length < 2) {\r\n                    errors.conformacionA = \"Como minimo 2 caracteres\";\r\n                } else if (data.conformacionA.length > 512) {\r\n                    errors.conformacionA = \"Como maximo 512 caracteres\";\r\n                } \r\n\r\n                if (!data.solvenciaA) {\r\n                    errors.solvenciaA = \"Se requiere la solvencia tecnica\";\r\n                } else if (data.solvenciaA.length < 2) {\r\n                    errors.solvenciaA = \"Como minimo 2 caracteres\";\r\n                } else if (data.solvenciaA.length > 512) {\r\n                    errors.solvenciaA = \"Como maximo 512 caracteres\";\r\n                } \r\n\r\n                if (!data.caratulaB) {\r\n                    errors.caratulaB = \"Se requiere la caratula\";\r\n                } else if (data.caratulaB.length < 2) {\r\n                    errors.caratulaB = \"Como minimo 2 caracteres\";\r\n                } else if (data.caratulaB.length > 512) {\r\n                    errors.caratulaB = \"Como maximo 512 caracteres\";\r\n                } \r\n\r\n                if (!data.indiceB) {\r\n                    errors.indiceB = \"Se requiere el indice\";\r\n                } else if (data.indiceB.length < 2) {\r\n                    errors.indiceB = \"Como minimo 2 caracteres\";\r\n                } else if (data.indiceB.length > 512) {\r\n                    errors.indiceB = \"Como maximo 512 caracteres\";\r\n                } \r\n\r\n                if (!data.propuestaServicioB) {\r\n                    errors.propuestaServicioB = \"Se requiere la propuesta de servicio\";\r\n                } else if (data.propuestaServicioB.length < 2) {\r\n                    errors.propuestaServicioB = \"Como minimo 2 caracteres\";\r\n                } else if (data.propuestaServicioB.length > 512) {\r\n                    errors.propuestaServicioB = \"Como maximo 512 caracteres\";\r\n                } \r\n\r\n                if (!data.planificacionB) {\r\n                    errors.planificacionB = \"Se requiere la planificacion\";\r\n                } else if (data.planificacionB.length < 2) {\r\n                    errors.planificacionB = \"Como minimo 2 caracteres\";\r\n                } else if (data.planificacionB.length > 512) {\r\n                    errors.planificacionB = \"Como maximo 512 caracteres\";\r\n                } \r\n\r\n                if (!data.propuestaEconomicaB) {\r\n                    errors.propuestaEconomicaB = \"Se requiere la propuesta economica\";\r\n                } else if (data.propuestaEconomicaB.length < 2) {\r\n                    errors.propuestaEconomicaB = \"Como minimo 2 caracteres\";\r\n                } else if (data.propuestaEconomicaB.length > 512) {\r\n                    errors.propuestaEconomicaB = \"Como maximo 512 caracteres\";\r\n                } \r\n\r\n                if (!data.planPagosB) {\r\n                    errors.planPagosB = \"Se requiere el plan de pagos\";\r\n                } else if (data.planPagosB.length < 2) {\r\n                    errors.planPagosB = \"Como minimo 2 caracteres\";\r\n                } else if (data.planPagosB.length > 512) {\r\n                    errors.planPagosB = \"Como maximo 512 caracteres\";\r\n                } \r\n\r\n                //---------------------------------------------------------\r\n                if (!data.cumplimientoProponente) {\r\n                    errors.cumplimientoProponente = \"Se requiere el cumplimiento de espeficicaciones\";\r\n                } else if (data.cumplimientoProponente.length < 1) {\r\n                    errors.cumplimientoProponente = \"Como minimo 2 caracteres\";\r\n                } else if (data.cumplimientoProponente.length > 512) {\r\n                    errors.cumplimientoProponente = \"Como maximo 512 caracteres\";\r\n                } \r\n\r\n                if (!data.claridadOrganizacion) {\r\n                    errors.claridadOrganizacion = \"Se requiere el clarida de organizacion\";\r\n                } else if (data.claridadOrganizacion.length < 1) {\r\n                    errors.claridadOrganizacion = \"Como minimo 2 caracteres\";\r\n                } else if (data.claridadOrganizacion.length > 512) {\r\n                    errors.claridadOrganizacion = \"Como maximo 512 caracteres\";\r\n                } \r\n\r\n                if (!data.cumplimientoTecnico) {\r\n                    errors.cumplimientoTecnico = \"Se requiere el cumplimiento de especificaciones tecnicas\";\r\n                } else if (data.cumplimientoTecnico.length < 1) {\r\n                    errors.cumplimientoTecnico = \"Como minimo 2 caracteres\";\r\n                } else if (data.cumplimientoTecnico.length > 512) {\r\n                    errors.cumplimientoTecnico = \"Como maximo 512 caracteres\";\r\n                } \r\n\r\n                if (!data.claridadProceso) {\r\n                    errors.claridadProceso = \"Se requiere el claridad de proceso de desarrollo\";\r\n                } else if (data.claridadProceso.length < 1) {\r\n                    errors.claridadProceso = \"Como minimo 2 caracteres\";\r\n                } else if (data.claridadProceso.length > 512) {\r\n                    errors.claridadProceso = \"Como maximo 512 caracteres\";\r\n                } \r\n\r\n                \r\n                if (!data.plazosEjecucion) {\r\n                    errors.plazosEjecucion = \"Se requiere los plazos de ejecucion\";\r\n                } else if (data.plazosEjecucion.length < 1) {\r\n                    errors.plazosEjecucion = \"Como minimo 2 caracteres\";\r\n                } else if (data.plazosEjecucion.length > 512) {\r\n                    errors.plazosEjecucion = \"Como maximo 512 caracteres\";\r\n                } \r\n\r\n                if (!data.precioTotal) {\r\n                    errors.precioTotal = \"Se requiere los precios totales\";\r\n                } else if (data.precioTotal.length < 1) {\r\n                    errors.precioTotal = \"Como minimo 2 caracteres\";\r\n                } else if (data.precioTotal.length > 512) {\r\n                    errors.precioTotal = \"Como maximo 512 caracteres\";\r\n                } \r\n\r\n                if (!data.usoHerramienta) {\r\n                    errors.usoHerramienta = \"Se requiere el uso de herramienta\";\r\n                } else if (data.usoHerramienta.length < 1) {\r\n                    errors.usoHerramienta = \"Como minimo 2 caracteres\";\r\n                } else if (data.usoHerramienta.length > 512) {\r\n                    errors.usoHerramienta = \"Como maximo 512 caracteres\";\r\n                } \r\n\r\n\r\n                if (!data.empresa) {\r\n                    errors.empresa = \"Se requiere la empresa\";\r\n                } else if (data.empresa.length < 2) {\r\n                    errors.empresa = \"Como minimo 2 caracteres\";\r\n                } else if (data.empresa.length > 30) {\r\n                    errors.empresa = \"Como maximo 30 caracteres\";\r\n                }else if (!/^^[a-zA-Z0-9\\s-]+$/i.test(data.empresa)) {\r\n                    errors.empresa = \"No se permiten numero o caracteres especiales\";\r\n                }\r\n                \r\n                if (!data.user) {\r\n                    errors.user = \"Se requiere el usuario\";\r\n                } else if (data.user.length < 2) {\r\n                    errors.user = \"Como minimo 2 caracteres\";\r\n                } else if (data.user.length > 30) {\r\n                    errors.user = \"Como maximo 30 caracteres\";\r\n                }else if (!/^^[a-zA-Z0-9\\s-]+$/i.test(data.user)) {\r\n                    errors.user = \"No se permiten numero o caracteres especiales\";\r\n                }\r\n\r\n            }\r\n\r\n            return errors;\r\n        },\r\n\r\n        onSubmit: (data) => {\r\n            console.log(data);\r\n            if(submitted === true){\r\n                \r\n                let _partes = [...partes];\r\n                let _parte  = {...parte };\r\n\r\n                let dat1        = new Date(data.fecha);\r\n                let convertido1 = dat1.toLocaleDateString(undefined, options1);\r\n\r\n                _parte['fecha']                     = convertido1;\r\n                _parte['caratulaA']                 = data.caratulaA;\r\n                _parte['indiceA']                   = data.indiceA;\r\n                _parte['cartaA']                    = data.cartaA;\r\n                _parte['boletaA']                   = data.boletaA;\r\n                _parte['conformacionA']             = data.conformacionA;\r\n                _parte['solvenciaA']                = data.solvenciaA;\r\n                _parte['caratulaB']                 = data.caratulaB;\r\n                _parte['indiceB']                   = data.indiceB;\r\n                _parte['propuestaServicioB']        = data.propuestaServicioB;\r\n                _parte['planificacionB']            = data.planificacionB;\r\n                _parte['propuestaEconomicaB']       = data.propuestaEconomicaB;\r\n                _parte['planPagosB']                = data.planPagosB;\r\n                _parte['cumplimientoProponente']    = data.cumplimientoProponente;\r\n                _parte['claridadOrganizacion']      = data.claridadOrganizacion;\r\n                _parte['cumplimientoTecnico']       = data.cumplimientoTecnico;\r\n                _parte['claridadProceso']           = data.claridadProceso;\r\n                _parte['plazosEjecucion']           = data.plazosEjecucion;\r\n                _parte['precioTotal']               = data.precioTotal;\r\n                _parte['usoHerramienta']            = data.usoHerramienta;\r\n                _parte['estado']                    = data.estado;\r\n                _parte['empresa']                   = data.empresa;\r\n                _parte['user']                      = data.user;\r\n\r\n\r\n                if (_parte.caratulaA.trim()) {\r\n                    if (parte.id) {\r\n\r\n                        setParte({ ...parte });\r\n                        const index = findIndexById(parte.id);\r\n                        _partes[index] = _parte;\r\n\r\n                        updateOrdenID(\r\n                            {\r\n                                fecha:                      `${_parte.fecha}`,\r\n                                caratulaA:                  `${_parte.caratulaA}`,\r\n                                indiceA:                    `${_parte.indiceA}`,\r\n                                cartaA:                     `${_parte.cartaA}`,\r\n                                boletaA:                    `${_parte.boletaA}`,\r\n                                conformacionA:              `${_parte.conformacionA}`,\r\n                                solvenciaA:                 `${_parte.solvenciaA}`,\r\n                                caratulaB:                  `${_parte.caratulaB}`,\r\n                                indiceB:                    `${_parte.indiceB}`,\r\n                                propuestaServicioB:         `${_parte.propuestaServicioB}`,\r\n                                planificacionB:             `${_parte.planificacionB}`,\r\n                                propuestaEconomicaB:        `${_parte.propuestaEconomicaB}`,\r\n                                planPagosB:                 `${_parte.planPagosB}`,\r\n                                cumplimientoProponente:     `${_parte.cumplimientoProponente}`,\r\n                                claridadOrganizacion:       `${_parte.claridadOrganizacion}`,\r\n                                cumplimientoTecnico:        `${_parte.cumplimientoTecnico}`,\r\n                                claridadProceso:            `${_parte.claridadProceso}`,\r\n                                plazosEjecucion:            `${_parte.plazosEjecucion}`,\r\n                                precioTotal:                `${_parte.precioTotal}`,\r\n                                usoHerramienta:             `${_parte.usoHerramienta}`,\r\n                                estado:                     `${_parte.estado}`,\r\n                                empresa:                    `${_parte.empresa}`,\r\n                                user:                       `${_parte.user}`\r\n                            }\r\n                            ,parte.id);\r\n                        toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Orden de cambio Actualizado', life: 3000 });\r\n                    }\r\n                    else {\r\n\r\n                        _parte.id        = uniqid(\"Orden-\");\r\n                        _parte.estado    = \"Activo\"; \r\n                        _partes.push(_parte);\r\n                        createOrden(\r\n                            {\r\n                                id:                         `${_parte.id}`,\r\n                                fecha:                      `${_parte.fecha}`,\r\n                                caratulaA:                  `${_parte.caratulaA}`,\r\n                                indiceA:                    `${_parte.indiceA}`,\r\n                                cartaA:                     `${_parte.cartaA}`,\r\n                                boletaA:                    `${_parte.boletaA}`,\r\n                                conformacionA:              `${_parte.conformacionA}`,\r\n                                solvenciaA:                 `${_parte.solvenciaA}`,\r\n                                caratulaB:                  `${_parte.caratulaB}`,\r\n                                indiceB:                    `${_parte.indiceB}`,\r\n                                propuestaServicioB:         `${_parte.propuestaServicioB}`,\r\n                                planificacionB:             `${_parte.planificacionB}`,\r\n                                propuestaEconomicaB:        `${_parte.propuestaEconomicaB}`,\r\n                                planPagosB:                 `${_parte.planPagosB}`,\r\n                                cumplimientoProponente:     `${_parte.cumplimientoProponente}`,\r\n                                claridadOrganizacion:       `${_parte.claridadOrganizacion}`,\r\n                                cumplimientoTecnico:        `${_parte.cumplimientoTecnico}`,\r\n                                claridadProceso:            `${_parte.claridadProceso}`,\r\n                                plazosEjecucion:            `${_parte.plazosEjecucion}`,\r\n                                precioTotal:                `${_parte.precioTotal}`,\r\n                                usoHerramienta:             `${_parte.usoHerramienta}`,\r\n                                estado:                     `${_parte.estado}`,\r\n                                empresa:                    `${_parte.empresa}`,\r\n                                user:                       `${_parte.user}`\r\n                            }\r\n                        );\r\n                        toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Orden de cambio Creado', life: 3000 });\r\n                    }\r\n                }\r\n                setPartes(_partes);\r\n                setParteDialog(false);\r\n                setParte(emptyParte);\r\n                formik.resetForm();\r\n        }\r\n            \r\n        },\r\n      });\r\n\r\n    const isFormFieldValid = (name) => !!(formik.touched[name] && formik.errors[name]);\r\n    const getFormErrorMessage = (name) => {\r\n        return isFormFieldValid(name) && <small className=\"ml-1 p-error\" style={{'color': '#ff0000'}}>{formik.errors[name]}</small>;\r\n    };\r\n\r\n    useEffect(()=>{\r\n        fetchOrdens();\r\n    },[])\r\n\r\n    const fetchOrdens = () =>{\r\n        getOrdens().then(json =>{\r\n            if(json.error){\r\n                console.log(\"Error\");\r\n            }else{\r\n                console.log(\"---------Orden de cambio insertados-----------\");\r\n                setPartes(json.data);\r\n                setLoading(false);\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        fetchUsers();\r\n    },[])\r\n\r\n    const fetchUsers = () =>{\r\n        getUsersActivas().then(json =>{\r\n            if(json.error){\r\n                console.log(\"Error\");\r\n            }else{\r\n                console.log(\"---------Users insertados-----------\");\r\n                setUsers(json.data);\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        fetchEmpresas();\r\n    },[])\r\n\r\n    const fetchEmpresas = () =>{\r\n        getEmpresasActivas().then(json =>{\r\n            if(json.error){\r\n                console.log(\"Error\");\r\n            }else{\r\n                console.log(\"---------Empresas insertadas-----------\");\r\n                setEmpresas(json.data);\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    const openNew = () => {\r\n        setParte(emptyParte);\r\n        formik.resetForm();\r\n        setSubmitted(false);\r\n        setStateParte(false); \r\n        setParteDialog(true);    \r\n    }\r\n\r\n    const hideDialog = () => {\r\n        setSubmitted(false);\r\n        setParteDialog(false);\r\n    }\r\n\r\n    const showDialog = () => {\r\n        setSubmitted(true);\r\n        formik.handleSubmit();\r\n    }\r\n\r\n    const hideDeleteParteDialog = () => {\r\n        setDeleteParteDialog(false);\r\n    }\r\n\r\n    const editParte = (parte) => {\r\n        setParte({ ...parte });\r\n        setSubmitted(true);\r\n\r\n        formik.resetForm();\r\n        formik.setValues(\r\n        {\r\n            fecha:                      `${parte.fecha}`,\r\n            caratulaA:                  `${parte.caratulaA}`,\r\n            indiceA:                    `${parte.indiceA}`,\r\n            cartaA:                     `${parte.cartaA}`,\r\n            boletaA:                    `${parte.boletaA}`,\r\n            conformacionA:              `${parte.conformacionA}`,\r\n            solvenciaA:                 `${parte.solvenciaA}`,\r\n            caratulaB:                  `${parte.caratulaB}`,\r\n            indiceB:                    `${parte.indiceB}`,\r\n            propuestaServicioB:         `${parte.propuestaServicioB}`,\r\n            planificacionB:             `${parte.planificacionB}`,\r\n            propuestaEconomicaB:        `${parte.propuestaEconomicaB}`,\r\n            planPagosB:                 `${parte.planPagosB}`,\r\n            cumplimientoProponente:     `${parte.cumplimientoProponente}`,\r\n            claridadOrganizacion:       `${parte.claridadOrganizacion}`,\r\n            cumplimientoTecnico:        `${parte.cumplimientoTecnico}`,\r\n            claridadProceso:            `${parte.claridadProceso}`,\r\n            plazosEjecucion:            `${parte.plazosEjecucion}`,\r\n            precioTotal:                `${parte.precioTotal}`,\r\n            usoHerramienta:             `${parte.usoHerramienta}`,\r\n            estado:                     `${parte.estado}`,\r\n            empresa:                    `${parte.empresa}`,\r\n            user:                       `${parte.user}`\r\n        });\r\n        setParteUpdate(`${parte.estado}`);\r\n        setStateParte(true);\r\n        setParteDialog(true);\r\n    }\r\n\r\n    const confirmDeleteParte = (parte) => {\r\n        setParte(parte);\r\n        setDeleteParteDialog(true);\r\n    }\r\n\r\n    const deleteParte = () => {\r\n        let _partes = [...partes];\r\n        let _parte  = {...parte };\r\n        \r\n        if (parte.caratulaA.trim()) {\r\n            if (parte.id) {\r\n\r\n                const index = findIndexById(parte.id);\r\n                _partes[index] = _parte;\r\n\r\n                updateOrdenID(\r\n                    {\r\n                        fecha:                      `${_parte.fecha}`,\r\n                        caratulaA:                  `${_parte.caratulaA}`,\r\n                        indiceA:                    `${_parte.indiceA}`,\r\n                        cartaA:                     `${_parte.cartaA}`,\r\n                        boletaA:                    `${_parte.boletaA}`,\r\n                        conformacionA:              `${_parte.conformacionA}`,\r\n                        solvenciaA:                 `${_parte.solvenciaA}`,\r\n                        caratulaB:                  `${_parte.caratulaB}`,\r\n                        indiceB:                    `${_parte.indiceB}`,\r\n                        propuestaServicioB:         `${_parte.propuestaServicioB}`,\r\n                        planificacionB:             `${_parte.planificacionB}`,\r\n                        propuestaEconomicaB:        `${_parte.propuestaEconomicaB}`,\r\n                        planPagosB:                 `${_parte.planPagosB}`,\r\n                        cumplimientoProponente:     `${_parte.cumplimientoProponente}`,\r\n                        claridadOrganizacion:       `${_parte.claridadOrganizacion}`,\r\n                        cumplimientoTecnico:        `${_parte.cumplimientoTecnico}`,\r\n                        claridadProceso:            `${_parte.claridadProceso}`,\r\n                        plazosEjecucion:            `${_parte.plazosEjecucion}`,\r\n                        precioTotal:                `${_parte.precioTotal}`,\r\n                        usoHerramienta:             `${_parte.usoHerramienta}`,\r\n                        estado:                     \"Desactivado\",\r\n                        empresa:                    `${_parte.empresa}`,\r\n                        user:                       `${_parte.user}`\r\n                    }\r\n                    ,parte.id);\r\n                \r\n                _parte['fecha']                     = _parte.fecha;\r\n                _parte['caratulaA']                 = _parte.caratulaA;\r\n                _parte['indiceA']                   = _parte.indiceA;\r\n                _parte['cartaA']                    = _parte.cartaA;\r\n                _parte['boletaA']                   = _parte.boletaA;\r\n                _parte['conformacionA']             = _parte.conformacionA;\r\n                _parte['solvenciaA']                = _parte.solvenciaA;\r\n                _parte['caratulaB']                 = _parte.caratulaB;\r\n                _parte['indiceB']                   = _parte.indiceB;\r\n                _parte['propuestaServicioB']        = _parte.propuestaServicioB;\r\n                _parte['planificacionB']            = _parte.planificacionB;\r\n                _parte['propuestaEconomicaB']       = _parte.propuestaEconomicaB;\r\n                _parte['planPagosB']                = _parte.planPagosB;\r\n                _parte['cumplimientoProponente']    = _parte.cumplimientoProponente;\r\n                _parte['claridadOrganizacion']      = _parte.claridadOrganizacion;\r\n                _parte['cumplimientoTecnico']       = _parte.cumplimientoTecnico;\r\n                _parte['claridadProceso']           = _parte.claridadProceso;\r\n                _parte['plazosEjecucion']           = _parte.plazosEjecucion;\r\n                _parte['precioTotal']               = _parte.precioTotal;\r\n                _parte['usoHerramienta']            = _parte.usoHerramienta;\r\n                _parte['estado']                    = \"Desactivado\";\r\n                _parte['empresa']                   = _parte.empresa;\r\n                _parte['user']                      = _parte.user;\r\n                setParte({ ...parte });\r\n                toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Orden de cambio desactivado', life: 3000 });\r\n            }\r\n        }\r\n        setPartes(_partes);\r\n        setParte(emptyParte);\r\n        setDeleteParteDialog(false);\r\n        \r\n    }\r\n\r\n    const findIndexById = (id) => {\r\n        let index = -1;\r\n        for (let i = 0; i < partes.length; i++) {\r\n            if (partes[i].id === id) {\r\n\r\n                index = i;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return index;\r\n    }\r\n\r\n    const idBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">id</span>\r\n                {rowData.id}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const fechaBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Fecha</span>\r\n                {rowData.fecha}\r\n            </>\r\n        );\r\n    }\r\n\r\n\r\n    const estadoBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Estado</span>\r\n                {rowData.estado}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const empresaBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Empresa</span>\r\n                {rowData.empresa}\r\n               \r\n\r\n            </>\r\n        );\r\n    }\r\n\r\n    const userBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Usuario</span>\r\n                {rowData.user}\r\n               \r\n\r\n            </>\r\n        );\r\n    }\r\n\r\n    const leftToolbarTemplate = () => {\r\n        return (\r\n            <React.Fragment>\r\n                <Button style={props.layoutColorMode === 'light' ? {'color':'#ffffff','background': '#13af4e'} : {'color':'#ffffff','background': '#13af4e'}} label=\"Nuevo\" icon=\"pi pi-plus\" className=\"p-button-success p-mr-2\" onClick={openNew} />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    const actionBodyTemplate = (rowData) => {\r\n        return (\r\n            <div className=\"actions\">\r\n                <Button icon=\"pi pi-pencil\"    style={{'background': '#13af4e'}} className=\"p-button-rounded p-button-success mr-2\"   onClick={() => editParte(rowData)} />\r\n                <Button icon=\"pi pi-trash\"     style={{'background': '#eee500'}} className=\"p-button-rounded p-button-warning\"        onClick={() => confirmDeleteParte(rowData)} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const generatePDF = (contrato) => {\r\n        console.log(contrato.empresa)\r\n\r\n        var doc = new jsPDF();\r\n        doc.setFont(\"Arial Bold\");\r\n \r\n        doc.autoTable({ html: '#my-table' })\r\n\r\n        // Or use javascript directly:\r\n        doc.autoTable({\r\n        head: [['Name', 'Email', 'Country']],\r\n        body: [\r\n            ['David', 'david@example.com', 'Sweden'],\r\n            ['Castille', 'castille@example.com', 'Spain'],\r\n            // ...\r\n        ],\r\n        })\r\n\r\n      \r\n        doc.save('ordenDeCambio.pdf')\r\n    } \r\n\r\n    const pdfBodyTemplate = (rowData) => {\r\n        return (\r\n            <div className=\"actions\">\r\n                <Button icon=\"pi pi-file-pdf\"  style={{'background': '#ed4651'}} className=\"p-button-rounded p-button-success mr-2\"    onClick={() =>(generatePDF(rowData))}      />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const deleteParteDialogFooter = (\r\n        <>\r\n            <Button label=\"No\" icon=\"pi pi-times\" style={{'background': '#d13639','color':'#ffffff'}} className=\"p-button-text\" onClick={hideDeleteParteDialog} />\r\n            <Button label=\"Si\" icon=\"pi pi-check\" style={props.layoutColorMode === 'light' ? {'color':'#13af4e','border-color':'#13af4e'} : {'color':'#13af4e','border-color':'#13af4e'}} className=\"p-button-text\" onClick={deleteParte} />\r\n        </>\r\n    );\r\n\r\n\r\n\r\n    const renderHeader = () => {\r\n        return (\r\n            <div className=\"flex flex-column md:flex-row md:justify-content-between md:align-items-center\">\r\n            <h5 className=\"m-0\">Gestion de Orden de Cambio</h5>\r\n            <span className=\"block mt-2 md:mt-0 p-input-icon-left\">\r\n                <i className=\"pi pi-search\" />\r\n                <InputText type=\"search\" onInput={(e) => setGlobalFilter(e.target.value)} placeholder=\"Buscar...\" />\r\n            </span>\r\n        </div>\r\n        )\r\n    }\r\n\r\n    const renderHeaderEditor = () => {\r\n        return (\r\n            <span className=\"ql-formats\">\r\n                <button className=\"ql-bold\" aria-label=\"Bold\"></button>\r\n                <button className=\"ql-italic\" aria-label=\"Italic\"></button>\r\n                <button className=\"ql-underline\" aria-label=\"Underline\"></button>\r\n            </span>\r\n        );\r\n    }\r\n\r\n    const renderGroup = () => {\r\n        return (\r\n            <ColumnGroup>\r\n                <Row>\r\n                    <Column header={showHeader} colSpan={7}></Column>\r\n                </Row>\r\n                <Row>\r\n                    <Column header=\"ID\"               field=\"id\"       sortable style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                    <Column header=\"FECHA\"            field=\"fecha\"    sortable style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                    <Column header=\"ESTADO\"           field=\"estado\"   sortable style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                    <Column header=\"EMPRESA\"          field=\"empresa\"  sortable style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                    <Column header=\"USUARIO\"          field=\"user\"     sortable style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                    <Column header=\"Editar/Eliminar\"                            style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                    <Column header=\"Generar PDF\"                                style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                </Row>\r\n            </ColumnGroup>\r\n        )\r\n    }\r\n\r\n\r\n    const showHeader  = renderHeader();\r\n    const headerGroup = renderGroup();\r\n\r\n\r\n\r\n    const headerDialog =()=>{\r\n        return (stateParte)?\"Actualizando Orden de cambio\":\"Añadir Orden de cambio\"\r\n    }\r\n\r\n    return (\r\n        <div className=\"p-grid crud-demo\">\r\n            <div className=\"p-col-12\">\r\n                <div className=\"card\">\r\n                \r\n                    <Toast ref={toast} />\r\n                    <Toolbar className=\"\" left={leftToolbarTemplate}></Toolbar>\r\n\r\n                    <DataTable ref={dt} value={partes} selection={selectedPartes}  onSelectionChange={(e) => setSelectedPartes(e.value)}\r\n                        dataKey=\"id\" rowHover paginator rows={10} rowsPerPageOptions={[5, 10, 25]} className=\"datatable-responsive p-datatable-sm p-datatable-gridlines p-datatable-striped\"\r\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\r\n                        currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} parte A\" resizableColumns columnResizeMode=\"fit\" showGridlines\r\n                        globalFilter={globalFilter} emptyMessage=\"No se encontro los documentos de la Parte A\" loading={loading} headerColumnGroup={headerGroup}\r\n                        >\r\n                    \r\n                        <Column style={{width:'20%'}} field=\"id\"                 header=\"ID\"        sortable body={idBodyTemplate}></Column>\r\n                        <Column style={{width:'20%'}} field=\"fecha\"              header=\"FECHA\"     sortable body={fechaBodyTemplate}></Column>\r\n                        <Column style={{width:'20%'}} field=\"estado\"             header=\"ESTADO\"    sortable body={estadoBodyTemplate}></Column>\r\n                        <Column style={{width:'20%'}} field=\"empresa\"            header=\"EMPRESA\"   sortable body={empresaBodyTemplate}></Column>                   \r\n                        <Column style={{width:'20%'}} field=\"user\"               header=\"USUARIO\"   sortable body={userBodyTemplate}></Column>\r\n                        <Column style={{width:'20%'}} body={actionBodyTemplate}></Column>\r\n                        <Column header=\"Generar PDF\"  body={pdfBodyTemplate}></Column>\r\n\r\n                    </DataTable>\r\n\r\n\r\n                    <Dialog visible={parteDialog} style={{ width: '750px' }} header={headerDialog} modal className=\"p-fluid\" onHide={hideDialog}>\r\n                        <form onSubmit={formik.handleSubmit}>\r\n\r\n                            <div className=\"p-field mt-2\">\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <i className=\"pi pi-calendar\"></i>\r\n                                        </span>\r\n                                        <Calendar id=\"fecha\" name=\"fecha\" placeholder=\"Seleccione una fecha\" value={formik.values.fecha} onChange={formik.handleChange} locale=\"es\" dateFormat =\"mm/dd/yy\"  minDate={minDate} maxDate={maxDate} readOnlyInput/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('fecha')}\r\n                            \r\n                            <div className=\"p-field mt-2\">\r\n                                <div className=\"flex justify-content-center flex-wrap\">\r\n                                    <h5>PARTE A</h5>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"p-field mt-2\">\r\n                                <h6>Caratula</h6>\r\n                                <InputTextarea style={{ height: '100px' }} id=\"caratulaA\" name='caratulaA' placeholder=\"Ingrese la correccion de la caratula\" value={formik.values.caratulaA} onChange={formik.handleChange} autoResize/> \r\n                            </div>\r\n                            {getFormErrorMessage('caratulaA')}\r\n\r\n                            <div className=\"p-field mt-2\">\r\n                                <h6>Indice</h6>\r\n                                <InputTextarea style={{ height: '100px' }} id=\"indiceA\" name='indiceA' placeholder=\"Ingrese la correccion de la indice\" value={formik.values.indiceA} onChange={formik.handleChange} autoResize/> \r\n                            </div>\r\n                            {getFormErrorMessage('indiceA')}\r\n\r\n                            <div className=\"p-field mt-2\">\r\n                                <h6>Carta</h6>\r\n                                <InputTextarea style={{ height: '100px' }} id=\"cartaA\" name='cartaA' placeholder=\"Ingrese la correccion del carta\" value={formik.values.cartaA} onChange={formik.handleChange} autoResize/> \r\n                            </div>\r\n                            {getFormErrorMessage('cartaA')}\r\n\r\n                            <div className=\"p-field mt-2\">\r\n                                <h6>Boleta de garantia</h6>\r\n                                <InputTextarea style={{ height: '100px' }} id=\"boletaA\" name='boletaA' placeholder=\"Ingrese la correccion de la boleta de garantia\" value={formik.values.boletaA} onChange={formik.handleChange} autoResize/> \r\n                            </div>\r\n                            {getFormErrorMessage('boletaA')}\r\n\r\n                            \r\n                            <div className=\"p-field mt-2\">\r\n                                <h6>Conformacion del grupo empresa</h6>\r\n                                <InputTextarea style={{ height: '100px' }} id=\"conformacionA\" name='conformacionA' placeholder=\"Ingrese la correccion de la conformacion del grupo empresa\" value={formik.values.conformacionA} onChange={formik.handleChange} autoResize/> \r\n                            </div>\r\n                            {getFormErrorMessage('conformacionA')}\r\n\r\n                            <div className=\"p-field mt-2\">\r\n                                <h6>Solvencia tecnica</h6>\r\n                                <InputTextarea style={{ height: '100px' }} id=\"solvenciaA\" name='solvenciaA' placeholder=\"Ingrese la correccion de la solvencia tecnica\" value={formik.values.solvenciaA} onChange={formik.handleChange} autoResize/> \r\n                            </div>\r\n                            {getFormErrorMessage('solvenciaA')}\r\n\r\n                            <div className=\"p-field mt-2\">\r\n                                <div className=\"flex justify-content-center flex-wrap\">\r\n                                    <h5>PARTE B</h5>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"p-field mt-2\">\r\n                                <h6>Caratula</h6>\r\n                                <InputTextarea style={{ height: '100px' }} id=\"caratulaB\" name='caratulaB' placeholder=\"Ingrese la correccion de la caratula\" value={formik.values.caratulaB} onChange={formik.handleChange} autoResize/> \r\n                            </div>\r\n                            {getFormErrorMessage('caratulaB')}\r\n\r\n                            <div className=\"p-field mt-2\">\r\n                                <h6>Indice</h6>\r\n                                <InputTextarea style={{ height: '100px' }} id=\"indiceB\" name='indiceB' placeholder=\"Ingrese la correccion del indice\" value={formik.values.indiceB} onChange={formik.handleChange} autoResize/> \r\n                            </div>\r\n                            {getFormErrorMessage('indiceB')}\r\n\r\n                            <div className=\"p-field mt-2\">\r\n                                <h6>Propuesta de servicio</h6>\r\n                                <InputTextarea style={{ height: '100px' }} id=\"propuestaServicioB\" name='propuestaServicioB' placeholder=\"Ingrese la correccion de la propuesta de servicio\" value={formik.values.propuestaServicioB} onChange={formik.handleChange} autoResize/> \r\n                            </div>\r\n                            {getFormErrorMessage('propuestaServicioB')}\r\n\r\n                            <div className=\"p-field mt-2\">\r\n                                <h6>Planificacion</h6>\r\n                                <InputTextarea style={{ height: '100px' }} id=\"planificacionB\" name='planificacionB' placeholder=\"Ingrese la correccion de la planificacion\" value={formik.values.planificacionB} onChange={formik.handleChange} autoResize/> \r\n                            </div>\r\n                            {getFormErrorMessage('planificacionB')}\r\n\r\n                            <div className=\"p-field mt-2\">\r\n                                <h6>Propuesta economica</h6>\r\n                                <InputTextarea style={{ height: '100px' }} id=\"propuestaEconomicaB\" name='propuestaEconomicaB' placeholder=\"Ingrese la correccion de la propuesta economica\" value={formik.values.propuestaEconomicaB} onChange={formik.handleChange} autoResize/> \r\n                            </div>\r\n                            {getFormErrorMessage('propuestaEconomicaB')}\r\n\r\n                            <div className=\"p-field mt-2\">\r\n                                <h6>Plan de pagos</h6>\r\n                                <InputTextarea style={{ height: '100px' }} id=\"planPagosB\" name='planPagosB' placeholder=\"Ingrese la correccion del plan de pagos\" value={formik.values.planPagosB} onChange={formik.handleChange} autoResize/> \r\n                            </div>\r\n                            {getFormErrorMessage('planPagosB')}\r\n\r\n                            <div className=\"p-field mt-2\">\r\n                                <div className=\"flex justify-content-center flex-wrap\">\r\n                                    <h5>PUNTAJE</h5>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"p-field mt-2\">\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <i className=\"pi pi-pencil\"></i>\r\n                                        </span>\r\n                                        <Dropdown id=\"cumplimientoProponente\" name=\"cumplimientoProponente\" placeholder=\"Puntuacion para el cumplimiento de espeficicaciones\" value={formik.values.cumplimientoProponente} onChange={formik.handleChange} options={puntuacion1} optionLabel=\"name\"  optionValue=\"name\"/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('cumplimientoProponente')}\r\n\r\n                            <div className=\"p-field mt-2\">\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <i className=\"pi pi-pencil\"></i>\r\n                                        </span>\r\n                                        <Dropdown id=\"claridadOrganizacion\" name=\"claridadOrganizacion\" placeholder=\"Puntuacion para la clarida de organizacion\" value={formik.values.claridadOrganizacion} onChange={formik.handleChange} options={puntuacion2} optionLabel=\"name\"  optionValue=\"name\"/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('claridadOrganizacion')}\r\n\r\n                            <div className=\"p-field mt-2\">\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <i className=\"pi pi-pencil\"></i>\r\n                                        </span>\r\n                                        <Dropdown id=\"cumplimientoTecnico\" name=\"cumplimientoTecnico\" placeholder=\"Puntuacion para el cumplimiento de especificaciones tecnicas\" value={formik.values.cumplimientoTecnico} onChange={formik.handleChange} options={puntuacion3} optionLabel=\"name\"  optionValue=\"name\"/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('cumplimientoTecnico')}\r\n\r\n                            <div className=\"p-field mt-2\">\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <i className=\"pi pi-pencil\"></i>\r\n                                        </span>\r\n                                        <Dropdown id=\"claridadProceso\" name=\"claridadProceso\" placeholder=\"Puntuacion para la claridad de proceso de desarrollo\" value={formik.values.claridadProceso} onChange={formik.handleChange} options={puntuacion4} optionLabel=\"name\"  optionValue=\"name\"/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('claridadProceso')}\r\n\r\n                            <div className=\"p-field mt-2\">\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <i className=\"pi pi-pencil\"></i>\r\n                                        </span>\r\n                                        <Dropdown id=\"plazosEjecucion\" name=\"plazosEjecucion\" placeholder=\"Puntuacion para los plazos de ejecucion\" value={formik.values.plazosEjecucion} onChange={formik.handleChange} options={puntuacion5} optionLabel=\"name\"  optionValue=\"name\"/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('plazosEjecucion')}\r\n\r\n                            <div className=\"p-field mt-2\">\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <i className=\"pi pi-pencil\"></i>\r\n                                        </span>\r\n                                        <Dropdown id=\"precioTotal\" name=\"precioTotal\" placeholder=\"Puntuacion para los precios totales\" value={formik.values.precioTotal} onChange={formik.handleChange} options={puntuacion6} optionLabel=\"name\"  optionValue=\"name\"/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('precioTotal')}\r\n\r\n                            <div className=\"p-field mt-2\">\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <i className=\"pi pi-pencil\"></i>\r\n                                        </span>\r\n                                        <Dropdown id=\"usoHerramienta\" name=\"usoHerramienta\" placeholder=\"Puntuacion para el uso de herramientas\" value={formik.values.usoHerramienta} onChange={formik.handleChange} options={puntuacion7} optionLabel=\"name\"  optionValue=\"name\"/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('usoHerramienta')}\r\n\r\n\r\n                            {(stateParte)?(\r\n                                <div className=\"form-group\">\r\n                                    <div className=\"p-field mt-2\">\r\n                                        <div className=\"p-inputgroup\">\r\n                                            <span className=\"p-inputgroup-addon\">\r\n                                                <img   src={props.layoutColorMode === 'light' ? 'assets/layout/images/estado.png' : 'assets/layout/images/estado-dark.png'} style={{'height': '1.2em','width':'1.2em',}}/>   \r\n                                            </span>\r\n                                            <Dropdown id=\"estado\" name=\"estado\" placeholder=\"Seleccione un estado\" value={formik.values.estado} onChange={formik.handleChange} options={estados} optionLabel=\"name\"  optionValue=\"name\"/> \r\n                                        </div>       \r\n                                    </div>\r\n                                    {getFormErrorMessage('estado')}\r\n                                </div>\r\n                            ):\r\n                                null\r\n                            }\r\n\r\n                            <div className=\"p-field mt-2\">\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <i className=\"pi pi-briefcase\"></i>\r\n                                        </span>\r\n                                        <Dropdown id=\"empresa\" name=\"empresa\" placeholder=\"Seleccione una empresa\" value={formik.values.empresa} onChange={formik.handleChange} options={empresas} optionLabel=\"nombre\"  optionValue=\"id\"/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('empresa')}\r\n\r\n                            <div className=\"p-field mt-2\">\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <i className=\"pi pi-user\"></i>\r\n                                        </span>\r\n                                        <Dropdown id=\"user\" name=\"user\" placeholder=\"Seleccione un usuario\" value={formik.values.user} onChange={formik.handleChange} options={users} optionLabel=\"nombre\"  optionValue=\"id\"/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('user')}\r\n\r\n\r\n                            <div className='mt-2'>\r\n                                <div className=\"flex justify-content-center flex-wrap\">\r\n                                    <div className=\"flex align-items-center justify-content-center  m-2\">\r\n                                        <Button label=\"Cancelar\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDialog} style={props.layoutColorMode === 'light' ? {'color':'#d13639','border-color':'#d13639'} : {'color':'#d13639','border-color':'#d13639'}}/>\r\n                                    </div>\r\n                                    <div className=\"flex align-items-center justify-content-center  m-2\">\r\n                                        <Button label=\"Guardar\"  icon=\"pi pi-check\" type=\"submit\" className=\"p-button-text\" onClick={showDialog} style={{'background': '#13af4e','color':'#ffffff'}}/>  \r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </Dialog>\r\n\r\n\r\n                    <Dialog className=\"mt-2\" visible={deleteParteDialog} style={{ width: '450px' }} header=\"Confirm\" modal footer={deleteParteDialogFooter} onHide={hideDeleteParteDialog}>\r\n                        <div className=\"confirmation-content\">\r\n                            <i className=\"pi pi-exclamation-triangle p-mr-3\" style={{ fontSize: '2rem' }} />\r\n                            {parte && <span>¿Estás segura de que quieres eliminar? <b>{parte.id}</b>?</span>}\r\n                        </div>\r\n                    </Dialog>\r\n    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import axios from 'axios';\r\n\r\n export const getPlans = () =>{\r\n     return axios.get('https://magic-tech-backend.herokuapp.com/api/getPlans');\r\n }\r\n\r\n export const getPlanID =(id) =>{\r\n     return axios.get(`https://magic-tech-backend.herokuapp.com/api/getPlanId/${id}`);\r\n }\r\n\r\n\r\n\r\n export const createPlan=(data)=>{\r\n    return axios.post('https://magic-tech-backend.herokuapp.com/api/createPlan', \r\n      {\r\n         id:     `${data.id}`,\r\n         link:   `${data.link}`,\r\n         estado: `${data.estado}`,\r\n         user:   `${data.user}`\r\n       \r\n      }\r\n      )\r\n      .then(function (response) {\r\n        console.log(response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n }\r\n\r\nexport const updatePlanID =(data,id) =>{\r\n    return axios.put(`https://magic-tech-backend.herokuapp.com/api/updatePlan/${id}`, \r\n    {\r\n        link:   `${data.link}`,\r\n        estado: `${data.estado}`,\r\n        user:   `${data.user}`\r\n    }\r\n    )\r\n    .then(function (response) {\r\n      console.log(response);\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error);\r\n    });\r\n}\r\n\r\nexport const deletePlanID =(id) =>{\r\n    return axios.delete(`https://magic-tech-backend.herokuapp.com/api/deletePlanId/${id}`);\r\n}\r\n\r\nexport const getPlansActivas = () =>{\r\n  return axios.get('https://magic-tech-backend.herokuapp.com/api/getPlansActivas');\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport classNames           from 'classnames';\r\nimport { DataTable }        from 'primereact/datatable';\r\nimport { Column }           from 'primereact/column';\r\nimport { Toast }            from 'primereact/toast';\r\nimport { Button }           from 'primereact/button';\r\nimport { Toolbar }          from 'primereact/toolbar';\r\nimport { Dialog }           from 'primereact/dialog';\r\nimport { InputText }        from 'primereact/inputtext';\r\nimport { InputTextarea }    from 'primereact/inputtextarea';\r\nimport { Password }         from 'primereact/password';\r\nimport { ColumnGroup }      from 'primereact/columngroup';\r\nimport { Calendar }         from 'primereact/calendar';\r\nimport { Row }              from 'primereact/row';\r\nimport { Dropdown }         from 'primereact/dropdown';\r\nimport { addLocale }        from 'primereact/api';\r\nimport { useFormik }        from \"formik\";\r\nimport { Link }             from 'react-router-dom';\r\n\r\nimport uniqid               from 'uniqid';\r\n\r\nimport { getPlans,createPlan,updatePlanID} from '../service/apiPlan';\r\nimport { getUsersActivas  } from '../service/apiUser';\r\n\r\n\r\nexport const Plan = (props) => {\r\n\r\n    let emptyParte = {\r\n        id:            null,\r\n        link:         '',\r\n        estado:       '',\r\n        user:         ''\r\n    };\r\n\r\n    const estados = [\r\n        { name: \"Activo\"      },\r\n        { name: \"Desactivado\" }\r\n    ];\r\n\r\n    addLocale('es', {\r\n        firstDayOfWeek: 1,\r\n        dayNames: ['domingo', 'lunes', 'martes', 'miércoles', 'jueves', 'viernes', 'sábado'],\r\n        dayNamesShort: ['dom', 'lun', 'mar', 'mié', 'jue', 'vie', 'sáb'],\r\n        dayNamesMin: ['D', 'L', 'M', 'X', 'J', 'V', 'S'],\r\n        monthNames: ['enero', 'febrero', 'marzo', 'abril', 'mayo', 'junio', 'julio', 'agosto', 'septiembre', 'octubre', 'noviembre', 'diciembre'],\r\n        monthNamesShort: ['ene', 'feb', 'mar', 'abr', 'may', 'jun', 'jul', 'ago', 'sep', 'oct', 'nov', 'dic'],\r\n        today: 'Hoy',\r\n        clear: 'Claro'\r\n    });\r\n\r\n    const [partes, setPartes]                          = useState(null);\r\n    const [users, setUsers]                            = useState(null);\r\n\r\n    const [globalFilter, setGlobalFilter]              = useState('');\r\n    const [loading, setLoading]                        = useState(true);\r\n    const [parteDialog, setParteDialog]                = useState(false);\r\n    const [deleteParteDialog, setDeleteParteDialog]    = useState(false);\r\n\r\n    const [parte, setParte]                            = useState(emptyParte);\r\n    const [selectedPartes, setSelectedPartes]          = useState(null);\r\n    const [submitted, setSubmitted]                    = useState(false);\r\n    const toast                                        = useRef(null);\r\n    const dt                                           = useRef(null);\r\n    const [stateParte,setStateParte]                   = useState(false);\r\n    const [parteUpdate, setParteUpdate]                = useState(\"\");\r\n    const options1 = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\r\n    const options2 = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            link:         '',\r\n            estado:       '',\r\n            user:         ''\r\n        },\r\n         validate: (data) => {\r\n            let errors = {};\r\n\r\n            if(stateParte){\r\n\r\n                if (!data.link) {\r\n                    errors.link = \"Se requiere el link\";\r\n                }else if (data.link.length > 500) {\r\n                    errors.link = \"Como maximo 500 caracteres\";\r\n                }else if (!/^(ftp|http|https):\\/\\/[^ \"]+$/.test(data.link)) {\r\n                errors.link = \"El link no es valido\";\r\n                }\r\n\r\n                if (!data.estado) {\r\n                    errors.estado = \"Se requiere el estado\";\r\n                } else if (data.estado.length < 2) {\r\n                    errors.estado = \"Como minimo 2 caracteres\";\r\n                } else if (data.estado.length > 30) {\r\n                    errors.estado = \"Como maximo 30 caracteres\";\r\n                } else if (!/^^[a-zA-Z\\s]+$/i.test(data.estado)) {\r\n                    errors.estado = \"No se permiten numero o caracteres especiales\";\r\n                }\r\n                \r\n\r\n                if (!data.user) {\r\n                    errors.user = \"Se requiere el usuario\";\r\n                } else if (data.user.length < 2) {\r\n                    errors.user = \"Como minimo 2 caracteres\";\r\n                } else if (data.user.length > 30) {\r\n                    errors.user = \"Como maximo 30 caracteres\";\r\n                }else if (!/^^[a-zA-Z0-9\\s-]+$/i.test(data.user)) {\r\n                    errors.user = \"No se permiten numero o caracteres especiales\";\r\n                }\r\n\r\n            }else{\r\n\r\n                if (!data.link) {\r\n                    errors.link = \"Se requiere el link\";\r\n                }else if (data.link.length > 500) {\r\n                    errors.link = \"Como maximo 500 caracteres\";\r\n                }else if (!/^(ftp|http|https):\\/\\/[^ \"]+$/.test(data.link)) {\r\n                errors.link = \"El link no es valido\";\r\n                }\r\n\r\n                if (!data.user) {\r\n                    errors.user = \"Se requiere el usuario\";\r\n                } else if (data.user.length < 2) {\r\n                    errors.user = \"Como minimo 2 caracteres\";\r\n                } else if (data.user.length > 30) {\r\n                    errors.user = \"Como maximo 30 caracteres\";\r\n                }else if (!/^^[a-zA-Z0-9\\s-]+$/i.test(data.user)) {\r\n                    errors.user = \"No se permiten numero o caracteres especiales\";\r\n                }\r\n\r\n            }\r\n\r\n            return errors;\r\n        },\r\n\r\n        onSubmit: (data) => {\r\n            console.log(data);\r\n            if(submitted === true){\r\n                \r\n                let _partes = [...partes];\r\n                let _parte  = {...parte };\r\n\r\n                _parte['link']        = data.link;\r\n                _parte['estado']      = data.estado;\r\n                _parte['user']        = data.user;\r\n                console.log(_parte);\r\n\r\n                if (_parte.link.trim()) {\r\n                    if (parte.id) {\r\n\r\n                        setParte({ ...parte });\r\n                        const index = findIndexById(parte.id);\r\n                        _partes[index] = _parte;\r\n\r\n                        updatePlanID({link:`${_parte.link}`,estado:`${_parte.estado}`,user:`${_parte.user}`},parte.id);\r\n                        toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Plan de pago Actualizado', life: 3000 });\r\n                    }\r\n                    else {\r\n\r\n                        _parte.id        = uniqid(\"plan-\");\r\n                        _parte.estado    = \"Activo\"; \r\n                        _partes.push(_parte);\r\n                        createPlan({id:`${_parte.id}`,link:`${_parte.link}`,estado:`${_parte.estado}`,user:`${_parte.user}`});\r\n                        toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Plan de pago Creado', life: 3000 });\r\n                    }\r\n                }\r\n                setPartes(_partes);\r\n                setParteDialog(false);\r\n                setParte(emptyParte);\r\n                formik.resetForm();\r\n        }\r\n            \r\n        },\r\n      });\r\n\r\n    const isFormFieldValid = (name) => !!(formik.touched[name] && formik.errors[name]);\r\n    const getFormErrorMessage = (name) => {\r\n        return isFormFieldValid(name) && <small className=\"ml-1 p-error\" style={{'color': '#ff0000'}}>{formik.errors[name]}</small>;\r\n    };\r\n\r\n    useEffect(()=>{\r\n        fetchPartes();\r\n    },[])\r\n\r\n    const fetchPartes = () =>{\r\n        getPlans().then(json =>{\r\n            if(json.error){\r\n                console.log(\"Error\");\r\n            }else{\r\n                console.log(\"---------Plan de pagos insertados-----------\");\r\n                setPartes(json.data);\r\n                setLoading(false);\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        fetchUsers();\r\n    },[])\r\n\r\n    const fetchUsers = () =>{\r\n        getUsersActivas().then(json =>{\r\n            if(json.error){\r\n                console.log(\"Error\");\r\n            }else{\r\n                console.log(\"---------Users insertados-----------\");\r\n                setUsers(json.data);\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    const openNew = () => {\r\n        setParte(emptyParte);\r\n        formik.resetForm();\r\n        setSubmitted(false);\r\n        setStateParte(false); \r\n        setParteDialog(true);    \r\n    }\r\n\r\n    const hideDialog = () => {\r\n        setSubmitted(false);\r\n        setParteDialog(false);\r\n    }\r\n\r\n    const showDialog = () => {\r\n        setSubmitted(true);\r\n        formik.handleSubmit();\r\n    }\r\n\r\n    const hideDeleteParteDialog = () => {\r\n        setDeleteParteDialog(false);\r\n    }\r\n\r\n    const editParte = (parte) => {\r\n        setParte({ ...parte });\r\n        setSubmitted(true);\r\n\r\n        formik.resetForm();\r\n        formik.setValues(\r\n        {\r\n            link:        `${parte.link}`,\r\n            estado:      `${parte.estado}`,\r\n            user:        `${parte.user}`\r\n        });\r\n        setParteUpdate(`${parte.estado}`);\r\n        setStateParte(true);\r\n        setParteDialog(true);\r\n    }\r\n\r\n    const confirmDeleteParte = (parte) => {\r\n        setParte(parte);\r\n        setDeleteParteDialog(true);\r\n    }\r\n\r\n    const deleteParte = () => {\r\n        let _partes = [...partes];\r\n        let _parte  = {...parte };\r\n        \r\n        if (parte.link.trim()) {\r\n            if (parte.id) {\r\n\r\n                const index = findIndexById(parte.id);\r\n                _partes[index] = _parte;\r\n                updatePlanID({link:`${_parte.link}`,estado:\"Desactivado\",user:`${_parte.user}`},parte.id);\r\n                _parte['link']        = _parte.link;\r\n                _parte['estado']      = \"Desactivado\";\r\n                _parte['user']        = _parte.user;\r\n                setParte({ ...parte });\r\n                toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Plan de pago desactivado', life: 3000 });\r\n            }\r\n        }\r\n        setPartes(_partes);\r\n        setParte(emptyParte);\r\n        setDeleteParteDialog(false);\r\n        \r\n    }\r\n\r\n    const findIndexById = (id) => {\r\n        let index = -1;\r\n        for (let i = 0; i < partes.length; i++) {\r\n            if (partes[i].id === id) {\r\n\r\n                index = i;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return index;\r\n    }\r\n\r\n    const idBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">id</span>\r\n                {rowData.id}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const linkBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Link</span>\r\n                <Button label=\"Ver documento\" className=\"p-button-link\" onClick={() => window.open(`${rowData.link}`)} style={props.layoutColorMode === 'light' ? {'color':'#495057', 'font-weight': 'bold' , 'text-align': 'justify'} : {'color':'#ffffff', 'font-weight': 'bold' , 'text-align': 'justify'}}/>      \r\n            </>\r\n        );\r\n    }\r\n\r\n    const estadoBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Estado</span>\r\n                {rowData.estado}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const userBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Usuario</span>\r\n                {rowData.user}\r\n               \r\n\r\n            </>\r\n        );\r\n    }\r\n\r\n    const leftToolbarTemplate = () => {\r\n        return (\r\n            <React.Fragment>\r\n                <Button style={props.layoutColorMode === 'light' ? {'color':'#ffffff','background': '#13af4e'} : {'color':'#ffffff','background': '#13af4e'}} label=\"Nuevo\" icon=\"pi pi-plus\" className=\"p-button-success p-mr-2\" onClick={openNew} />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    const actionBodyTemplate = (rowData) => {\r\n        return (\r\n            <div className=\"actions\">\r\n                <Button icon=\"pi pi-pencil\" style={{'background': '#13af4e'}} className=\"p-button-rounded p-button-success mr-2\"   onClick={() => editParte(rowData)} />\r\n                <Button icon=\"pi pi-trash\"  style={{'background': '#eee500'}} className=\"p-button-rounded p-button-warning\"        onClick={() => confirmDeleteParte(rowData)} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const deleteParteDialogFooter = (\r\n        <>\r\n            <Button label=\"No\" icon=\"pi pi-times\" style={{'background': '#d13639','color':'#ffffff'}} className=\"p-button-text\" onClick={hideDeleteParteDialog} />\r\n            <Button label=\"Si\" icon=\"pi pi-check\" style={props.layoutColorMode === 'light' ? {'color':'#13af4e','border-color':'#13af4e'} : {'color':'#13af4e','border-color':'#13af4e'}} className=\"p-button-text\" onClick={deleteParte} />\r\n        </>\r\n    );\r\n\r\n\r\n\r\n    const renderHeader = () => {\r\n        return (\r\n            <div className=\"flex flex-column md:flex-row md:justify-content-between md:align-items-center\">\r\n            <h5 className=\"m-0\">Gestion de plan de pagos</h5>\r\n            <span className=\"block mt-2 md:mt-0 p-input-icon-left\">\r\n                <i className=\"pi pi-search\" />\r\n                <InputText type=\"search\" onInput={(e) => setGlobalFilter(e.target.value)} placeholder=\"Buscar...\" />\r\n            </span>\r\n        </div>\r\n        )\r\n    }\r\n\r\n    const renderGroup = () => {\r\n        return (\r\n            <ColumnGroup>\r\n                <Row>\r\n                    <Column header={showHeader} colSpan={5}></Column>\r\n                </Row>\r\n                <Row>\r\n                    <Column header=\"ID\"                   field=\"id\"            sortable style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                    <Column header=\"LINK\"                 field=\"link\"          sortable style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                    <Column header=\"ESTADO\"               field=\"estado\"        sortable style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                    <Column header=\"USUARIO\"              field=\"user\"          sortable style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                    <Column header=\"Editar/Eliminar\"                                     style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                </Row>\r\n            </ColumnGroup>\r\n        )\r\n    }\r\n\r\n\r\n    const showHeader  = renderHeader();\r\n    const headerGroup = renderGroup();\r\n\r\n\r\n\r\n    const headerDialog =()=>{\r\n        return (stateParte)?\"Actualizando Plan de pagos\":\"Añadir Plan de pagos\"\r\n    }\r\n\r\n    return (\r\n        <div className=\"p-grid crud-demo\">\r\n            <div className=\"p-col-12\">\r\n                <div className=\"card\">\r\n                \r\n                    <Toast ref={toast} />\r\n                    <Toolbar className=\"\" left={leftToolbarTemplate}></Toolbar>\r\n\r\n                    <DataTable ref={dt} value={partes} selection={selectedPartes}  onSelectionChange={(e) => setSelectedPartes(e.value)}\r\n                        dataKey=\"id\" rowHover paginator rows={10} rowsPerPageOptions={[5, 10, 25]} className=\"datatable-responsive p-datatable-sm p-datatable-gridlines p-datatable-striped\"\r\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\r\n                        currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} plan de pagos\" resizableColumns columnResizeMode=\"fit\" showGridlines\r\n                        globalFilter={globalFilter} emptyMessage=\"No se encontro los documentos de la Parte A\" loading={loading} headerColumnGroup={headerGroup}\r\n                        >\r\n                    \r\n                        <Column style={{width:'20%'}} field=\"id\"                    header=\"ID\"                 sortable body={idBodyTemplate}></Column>\r\n                        <Column style={{width:'20%'}} field=\"link\"                  header=\"LINK\"               sortable body={linkBodyTemplate}></Column>\r\n                        <Column style={{width:'20%'}} field=\"estado\"                header=\"ESTADO\"             sortable body={estadoBodyTemplate}></Column>\r\n                        <Column style={{width:'20%'}} field=\"user\"                  header=\"USUARIO\"            sortable body={userBodyTemplate}></Column> \r\n                        <Column style={{width:'20%'}} body={actionBodyTemplate}></Column>\r\n\r\n                    </DataTable>\r\n\r\n\r\n                    <Dialog visible={parteDialog} style={{ width: '450px' }} header={headerDialog} modal className=\"p-fluid\" onHide={hideDialog}>\r\n                        <form onSubmit={formik.handleSubmit}>\r\n\r\n                            <div className=\"p-field mt-2\">\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <i className=\"pi pi-link\"></i>\r\n                                        </span>\r\n                                        <InputTextarea id=\"link\" name='link' placeholder=\"Link\"  value={formik.values.link} onChange={formik.handleChange}/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('link')}\r\n                            \r\n                            {(stateParte)?(\r\n                                <div className=\"form-group\">\r\n                                    <div className=\"p-field mt-2\">\r\n                                        <div className=\"p-inputgroup\">\r\n                                            <span className=\"p-inputgroup-addon\">\r\n                                                <img   src={props.layoutColorMode === 'light' ? 'assets/layout/images/estado.png' : 'assets/layout/images/estado-dark.png'} style={{'height': '1.2em','width':'1.2em',}}/>   \r\n                                            </span>\r\n                                            <Dropdown id=\"estado\" name=\"estado\" placeholder=\"Seleccione un estado\" value={formik.values.estado} onChange={formik.handleChange} options={estados} optionLabel=\"name\"  optionValue=\"name\"/> \r\n                                        </div>       \r\n                                    </div>\r\n                                    {getFormErrorMessage('estado')}\r\n                                </div>\r\n                            ):\r\n                                null\r\n                            }\r\n\r\n                            <div className=\"p-field mt-2\">\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <i className=\"pi pi-user\"></i>\r\n                                        </span>\r\n                                        <Dropdown id=\"user\" name=\"user\" placeholder=\"Seleccione un usuario\" value={formik.values.user} onChange={formik.handleChange} options={users} optionLabel=\"nombre\"  optionValue=\"id\"/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('user')}\r\n\r\n\r\n                            <div className='mt-2'>\r\n                                <div className=\"flex justify-content-center flex-wrap\">\r\n                                    <div className=\"flex align-items-center justify-content-center  m-2\">\r\n                                        <Button label=\"Cancelar\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDialog} style={props.layoutColorMode === 'light' ? {'color':'#d13639','border-color':'#d13639'} : {'color':'#d13639','border-color':'#d13639'}}/>\r\n                                    </div>\r\n                                    <div className=\"flex align-items-center justify-content-center  m-2\">\r\n                                        <Button label=\"Guardar\"  icon=\"pi pi-check\" type=\"submit\" className=\"p-button-text\" onClick={showDialog} style={{'background': '#13af4e','color':'#ffffff'}}/>  \r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </Dialog>\r\n\r\n\r\n                    <Dialog className=\"mt-2\" visible={deleteParteDialog} style={{ width: '450px' }} header=\"Confirm\" modal footer={deleteParteDialogFooter} onHide={hideDeleteParteDialog}>\r\n                        <div className=\"confirmation-content\">\r\n                            <i className=\"pi pi-exclamation-triangle p-mr-3\" style={{ fontSize: '2rem' }} />\r\n                            {parte && <span>¿Estás segura de que quieres eliminar? <b>{parte.id}</b>?</span>}\r\n                        </div>\r\n                    </Dialog>\r\n    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import axios from 'axios';\r\n\r\n export const getEntregaAs = () =>{\r\n     return axios.get('https://magic-tech-backend.herokuapp.com/api/getEntregaAs');\r\n }\r\n\r\n export const getEntregaAID =(id) =>{\r\n     return axios.get(`https://magic-tech-backend.herokuapp.com/api/getEntregaAId/${id}`);\r\n }\r\n\r\n\r\n\r\n export const createEntregaA=(data)=>{\r\n    return axios.post('https://magic-tech-backend.herokuapp.com/api/createEntregaA', \r\n      {\r\n         id:          `${data.id}`,\r\n         link:        `${data.link}`,\r\n         fechaInicio: `${data.fechaInicio}`,\r\n         fechaCierre: `${data.fechaCierre}`,\r\n         estado:      `${data.estado}`,\r\n         user:        `${data.user}`\r\n      }\r\n      )\r\n      .then(function (response) {\r\n        console.log(response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n }\r\n\r\nexport const updateEntregaAID =(data,id) =>{\r\n    return axios.put(`https://magic-tech-backend.herokuapp.com/api/updateEntregaA/${id}`, \r\n    {\r\n        link:        `${data.link}`,\r\n        fechaInicio: `${data.fechaInicio}`,\r\n        fechaCierre: `${data.fechaCierre}`,\r\n        estado:      `${data.estado}`,\r\n        user:        `${data.user}`\r\n    }\r\n    )\r\n    .then(function (response) {\r\n      console.log(response);\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error);\r\n    });\r\n}\r\n\r\nexport const deleteEntregaAID =(id) =>{\r\n    return axios.delete(`https://magic-tech-backend.herokuapp.com/api/deleteEntregaAId/${id}`);\r\n}\r\n\r\nexport const getEntregaAsActivas = () =>{\r\n  return axios.get('https://magic-tech-backend.herokuapp.com/api/getEntregaAsActivas');\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport classNames           from 'classnames';\r\nimport { DataTable }        from 'primereact/datatable';\r\nimport { Column }           from 'primereact/column';\r\nimport { Toast }            from 'primereact/toast';\r\nimport { Button }           from 'primereact/button';\r\nimport { Toolbar }          from 'primereact/toolbar';\r\nimport { Dialog }           from 'primereact/dialog';\r\nimport { InputText }        from 'primereact/inputtext';\r\nimport { InputTextarea }    from 'primereact/inputtextarea';\r\nimport { Password }         from 'primereact/password';\r\nimport { ColumnGroup }      from 'primereact/columngroup';\r\nimport { Calendar }         from 'primereact/calendar';\r\nimport { Row }              from 'primereact/row';\r\nimport { Dropdown }         from 'primereact/dropdown';\r\nimport { addLocale }        from 'primereact/api';\r\nimport { useFormik }        from \"formik\";\r\nimport { Link }             from 'react-router-dom';\r\n\r\nimport uniqid               from 'uniqid';\r\n\r\nimport { getEntregaAs,updateEntregaAID,createEntregaA} from '../service/apiSobreA';\r\nimport { getUsersActivas  } from '../service/apiUser';\r\n\r\n\r\nexport const ParteA = (props) => {\r\n\r\n    let emptyParte = {\r\n        id:            null,\r\n        link:         '',\r\n        fechaInicio:  '',\r\n        fechaCierre:  '',\r\n        estado:       '',\r\n        user:         ''\r\n    };\r\n\r\n    const estados = [\r\n        { name: \"Activo\"      },\r\n        { name: \"Desactivado\" }\r\n    ];\r\n\r\n    addLocale('es', {\r\n        firstDayOfWeek: 1,\r\n        dayNames: ['domingo', 'lunes', 'martes', 'miércoles', 'jueves', 'viernes', 'sábado'],\r\n        dayNamesShort: ['dom', 'lun', 'mar', 'mié', 'jue', 'vie', 'sáb'],\r\n        dayNamesMin: ['D', 'L', 'M', 'X', 'J', 'V', 'S'],\r\n        monthNames: ['enero', 'febrero', 'marzo', 'abril', 'mayo', 'junio', 'julio', 'agosto', 'septiembre', 'octubre', 'noviembre', 'diciembre'],\r\n        monthNamesShort: ['ene', 'feb', 'mar', 'abr', 'may', 'jun', 'jul', 'ago', 'sep', 'oct', 'nov', 'dic'],\r\n        today: 'Hoy',\r\n        clear: 'Claro'\r\n    });\r\n\r\n    const [partes, setPartes]                          = useState(null);\r\n    const [users, setUsers]                            = useState(null);\r\n\r\n    const [globalFilter, setGlobalFilter]              = useState('');\r\n    const [loading, setLoading]                        = useState(true);\r\n    const [parteDialog, setParteDialog]                = useState(false);\r\n    const [deleteParteDialog, setDeleteParteDialog]    = useState(false);\r\n\r\n    const [parte, setParte]                            = useState(emptyParte);\r\n    const [selectedPartes, setSelectedPartes]          = useState(null);\r\n    const [submitted, setSubmitted]                    = useState(false);\r\n    const toast                                        = useRef(null);\r\n    const dt                                           = useRef(null);\r\n    const [stateParte,setStateParte]                   = useState(false);\r\n    const [parteUpdate, setParteUpdate]                = useState(\"\");\r\n    const options1 = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\r\n    const options2 = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\r\n\r\n\r\n    let today = new Date();\r\n    let month = today.getMonth();\r\n    let year = today.getFullYear();\r\n    let prevMonth = (month === 0) ? 11 : month - 0;\r\n    let prevYear = (prevMonth === 11) ? year - 0 : year;\r\n    let nextMonth = (month === 11) ? 0 : month + 1;\r\n    let nextYear = (nextMonth === 0) ? year + 1 : year;\r\n\r\n    let minDate = new Date();\r\n    minDate.setMonth(prevMonth);\r\n    minDate.setFullYear(prevYear);\r\n\r\n    let maxDate = new Date();\r\n    maxDate.setMonth(nextMonth);\r\n    maxDate.setFullYear(nextYear);\r\n\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            link:         '',\r\n            fechaInicio:  '',\r\n            fechaCierre:  '',\r\n            estado:       '',\r\n            user:         ''\r\n        },\r\n         validate: (data) => {\r\n            let errors = {};\r\n\r\n            if(stateParte){\r\n\r\n                if (!data.link) {\r\n                    errors.link = \"Se requiere el link\";\r\n                }else if (data.link.length > 500) {\r\n                    errors.link = \"Como maximo 500 caracteres\";\r\n                }else if (!/^(ftp|http|https):\\/\\/[^ \"]+$/.test(data.link)) {\r\n                errors.link = \"El link no es valido\";\r\n                }\r\n\r\n                if (!data.fechaInicio) {\r\n                    errors.fechaInicio = \"Se requiere la fecha de inicio\";\r\n                } \r\n\r\n                if (!data.fechaCierre) {\r\n                    errors.fechaCierre = \"Se requiere la fecha de cierre\";\r\n                } \r\n\r\n                if (!data.estado) {\r\n                    errors.estado = \"Se requiere el estado\";\r\n                } else if (data.estado.length < 2) {\r\n                    errors.estado = \"Como minimo 2 caracteres\";\r\n                } else if (data.estado.length > 30) {\r\n                    errors.estado = \"Como maximo 30 caracteres\";\r\n                } else if (!/^^[a-zA-Z\\s]+$/i.test(data.estado)) {\r\n                    errors.estado = \"No se permiten numero o caracteres especiales\";\r\n                }\r\n                \r\n\r\n                if (!data.user) {\r\n                    errors.user = \"Se requiere el usuario\";\r\n                } else if (data.user.length < 2) {\r\n                    errors.user = \"Como minimo 2 caracteres\";\r\n                } else if (data.user.length > 30) {\r\n                    errors.user = \"Como maximo 30 caracteres\";\r\n                }else if (!/^^[a-zA-Z0-9\\s-]+$/i.test(data.user)) {\r\n                    errors.user = \"No se permiten numero o caracteres especiales\";\r\n                }\r\n\r\n            }else{\r\n\r\n                if (!data.link) {\r\n                    errors.link = \"Se requiere el link\";\r\n                }else if (data.link.length > 500) {\r\n                    errors.link = \"Como maximo 500 caracteres\";\r\n                }else if (!/^(ftp|http|https):\\/\\/[^ \"]+$/.test(data.link)) {\r\n                errors.link = \"El link no es valido\";\r\n                }\r\n\r\n\r\n                if (!data.fechaInicio) {\r\n                    errors.fechaInicio = \"Se requiere la fecha de inicio\";\r\n                } \r\n\r\n                if (!data.fechaCierre) {\r\n                    errors.fechaCierre = \"Se requiere la fecha de cierre\";\r\n                } \r\n\r\n                if (!data.user) {\r\n                    errors.user = \"Se requiere el usuario\";\r\n                } else if (data.user.length < 2) {\r\n                    errors.user = \"Como minimo 2 caracteres\";\r\n                } else if (data.user.length > 30) {\r\n                    errors.user = \"Como maximo 30 caracteres\";\r\n                }else if (!/^^[a-zA-Z0-9\\s-]+$/i.test(data.user)) {\r\n                    errors.user = \"No se permiten numero o caracteres especiales\";\r\n                }\r\n\r\n            }\r\n\r\n            return errors;\r\n        },\r\n\r\n        onSubmit: (data) => {\r\n            console.log(data);\r\n            if(submitted === true){\r\n                \r\n                let _partes = [...partes];\r\n                let _parte  = {...parte };\r\n\r\n                let dat1        = new Date(data.fechaInicio);\r\n                let convertido1 = dat1.toLocaleDateString(undefined, options1);\r\n\r\n                let dat2        = new Date(data.fechaCierre);\r\n                let convertido2 = dat2.toLocaleDateString(undefined, options2);\r\n\r\n                _parte['link']        = data.link;\r\n                _parte['fechaInicio'] = convertido1;\r\n                _parte['fechaCierre'] = convertido2;\r\n                _parte['estado']      = data.estado;\r\n                _parte['user']        = data.user;\r\n                console.log(_parte);\r\n\r\n                if (_parte.link.trim()) {\r\n                    if (parte.id) {\r\n\r\n                        setParte({ ...parte });\r\n                        const index = findIndexById(parte.id);\r\n                        _partes[index] = _parte;\r\n\r\n                        updateEntregaAID({link:`${_parte.link}`,fechaInicio:`${_parte.fechaInicio}`,fechaCierre:`${_parte.fechaCierre}`,estado:`${_parte.estado}`,user:`${_parte.user}`},parte.id);\r\n                        toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Parte A Actualizado', life: 3000 });\r\n                    }\r\n                    else {\r\n\r\n                        _parte.id        = uniqid(\"parteA-\");\r\n                        _parte.estado    = \"Activo\"; \r\n                        _partes.push(_parte);\r\n                        console.log({id:`${_parte.id}`,link:`${_parte.link}`,fechaInicio:`${_parte.fechaInicio}`,fechaCierre:`${_parte.fechaCierre}`,estado:`${_parte.estado}`,user:`${_parte.user}`});\r\n                        createEntregaA({id:`${_parte.id}`,link:`${_parte.link}`,fechaInicio:`${_parte.fechaInicio}`,fechaCierre:`${_parte.fechaCierre}`,estado:`${_parte.estado}`,user:`${_parte.user}`});\r\n                        toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Parte A Creado', life: 3000 });\r\n                    }\r\n                }\r\n                setPartes(_partes);\r\n                setParteDialog(false);\r\n                setParte(emptyParte);\r\n                formik.resetForm();\r\n        }\r\n            \r\n        },\r\n      });\r\n\r\n    const isFormFieldValid = (name) => !!(formik.touched[name] && formik.errors[name]);\r\n    const getFormErrorMessage = (name) => {\r\n        return isFormFieldValid(name) && <small className=\"ml-1 p-error\" style={{'color': '#ff0000'}}>{formik.errors[name]}</small>;\r\n    };\r\n\r\n    useEffect(()=>{\r\n        fetchPartes();\r\n    },[])\r\n\r\n    const fetchPartes = () =>{\r\n        getEntregaAs().then(json =>{\r\n            if(json.error){\r\n                console.log(\"Error\");\r\n            }else{\r\n                console.log(\"---------Parte A insertados-----------\");\r\n                setPartes(json.data);\r\n                setLoading(false);\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        fetchUsers();\r\n    },[])\r\n\r\n    const fetchUsers = () =>{\r\n        getUsersActivas().then(json =>{\r\n            if(json.error){\r\n                console.log(\"Error\");\r\n            }else{\r\n                console.log(\"---------Users insertados-----------\");\r\n                setUsers(json.data);\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    const openNew = () => {\r\n        setParte(emptyParte);\r\n        formik.resetForm();\r\n        setSubmitted(false);\r\n        setStateParte(false); \r\n        setParteDialog(true);    \r\n    }\r\n\r\n    const hideDialog = () => {\r\n        setSubmitted(false);\r\n        setParteDialog(false);\r\n    }\r\n\r\n    const showDialog = () => {\r\n        setSubmitted(true);\r\n        formik.handleSubmit();\r\n    }\r\n\r\n    const hideDeleteParteDialog = () => {\r\n        setDeleteParteDialog(false);\r\n    }\r\n\r\n    const editParte = (parte) => {\r\n        setParte({ ...parte });\r\n        setSubmitted(true);\r\n\r\n        formik.resetForm();\r\n        formik.setValues(\r\n        {\r\n            link:        `${parte.link}`,\r\n            fechaInicio: `${parte.fechaInicio}`,\r\n            fechaCierre: `${parte.fechaCierre}`,\r\n            estado:      `${parte.estado}`,\r\n            user:        `${parte.user}`\r\n        });\r\n        setParteUpdate(`${parte.estado}`);\r\n        setStateParte(true);\r\n        setParteDialog(true);\r\n    }\r\n\r\n    const confirmDeleteParte = (parte) => {\r\n        setParte(parte);\r\n        setDeleteParteDialog(true);\r\n    }\r\n\r\n    const deleteParte = () => {\r\n        let _partes = [...partes];\r\n        let _parte  = {...parte };\r\n        \r\n        if (parte.link.trim()) {\r\n            if (parte.id) {\r\n\r\n                const index = findIndexById(parte.id);\r\n                _partes[index] = _parte;\r\n                updateEntregaAID({link:`${_parte.link}`,fechaInicio:`${_parte.fechaInicio}`,fechaCierre:`${_parte.fechaCierre}`,estado:\"Desactivado\",user:`${_parte.user}`},parte.id);\r\n                _parte['link']        = _parte.link;\r\n                _parte['fechaInicio'] = _parte.fechaInicio;\r\n                _parte['fechaCierre'] = _parte.fechaCierre;\r\n                _parte['estado']      = \"Desactivado\";\r\n                _parte['user']        = _parte.user;\r\n                setParte({ ...parte });\r\n                toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Parte A desactivado', life: 3000 });\r\n            }\r\n        }\r\n        setPartes(_partes);\r\n        setParte(emptyParte);\r\n        setDeleteParteDialog(false);\r\n        \r\n    }\r\n\r\n    const findIndexById = (id) => {\r\n        let index = -1;\r\n        for (let i = 0; i < partes.length; i++) {\r\n            if (partes[i].id === id) {\r\n\r\n                index = i;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return index;\r\n    }\r\n\r\n    const idBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">id</span>\r\n                {rowData.id}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const linkBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Link</span>\r\n                <Button label=\"Ver documento\" className=\"p-button-link\" onClick={() => window.open(`${rowData.link}`)} style={props.layoutColorMode === 'light' ? {'color':'#495057', 'font-weight': 'bold' , 'text-align': 'justify'} : {'color':'#ffffff', 'font-weight': 'bold' , 'text-align': 'justify'}}/>      \r\n            </>\r\n        );\r\n    }\r\n\r\n    const fechaInicioBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Fecha de Inicio</span>\r\n                {rowData.fechaInicio}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const fechaCierreBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Fecha de Cierre</span>\r\n                {rowData.fechaCierre}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const estadoBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Estado</span>\r\n                {rowData.estado}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const userBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">User</span>\r\n                {rowData.user}\r\n               \r\n\r\n            </>\r\n        );\r\n    }\r\n\r\n    const leftToolbarTemplate = () => {\r\n        return (\r\n            <React.Fragment>\r\n                <Button style={props.layoutColorMode === 'light' ? {'color':'#ffffff','background': '#13af4e'} : {'color':'#ffffff','background': '#13af4e'}} label=\"Nuevo\" icon=\"pi pi-plus\" className=\"p-button-success p-mr-2\" onClick={openNew} />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    const actionBodyTemplate = (rowData) => {\r\n        return (\r\n            <div className=\"actions\">\r\n                <Button icon=\"pi pi-pencil\" style={{'background': '#13af4e'}} className=\"p-button-rounded p-button-success mr-2\"   onClick={() => editParte(rowData)} />\r\n                <Button icon=\"pi pi-trash\"  style={{'background': '#eee500'}} className=\"p-button-rounded p-button-warning\"        onClick={() => confirmDeleteParte(rowData)} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const deleteParteDialogFooter = (\r\n        <>\r\n            <Button label=\"No\" icon=\"pi pi-times\" style={{'background': '#d13639','color':'#ffffff'}} className=\"p-button-text\" onClick={hideDeleteParteDialog} />\r\n            <Button label=\"Si\" icon=\"pi pi-check\" style={props.layoutColorMode === 'light' ? {'color':'#13af4e','border-color':'#13af4e'} : {'color':'#13af4e','border-color':'#13af4e'}} className=\"p-button-text\" onClick={deleteParte} />\r\n        </>\r\n    );\r\n\r\n\r\n\r\n    const renderHeader = () => {\r\n        return (\r\n            <div className=\"flex flex-column md:flex-row md:justify-content-between md:align-items-center\">\r\n            <h5 className=\"m-0\">Gestion de entrega de la Parte A</h5>\r\n            <span className=\"block mt-2 md:mt-0 p-input-icon-left\">\r\n                <i className=\"pi pi-search\" />\r\n                <InputText type=\"search\" onInput={(e) => setGlobalFilter(e.target.value)} placeholder=\"Buscar...\" />\r\n            </span>\r\n        </div>\r\n        )\r\n    }\r\n\r\n    const renderGroup = () => {\r\n        return (\r\n            <ColumnGroup>\r\n                <Row>\r\n                    <Column header={showHeader} colSpan={6}></Column>\r\n                </Row>\r\n                <Row>\r\n                    <Column header=\"ID\"                   field=\"id\"            sortable style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                    <Column header=\"LINK\"                 field=\"link\"          sortable style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                    <Column header=\"FECHA DE INICIO\"      field=\"fechaInicio\"   sortable style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                    <Column header=\"FECHA DE CIERRE\"      field=\"fechaCierre\"   sortable style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                    <Column header=\"ESTADO\"               field=\"estado\"        sortable style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                    <Column header=\"Editar/Eliminar\"                                     style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                </Row>\r\n            </ColumnGroup>\r\n        )\r\n    }\r\n\r\n\r\n    const showHeader  = renderHeader();\r\n    const headerGroup = renderGroup();\r\n\r\n\r\n\r\n    const headerDialog =()=>{\r\n        return (stateParte)?\"Actualizando Parte A\":\"Añadir Parte A\"\r\n    }\r\n\r\n    return (\r\n        <div className=\"p-grid crud-demo\">\r\n            <div className=\"p-col-12\">\r\n                <div className=\"card\">\r\n                \r\n                    <Toast ref={toast} />\r\n                    <Toolbar className=\"\" left={leftToolbarTemplate}></Toolbar>\r\n\r\n                    <DataTable ref={dt} value={partes} selection={selectedPartes}  onSelectionChange={(e) => setSelectedPartes(e.value)}\r\n                        dataKey=\"id\" rowHover paginator rows={10} rowsPerPageOptions={[5, 10, 25]} className=\"datatable-responsive p-datatable-sm p-datatable-gridlines p-datatable-striped\"\r\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\r\n                        currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} parte A\" resizableColumns columnResizeMode=\"fit\" showGridlines\r\n                        globalFilter={globalFilter} emptyMessage=\"No se encontro los documentos de la Parte A\" loading={loading} headerColumnGroup={headerGroup}\r\n                        >\r\n                    \r\n                        <Column style={{width:'20%'}} field=\"id\"                    header=\"ID\"                 sortable body={idBodyTemplate}></Column>\r\n                        <Column style={{width:'20%'}} field=\"link\"                  header=\"LINK\"               sortable body={linkBodyTemplate}></Column>\r\n                        <Column style={{width:'20%'}} field=\"fechaInicio\"           header=\"FECHA DE INICIO\"    sortable body={fechaInicioBodyTemplate}></Column>\r\n                        <Column style={{width:'20%'}} field=\"fechaCierre\"           header=\"FECHA DE CIERRE\"    sortable body={fechaCierreBodyTemplate}></Column>                   \r\n                        <Column style={{width:'20%'}} field=\"estado\"                header=\"ESTADO\"             sortable body={estadoBodyTemplate}></Column>\r\n                        <Column style={{width:'20%'}} body={actionBodyTemplate}></Column>\r\n\r\n                    </DataTable>\r\n\r\n\r\n                    <Dialog visible={parteDialog} style={{ width: '450px' }} header={headerDialog} modal className=\"p-fluid\" onHide={hideDialog}>\r\n                        <form onSubmit={formik.handleSubmit}>\r\n\r\n                            <div className=\"p-field mt-2\">\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <i className=\"pi pi-link\"></i>\r\n                                        </span>\r\n                                        <InputTextarea id=\"link\" name='link' placeholder=\"Link\"  value={formik.values.link} onChange={formik.handleChange}/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('link')}\r\n                            \r\n                            <div className=\"p-field mt-2\">\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <i className=\"pi pi-calendar\"></i>\r\n                                        </span>\r\n                                        <Calendar id=\"fechaInicio\" name=\"fechaInicio\" placeholder=\"Seleccione la fecha de inicio\" value={formik.values.fechaInicio} onChange={formik.handleChange} locale=\"es\" dateFormat =\"mm/dd/yy\"  minDate={minDate} maxDate={maxDate} readOnlyInput/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('fechaInicio')}\r\n\r\n                            <div className=\"p-field mt-2\">\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <i className=\"pi pi-calendar\"></i>\r\n                                        </span>\r\n                                        <Calendar id=\"fechaCierre\" name=\"fechaCierre\" placeholder=\"Seleccione una fecha de cierre\" value={formik.values.fechaCierre} onChange={formik.handleChange} locale=\"es\" dateFormat =\"mm/dd/yy\" minDate={minDate} maxDate={maxDate} readOnlyInput/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('fechaCierre')}\r\n\r\n                            {(stateParte)?(\r\n                                <div className=\"form-group\">\r\n                                    <div className=\"p-field mt-2\">\r\n                                        <div className=\"p-inputgroup\">\r\n                                            <span className=\"p-inputgroup-addon\">\r\n                                                <img   src={props.layoutColorMode === 'light' ? 'assets/layout/images/estado.png' : 'assets/layout/images/estado-dark.png'} style={{'height': '1.2em','width':'1.2em',}}/>   \r\n                                            </span>\r\n                                            <Dropdown id=\"estado\" name=\"estado\" placeholder=\"Seleccione un estado\" value={formik.values.estado} onChange={formik.handleChange} options={estados} optionLabel=\"name\"  optionValue=\"name\"/> \r\n                                        </div>       \r\n                                    </div>\r\n                                    {getFormErrorMessage('estado')}\r\n                                </div>\r\n                            ):\r\n                                null\r\n                            }\r\n\r\n                            <div className=\"p-field mt-2\">\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <i className=\"pi pi-user\"></i>\r\n                                        </span>\r\n                                        <Dropdown id=\"user\" name=\"user\" placeholder=\"Seleccione un usuario\" value={formik.values.user} onChange={formik.handleChange} options={users} optionLabel=\"nombre\"  optionValue=\"id\"/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('user')}\r\n\r\n\r\n                            <div className='mt-2'>\r\n                                <div className=\"flex justify-content-center flex-wrap\">\r\n                                    <div className=\"flex align-items-center justify-content-center  m-2\">\r\n                                        <Button label=\"Cancelar\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDialog} style={props.layoutColorMode === 'light' ? {'color':'#d13639','border-color':'#d13639'} : {'color':'#d13639','border-color':'#d13639'}}/>\r\n                                    </div>\r\n                                    <div className=\"flex align-items-center justify-content-center  m-2\">\r\n                                        <Button label=\"Guardar\"  icon=\"pi pi-check\" type=\"submit\" className=\"p-button-text\" onClick={showDialog} style={{'background': '#13af4e','color':'#ffffff'}}/>  \r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </Dialog>\r\n\r\n\r\n                    <Dialog className=\"mt-2\" visible={deleteParteDialog} style={{ width: '450px' }} header=\"Confirm\" modal footer={deleteParteDialogFooter} onHide={hideDeleteParteDialog}>\r\n                        <div className=\"confirmation-content\">\r\n                            <i className=\"pi pi-exclamation-triangle p-mr-3\" style={{ fontSize: '2rem' }} />\r\n                            {parte && <span>¿Estás segura de que quieres eliminar? <b>{parte.id}</b>?</span>}\r\n                        </div>\r\n                    </Dialog>\r\n    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import axios from 'axios';\r\n\r\n export const getEntregaBs = () =>{\r\n     return axios.get('https://magic-tech-backend.herokuapp.com/api/getEntregaBs');\r\n }\r\n\r\n export const getEntregaBID =(id) =>{\r\n     return axios.get(`https://magic-tech-backend.herokuapp.com/api/getEntregaBId/${id}`);\r\n }\r\n\r\n\r\n\r\n export const createEntregaB=(data)=>{\r\n    return axios.post('https://magic-tech-backend.herokuapp.com/api/createEntregaB', \r\n      {\r\n         id:          `${data.id}`,\r\n         link:        `${data.link}`,\r\n         fechaInicio: `${data.fechaInicio}`,\r\n         fechaCierre: `${data.fechaCierre}`,\r\n         estado:      `${data.estado}`,\r\n         user:        `${data.user}`\r\n      }\r\n      )\r\n      .then(function (response) {\r\n        console.log(response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n }\r\n\r\nexport const updateEntregaBID =(data,id) =>{\r\n    return axios.put(`https://magic-tech-backend.herokuapp.com/api/updateEntregaB/${id}`, \r\n    {\r\n        link:        `${data.link}`,\r\n        fechaInicio: `${data.fechaInicio}`,\r\n        fechaCierre: `${data.fechaCierre}`,\r\n        estado:      `${data.estado}`,\r\n        user:        `${data.user}`\r\n    }\r\n    )\r\n    .then(function (response) {\r\n      console.log(response);\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error);\r\n    });\r\n}\r\n\r\nexport const deleteEntregaBID =(id) =>{\r\n    return axios.delete(`https://magic-tech-backend.herokuapp.com/api/deleteEntregaBId/${id}`);\r\n}\r\n\r\nexport const getEntregaBsActivas = () =>{\r\n  return axios.get('https://magic-tech-backend.herokuapp.com/api/getEntregaBsActivas');\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport classNames           from 'classnames';\r\nimport { DataTable }        from 'primereact/datatable';\r\nimport { Column }           from 'primereact/column';\r\nimport { Toast }            from 'primereact/toast';\r\nimport { Button }           from 'primereact/button';\r\nimport { Toolbar }          from 'primereact/toolbar';\r\nimport { Dialog }           from 'primereact/dialog';\r\nimport { InputText }        from 'primereact/inputtext';\r\nimport { InputTextarea }    from 'primereact/inputtextarea';\r\nimport { Password }         from 'primereact/password';\r\nimport { ColumnGroup }      from 'primereact/columngroup';\r\nimport { Calendar }         from 'primereact/calendar';\r\nimport { Row }              from 'primereact/row';\r\nimport { Dropdown }         from 'primereact/dropdown';\r\nimport { addLocale }        from 'primereact/api';\r\nimport { useFormik }        from \"formik\";\r\nimport { Link }             from 'react-router-dom';\r\n\r\nimport uniqid               from 'uniqid';\r\n\r\nimport { getEntregaBs,updateEntregaBID,createEntregaB} from '../service/apiSobreB';\r\nimport { getUsersActivas  } from '../service/apiUser';\r\n\r\n\r\nexport const ParteB = (props) => {\r\n\r\n    let emptyParte = {\r\n        id:            null,\r\n        link:         '',\r\n        fechaInicio:  '',\r\n        fechaCierre:  '',\r\n        estado:       '',\r\n        user:         ''\r\n    };\r\n\r\n    const estados = [\r\n        { name: \"Activo\"      },\r\n        { name: \"Desactivado\" }\r\n    ];\r\n\r\n    addLocale('es', {\r\n        firstDayOfWeek: 1,\r\n        dayNames: ['domingo', 'lunes', 'martes', 'miércoles', 'jueves', 'viernes', 'sábado'],\r\n        dayNamesShort: ['dom', 'lun', 'mar', 'mié', 'jue', 'vie', 'sáb'],\r\n        dayNamesMin: ['D', 'L', 'M', 'X', 'J', 'V', 'S'],\r\n        monthNames: ['enero', 'febrero', 'marzo', 'abril', 'mayo', 'junio', 'julio', 'agosto', 'septiembre', 'octubre', 'noviembre', 'diciembre'],\r\n        monthNamesShort: ['ene', 'feb', 'mar', 'abr', 'may', 'jun', 'jul', 'ago', 'sep', 'oct', 'nov', 'dic'],\r\n        today: 'Hoy',\r\n        clear: 'Claro'\r\n    });\r\n\r\n    const [partes, setPartes]                          = useState(null);\r\n    const [users, setUsers]                            = useState(null);\r\n\r\n    const [globalFilter, setGlobalFilter]              = useState('');\r\n    const [loading, setLoading]                        = useState(true);\r\n    const [parteDialog, setParteDialog]                = useState(false);\r\n    const [deleteParteDialog, setDeleteParteDialog]    = useState(false);\r\n\r\n    const [parte, setParte]                            = useState(emptyParte);\r\n    const [selectedPartes, setSelectedPartes]          = useState(null);\r\n    const [submitted, setSubmitted]                    = useState(false);\r\n    const toast                                        = useRef(null);\r\n    const dt                                           = useRef(null);\r\n    const [stateParte,setStateParte]                   = useState(false);\r\n    const [parteUpdate, setParteUpdate]                = useState(\"\");\r\n    const options1 = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\r\n    const options2 = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\r\n\r\n    let today = new Date();\r\n    let month = today.getMonth();\r\n    let year = today.getFullYear();\r\n    let prevMonth = (month === 0) ? 11 : month - 0;\r\n    let prevYear = (prevMonth === 11) ? year - 0 : year;\r\n    let nextMonth = (month === 11) ? 0 : month + 1;\r\n    let nextYear = (nextMonth === 0) ? year + 1 : year;\r\n\r\n    let minDate = new Date();\r\n    minDate.setMonth(prevMonth);\r\n    minDate.setFullYear(prevYear);\r\n\r\n    let maxDate = new Date();\r\n    maxDate.setMonth(nextMonth);\r\n    maxDate.setFullYear(nextYear);\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            link:         '',\r\n            fechaInicio:  '',\r\n            fechaCierre:  '',\r\n            estado:       '',\r\n            user:         ''\r\n        },\r\n         validate: (data) => {\r\n            let errors = {};\r\n\r\n            if(stateParte){\r\n\r\n                if (!data.link) {\r\n                    errors.link = \"Se requiere el link\";\r\n                }else if (data.link.length > 500) {\r\n                    errors.link = \"Como maximo 500 caracteres\";\r\n                }else if (!/^(ftp|http|https):\\/\\/[^ \"]+$/.test(data.link)) {\r\n                errors.link = \"El link no es valido\";\r\n                }\r\n\r\n                if (!data.fechaInicio) {\r\n                    errors.fechaInicio = \"Se requiere la fecha de inicio\";\r\n                } \r\n\r\n                if (!data.fechaCierre) {\r\n                    errors.fechaCierre = \"Se requiere la fecha de cierre\";\r\n                } \r\n\r\n                if (!data.estado) {\r\n                    errors.estado = \"Se requiere el estado\";\r\n                } else if (data.estado.length < 2) {\r\n                    errors.estado = \"Como minimo 2 caracteres\";\r\n                } else if (data.estado.length > 30) {\r\n                    errors.estado = \"Como maximo 30 caracteres\";\r\n                } else if (!/^^[a-zA-Z\\s]+$/i.test(data.estado)) {\r\n                    errors.estado = \"No se permiten numero o caracteres especiales\";\r\n                }\r\n                \r\n\r\n                if (!data.user) {\r\n                    errors.user = \"Se requiere el usuario\";\r\n                } else if (data.user.length < 2) {\r\n                    errors.user = \"Como minimo 2 caracteres\";\r\n                } else if (data.user.length > 30) {\r\n                    errors.user = \"Como maximo 30 caracteres\";\r\n                }else if (!/^^[a-zA-Z0-9\\s-]+$/i.test(data.user)) {\r\n                    errors.user = \"No se permiten numero o caracteres especiales\";\r\n                }\r\n\r\n            }else{\r\n\r\n                if (!data.link) {\r\n                    errors.link = \"Se requiere el link\";\r\n                }else if (data.link.length > 500) {\r\n                    errors.link = \"Como maximo 500 caracteres\";\r\n                }else if (!/^(ftp|http|https):\\/\\/[^ \"]+$/.test(data.link)) {\r\n                errors.link = \"El link no es valido\";\r\n                }\r\n\r\n\r\n                if (!data.fechaInicio) {\r\n                    errors.fechaInicio = \"Se requiere la fecha de inicio\";\r\n                } \r\n\r\n                if (!data.fechaCierre) {\r\n                    errors.fechaCierre = \"Se requiere la fecha de cierre\";\r\n                } \r\n\r\n                if (!data.user) {\r\n                    errors.user = \"Se requiere el usuario\";\r\n                } else if (data.user.length < 2) {\r\n                    errors.user = \"Como minimo 2 caracteres\";\r\n                } else if (data.user.length > 30) {\r\n                    errors.user = \"Como maximo 30 caracteres\";\r\n                }else if (!/^^[a-zA-Z0-9\\s-]+$/i.test(data.user)) {\r\n                    errors.user = \"No se permiten numero o caracteres especiales\";\r\n                }\r\n\r\n            }\r\n\r\n            return errors;\r\n        },\r\n\r\n        onSubmit: (data) => {\r\n            console.log(data);\r\n            if(submitted === true){\r\n                \r\n                let _partes = [...partes];\r\n                let _parte  = {...parte };\r\n\r\n                let dat1        = new Date(data.fechaInicio);\r\n                let convertido1 = dat1.toLocaleDateString(undefined, options1);\r\n\r\n                let dat2        = new Date(data.fechaCierre);\r\n                let convertido2 = dat2.toLocaleDateString(undefined, options2);\r\n\r\n                _parte['link']        = data.link;\r\n                _parte['fechaInicio'] = convertido1;\r\n                _parte['fechaCierre'] = convertido2;\r\n                _parte['estado']      = data.estado;\r\n                _parte['user']        = data.user;\r\n                console.log(_parte);\r\n\r\n                if (_parte.link.trim()) {\r\n                    if (parte.id) {\r\n\r\n                        setParte({ ...parte });\r\n                        const index = findIndexById(parte.id);\r\n                        _partes[index] = _parte;\r\n\r\n                        updateEntregaBID({link:`${_parte.link}`,fechaInicio:`${_parte.fechaInicio}`,fechaCierre:`${_parte.fechaCierre}`,estado:`${_parte.estado}`,user:`${_parte.user}`},parte.id);\r\n                        toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Parte B Actualizado', life: 3000 });\r\n                    }\r\n                    else {\r\n\r\n                        _parte.id        = uniqid(\"parteB-\");\r\n                        _parte.estado    = \"Activo\"; \r\n                        _partes.push(_parte);\r\n                        console.log({id:`${_parte.id}`,link:`${_parte.link}`,fechaInicio:`${_parte.fechaInicio}`,fechaCierre:`${_parte.fechaCierre}`,estado:`${_parte.estado}`,user:`${_parte.user}`});\r\n                        createEntregaB({id:`${_parte.id}`,link:`${_parte.link}`,fechaInicio:`${_parte.fechaInicio}`,fechaCierre:`${_parte.fechaCierre}`,estado:`${_parte.estado}`,user:`${_parte.user}`});\r\n                        toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Parte B Creado', life: 3000 });\r\n                    }\r\n                }\r\n                setPartes(_partes);\r\n                setParteDialog(false);\r\n                setParte(emptyParte);\r\n                formik.resetForm();\r\n        }\r\n            \r\n        },\r\n      });\r\n\r\n    const isFormFieldValid = (name) => !!(formik.touched[name] && formik.errors[name]);\r\n    const getFormErrorMessage = (name) => {\r\n        return isFormFieldValid(name) && <small className=\"ml-1 p-error\" style={{'color': '#ff0000'}}>{formik.errors[name]}</small>;\r\n    };\r\n\r\n    useEffect(()=>{\r\n        fetchPartes();\r\n    },[])\r\n\r\n    const fetchPartes = () =>{\r\n        getEntregaBs().then(json =>{\r\n            if(json.error){\r\n                console.log(\"Error\");\r\n            }else{\r\n                console.log(\"---------Parte A insertados-----------\");\r\n                setPartes(json.data);\r\n                setLoading(false);\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        fetchUsers();\r\n    },[])\r\n\r\n    const fetchUsers = () =>{\r\n        getUsersActivas().then(json =>{\r\n            if(json.error){\r\n                console.log(\"Error\");\r\n            }else{\r\n                console.log(\"---------Users insertados-----------\");\r\n                setUsers(json.data);\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    const openNew = () => {\r\n        setParte(emptyParte);\r\n        formik.resetForm();\r\n        setSubmitted(false);\r\n        setStateParte(false); \r\n        setParteDialog(true);    \r\n    }\r\n\r\n    const hideDialog = () => {\r\n        setSubmitted(false);\r\n        setParteDialog(false);\r\n    }\r\n\r\n    const showDialog = () => {\r\n        setSubmitted(true);\r\n        formik.handleSubmit();\r\n    }\r\n\r\n    const hideDeleteParteDialog = () => {\r\n        setDeleteParteDialog(false);\r\n    }\r\n\r\n    const editParte = (parte) => {\r\n        setParte({ ...parte });\r\n        setSubmitted(true);\r\n\r\n        formik.resetForm();\r\n        formik.setValues(\r\n        {\r\n            link:        `${parte.link}`,\r\n            fechaInicio: `${parte.fechaInicio}`,\r\n            fechaCierre: `${parte.fechaCierre}`,\r\n            estado:      `${parte.estado}`,\r\n            user:        `${parte.user}`\r\n        });\r\n        setParteUpdate(`${parte.estado}`);\r\n        setStateParte(true);\r\n        setParteDialog(true);\r\n    }\r\n\r\n    const confirmDeleteParte = (parte) => {\r\n        setParte(parte);\r\n        setDeleteParteDialog(true);\r\n    }\r\n\r\n    const deleteParte = () => {\r\n        let _partes = [...partes];\r\n        let _parte  = {...parte };\r\n        \r\n        if (parte.link.trim()) {\r\n            if (parte.id) {\r\n\r\n                const index = findIndexById(parte.id);\r\n                _partes[index] = _parte;\r\n                updateEntregaBID({link:`${_parte.link}`,fechaInicio:`${_parte.fechaInicio}`,fechaCierre:`${_parte.fechaCierre}`,estado:\"Desactivado\",user:`${_parte.user}`},parte.id);\r\n                _parte['link']        = _parte.link;\r\n                _parte['fechaInicio'] = _parte.fechaInicio;\r\n                _parte['fechaCierre'] = _parte.fechaCierre;\r\n                _parte['estado']      = \"Desactivado\";\r\n                _parte['user']        = _parte.user;\r\n                setParte({ ...parte });\r\n                toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Parte B desactivado', life: 3000 });\r\n            }\r\n        }\r\n        setPartes(_partes);\r\n        setParte(emptyParte);\r\n        setDeleteParteDialog(false);\r\n        \r\n    }\r\n\r\n    const findIndexById = (id) => {\r\n        let index = -1;\r\n        for (let i = 0; i < partes.length; i++) {\r\n            if (partes[i].id === id) {\r\n\r\n                index = i;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return index;\r\n    }\r\n\r\n    const idBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">id</span>\r\n                {rowData.id}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const linkBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Link</span>\r\n                <Button label=\"Ver documento\" className=\"p-button-link\" onClick={() => window.open(`${rowData.link}`)} style={props.layoutColorMode === 'light' ? {'color':'#495057', 'font-weight': 'bold' , 'text-align': 'justify'} : {'color':'#ffffff', 'font-weight': 'bold' , 'text-align': 'justify'}}/>      \r\n            </>\r\n        );\r\n    }\r\n\r\n    const fechaInicioBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Fecha de Inicio</span>\r\n                {rowData.fechaInicio}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const fechaCierreBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Fecha de Cierre</span>\r\n                {rowData.fechaCierre}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const estadoBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Estado</span>\r\n                {rowData.estado}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const userBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">User</span>\r\n                {rowData.user}\r\n               \r\n\r\n            </>\r\n        );\r\n    }\r\n\r\n    const leftToolbarTemplate = () => {\r\n        return (\r\n            <React.Fragment>\r\n                <Button style={props.layoutColorMode === 'light' ? {'color':'#ffffff','background': '#13af4e'} : {'color':'#ffffff','background': '#13af4e'}} label=\"Nuevo\" icon=\"pi pi-plus\" className=\"p-button-success p-mr-2\" onClick={openNew} />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    const actionBodyTemplate = (rowData) => {\r\n        return (\r\n            <div className=\"actions\">\r\n                <Button icon=\"pi pi-pencil\" style={{'background': '#13af4e'}} className=\"p-button-rounded p-button-success mr-2\"   onClick={() => editParte(rowData)} />\r\n                <Button icon=\"pi pi-trash\"  style={{'background': '#eee500'}} className=\"p-button-rounded p-button-warning\"        onClick={() => confirmDeleteParte(rowData)} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const deleteParteDialogFooter = (\r\n        <>\r\n            <Button label=\"No\" icon=\"pi pi-times\" style={{'background': '#d13639','color':'#ffffff'}} className=\"p-button-text\" onClick={hideDeleteParteDialog} />\r\n            <Button label=\"Si\" icon=\"pi pi-check\" style={props.layoutColorMode === 'light' ? {'color':'#13af4e','border-color':'#13af4e'} : {'color':'#13af4e','border-color':'#13af4e'}} className=\"p-button-text\" onClick={deleteParte} />\r\n        </>\r\n    );\r\n\r\n\r\n\r\n    const renderHeader = () => {\r\n        return (\r\n            <div className=\"flex flex-column md:flex-row md:justify-content-between md:align-items-center\">\r\n            <h5 className=\"m-0\">Gestion de entrega de la Parte B</h5>\r\n            <span className=\"block mt-2 md:mt-0 p-input-icon-left\">\r\n                <i className=\"pi pi-search\" />\r\n                <InputText type=\"search\" onInput={(e) => setGlobalFilter(e.target.value)} placeholder=\"Buscar...\" />\r\n            </span>\r\n        </div>\r\n        )\r\n    }\r\n\r\n    const renderGroup = () => {\r\n        return (\r\n            <ColumnGroup>\r\n                <Row>\r\n                    <Column header={showHeader} colSpan={6}></Column>\r\n                </Row>\r\n                <Row>\r\n                    <Column header=\"ID\"                   field=\"id\"            sortable style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                    <Column header=\"LINK\"                 field=\"link\"          sortable style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                    <Column header=\"FECHA DE INICIO\"      field=\"fechaInicio\"   sortable style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                    <Column header=\"FECHA DE CIERRE\"      field=\"fechaCierre\"   sortable style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                    <Column header=\"ESTADO\"               field=\"estado\"        sortable style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                    <Column header=\"Editar/Eliminar\"                                     style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                </Row>\r\n            </ColumnGroup>\r\n        )\r\n    }\r\n\r\n\r\n    const showHeader  = renderHeader();\r\n    const headerGroup = renderGroup();\r\n\r\n\r\n\r\n    const headerDialog =()=>{\r\n        return (stateParte)?\"Actualizando Parte B\":\"Añadir Parte B\"\r\n    }\r\n\r\n    return (\r\n        <div className=\"p-grid crud-demo\">\r\n            <div className=\"p-col-12\">\r\n                <div className=\"card\">\r\n                \r\n                    <Toast ref={toast} />\r\n                    <Toolbar className=\"\" left={leftToolbarTemplate}></Toolbar>\r\n\r\n                    <DataTable ref={dt} value={partes} selection={selectedPartes}  onSelectionChange={(e) => setSelectedPartes(e.value)}\r\n                        dataKey=\"id\" rowHover paginator rows={10} rowsPerPageOptions={[5, 10, 25]} className=\"datatable-responsive p-datatable-sm p-datatable-gridlines p-datatable-striped\"\r\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\r\n                        currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} parte B\" resizableColumns columnResizeMode=\"fit\" showGridlines\r\n                        globalFilter={globalFilter} emptyMessage=\"No se encontro los documentos de la Parte B\" loading={loading} headerColumnGroup={headerGroup}\r\n                        >\r\n                    \r\n                        <Column style={{width:'20%'}} field=\"id\"                    header=\"ID\"                 sortable body={idBodyTemplate}></Column>\r\n                        <Column style={{width:'20%'}} field=\"link\"                  header=\"LINK\"               sortable body={linkBodyTemplate}></Column>\r\n                        <Column style={{width:'20%'}} field=\"fechaInicio\"           header=\"FECHA DE INICIO\"    sortable body={fechaInicioBodyTemplate}></Column>\r\n                        <Column style={{width:'20%'}} field=\"fechaCierre\"           header=\"FECHA DE CIERRE\"    sortable body={fechaCierreBodyTemplate}></Column>                   \r\n                        <Column style={{width:'20%'}} field=\"estado\"                header=\"ESTADO\"             sortable body={estadoBodyTemplate}></Column>\r\n                        <Column style={{width:'20%'}} body={actionBodyTemplate}></Column>\r\n\r\n                    </DataTable>\r\n\r\n\r\n                    <Dialog visible={parteDialog} style={{ width: '450px' }} header={headerDialog} modal className=\"p-fluid\" onHide={hideDialog}>\r\n                        <form onSubmit={formik.handleSubmit}>\r\n\r\n                            <div className=\"p-field mt-2\">\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <i className=\"pi pi-link\"></i>\r\n                                        </span>\r\n                                        <InputTextarea id=\"link\" name='link' placeholder=\"Link\"  value={formik.values.link} onChange={formik.handleChange}/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('link')}\r\n                            \r\n                            <div className=\"p-field mt-2\">\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <i className=\"pi pi-calendar\"></i>\r\n                                        </span>\r\n                                        <Calendar id=\"fechaInicio\" name=\"fechaInicio\" placeholder=\"Seleccione la fecha de inicio\" value={formik.values.fechaInicio} onChange={formik.handleChange} locale=\"es\" dateFormat =\"mm/dd/yy\"  minDate={minDate} maxDate={maxDate} readOnlyInput/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('fechaInicio')}\r\n\r\n                            <div className=\"p-field mt-2\">\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <i className=\"pi pi-calendar\"></i>\r\n                                        </span>\r\n                                        <Calendar id=\"fechaCierre\" name=\"fechaCierre\" placeholder=\"Seleccione una fecha de cierre\" value={formik.values.fechaCierre} onChange={formik.handleChange} locale=\"es\" dateFormat =\"mm/dd/yy\"  minDate={minDate} maxDate={maxDate} readOnlyInput/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('fechaCierre')}\r\n\r\n                            {(stateParte)?(\r\n                                <div className=\"form-group\">\r\n                                    <div className=\"p-field mt-2\">\r\n                                        <div className=\"p-inputgroup\">\r\n                                            <span className=\"p-inputgroup-addon\">\r\n                                                <img   src={props.layoutColorMode === 'light' ? 'assets/layout/images/estado.png' : 'assets/layout/images/estado-dark.png'} style={{'height': '1.2em','width':'1.2em',}}/>   \r\n                                            </span>\r\n                                            <Dropdown id=\"estado\" name=\"estado\" placeholder=\"Seleccione un estado\" value={formik.values.estado} onChange={formik.handleChange} options={estados} optionLabel=\"name\"  optionValue=\"name\"/> \r\n                                        </div>       \r\n                                    </div>\r\n                                    {getFormErrorMessage('estado')}\r\n                                </div>\r\n                            ):\r\n                                null\r\n                            }\r\n\r\n                            <div className=\"p-field mt-2\">\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <i className=\"pi pi-user\"></i>\r\n                                        </span>\r\n                                        <Dropdown id=\"user\" name=\"user\" placeholder=\"Seleccione un usuario\" value={formik.values.user} onChange={formik.handleChange} options={users} optionLabel=\"nombre\"  optionValue=\"id\"/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('user')}\r\n\r\n\r\n                            <div className='mt-2'>\r\n                                <div className=\"flex justify-content-center flex-wrap\">\r\n                                    <div className=\"flex align-items-center justify-content-center  m-2\">\r\n                                        <Button label=\"Cancelar\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDialog} style={props.layoutColorMode === 'light' ? {'color':'#d13639','border-color':'#d13639'} : {'color':'#d13639','border-color':'#d13639'}}/>\r\n                                    </div>\r\n                                    <div className=\"flex align-items-center justify-content-center  m-2\">\r\n                                        <Button label=\"Guardar\"  icon=\"pi pi-check\" type=\"submit\" className=\"p-button-text\" onClick={showDialog} style={{'background': '#13af4e','color':'#ffffff'}}/>  \r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </Dialog>\r\n\r\n\r\n                    <Dialog className=\"mt-2\" visible={deleteParteDialog} style={{ width: '450px' }} header=\"Confirm\" modal footer={deleteParteDialogFooter} onHide={hideDeleteParteDialog}>\r\n                        <div className=\"confirmation-content\">\r\n                            <i className=\"pi pi-exclamation-triangle p-mr-3\" style={{ fontSize: '2rem' }} />\r\n                            {parte && <span>¿Estás segura de que quieres eliminar? <b>{parte.id}</b>?</span>}\r\n                        </div>\r\n                    </Dialog>\r\n    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import axios from 'axios';\r\n\r\nexport class MenuService {\r\n\r\n    getMenusAdmin() {\r\n        return axios.get('assets/demo/data/menuAdmin.json').then(res => res.data.data);\r\n    }\r\n    getMenusUser() {\r\n        return axios.get('assets/demo/data/menuUser.json').then(res => res.data.data);\r\n    }\r\n    getMenusDocente() {\r\n        return axios.get('assets/demo/data/menuDocente.json').then(res => res.data.data);\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport classNames           from 'classnames';\r\nimport { Route}             from 'react-router-dom';\r\nimport { CSSTransition }    from 'react-transition-group';\r\n\r\nimport { AppTopbar }        from './AppTopbar';\r\nimport { AppFooter }        from './AppFooter';\r\nimport { AppMenu }          from './AppMenu';\r\nimport { AppConfig }        from './AppConfig';\r\n\r\nimport { Dashboard }             from './components/Dashboard';\r\nimport { Role }                  from './components/Role';\r\nimport { User }                  from './components/User';\r\nimport {Empresa}                 from './components/Empresa';\r\nimport { Convocatoria }          from './components/Convocatoria';\r\nimport { PliegoEspecificacion }  from './components/PliegoEspecificacion';\r\nimport { Aviso }                 from './components/Aviso';\r\nimport { ListEmpresa }           from './components/ListEmpresa';\r\nimport { ListConvocatoria }      from './components/ListConvocatoria';\r\nimport { ListPliego }            from './components/ListPliego';\r\nimport { Forum }            from './components/Forum';\r\nimport { Contrato }             from './components/Contrato';\r\nimport { Orden }                from './components/Orden';\r\nimport { Plan }                 from './components/Plan';\r\nimport { ParteA }               from './components/ParteA';\r\nimport { ParteB }               from './components/ParteB';   \r\n\r\n\r\n\r\nimport Cookies                   from 'universal-cookie';\r\nimport { MenuService }           from './service/Menu';\r\n\r\n\r\nimport PrimeReact           from 'primereact/api';\r\n\r\nimport 'primereact/resources/primereact.min.css';\r\nimport 'primeicons/primeicons.css';\r\nimport 'primeflex/primeflex.css';\r\nimport 'prismjs/themes/prism-coy.css';\r\nimport './layout/flags/flags.css';\r\nimport './layout/layout.scss';\r\nimport './App.scss';\r\n\r\n\r\nconst App = () => {\r\n\r\n    const [layoutMode, setLayoutMode]                         = useState('static');\r\n    const [layoutColorMode, setLayoutColorMode]               = useState('light')\r\n    const [inputStyle, setInputStyle]                         = useState('outlined');\r\n    const [ripple, setRipple]                                 = useState(true);\r\n    const [staticMenuInactive, setStaticMenuInactive]         = useState(false);\r\n    const [overlayMenuActive, setOverlayMenuActive]           = useState(false);\r\n    const [mobileMenuActive, setMobileMenuActive]             = useState(false);\r\n    const [mobileTopbarMenuActive, setMobileTopbarMenuActive] = useState(false);\r\n    const [menus, setMenus]                                   = useState(null);\r\n    const cookies                                             = new Cookies();\r\n    const menuService = new MenuService();\r\n\r\n    PrimeReact.ripple = true;\r\n\r\n    let menuClick = false;\r\n    let mobileTopbarMenuClick = false;\r\n\r\n\r\n    useEffect(()=>{\r\n        menuService.getMenusAdmin().then(data => setMenus(data));\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        if (mobileMenuActive) {\r\n            addClass(document.body, \"body-overflow-hidden\");\r\n        } else {\r\n            removeClass(document.body, \"body-overflow-hidden\");\r\n        }\r\n    }, [mobileMenuActive]);\r\n\r\n    const onInputStyleChange = (inputStyle) => {\r\n        setInputStyle(inputStyle);\r\n    }\r\n\r\n    const onRipple = (e) => {\r\n        PrimeReact.ripple = e.value;\r\n        setRipple(e.value)\r\n    }\r\n\r\n    const onLayoutModeChange = (mode) => {\r\n        setLayoutMode(mode)\r\n    }\r\n\r\n    const onColorModeChange = (mode) => {\r\n        setLayoutColorMode(mode)\r\n    }\r\n\r\n    const onWrapperClick = (event) => {\r\n        if (!menuClick) {\r\n            setOverlayMenuActive(false);\r\n            setMobileMenuActive(false);\r\n        }\r\n\r\n        if (!mobileTopbarMenuClick) {\r\n            setMobileTopbarMenuActive(false);\r\n        }\r\n\r\n        mobileTopbarMenuClick = false;\r\n        menuClick = false;\r\n    }\r\n\r\n    const onToggleMenuClick = (event) => {\r\n        menuClick = true;\r\n\r\n        if (isDesktop()) {\r\n            if (layoutMode === 'overlay') {\r\n                if(mobileMenuActive === true) {\r\n                    setOverlayMenuActive(true);\r\n                }\r\n\r\n                setOverlayMenuActive((prevState) => !prevState);\r\n                setMobileMenuActive(false);\r\n            }\r\n            else if (layoutMode === 'static') {\r\n                setStaticMenuInactive((prevState) => !prevState);\r\n            }\r\n        }\r\n        else {\r\n            setMobileMenuActive((prevState) => !prevState);\r\n        }\r\n\r\n        event.preventDefault();\r\n    }\r\n\r\n    const onSidebarClick = () => {\r\n        menuClick = true;\r\n    }\r\n\r\n    const onMobileTopbarMenuClick = (event) => {\r\n        mobileTopbarMenuClick = true;\r\n\r\n        setMobileTopbarMenuActive((prevState) => !prevState);\r\n        event.preventDefault();\r\n    }\r\n\r\n    const onMobileSubTopbarMenuClick = (event) => {\r\n        mobileTopbarMenuClick = true;\r\n\r\n        event.preventDefault();\r\n    }\r\n\r\n    const onMenuItemClick = (event) => {\r\n        if (!event.item.items) {\r\n            setOverlayMenuActive(false);\r\n            setMobileMenuActive(false);\r\n        }\r\n    }\r\n    const isDesktop = () => {\r\n        return window.innerWidth >= 992;\r\n    }\r\n\r\n    const addClass = (element, className) => {\r\n        if (element.classList)\r\n            element.classList.add(className);\r\n        else\r\n            element.className += ' ' + className;\r\n    }\r\n\r\n    const removeClass = (element, className) => {\r\n        if (element.classList)\r\n            element.classList.remove(className);\r\n        else\r\n            element.className = element.className.replace(new RegExp('(^|\\\\b)' + className.split(' ').join('|') + '(\\\\b|$)', 'gi'), ' ');\r\n    }\r\n\r\n    const wrapperClass = classNames('layout-wrapper', {\r\n        'layout-overlay': layoutMode === 'overlay',\r\n        'layout-static': layoutMode === 'static',\r\n        'layout-static-sidebar-inactive': staticMenuInactive && layoutMode === 'static',\r\n        'layout-overlay-sidebar-active': overlayMenuActive && layoutMode === 'overlay',\r\n        'layout-mobile-sidebar-active': mobileMenuActive,\r\n        'p-input-filled': inputStyle === 'filled',\r\n        'p-ripple-disabled': ripple === false,\r\n        'layout-theme-light': layoutColorMode === 'light'\r\n    });\r\n\r\n    const menu = [\r\n            {\r\n                label: \"Home\", icon: \"pi pi-fw pi-home\",\r\n                \"items\": [{\r\n                    label: \"Tablero\", icon: \"pi pi-fw pi-home\", to: \"/\"\r\n                }]\r\n            },\r\n            {\r\n                label: \"Gestion de Roles\", icon: \"pi pi-fw pi-sitemap\",\r\n                \"items\": [\r\n                    {\"label\": \"Roles\", icon: \"pi pi-fw pi-users\", to: \"/Role\"}\r\n                   \r\n                ]\r\n            },\r\n            {\r\n                label: \"Gestion de Usuario\", icon: \"pi pi-fw pi-sitemap\",\r\n                \"items\": [\r\n                    {\"label\": \"Usuarios\", icon: \"pi pi-fw pi-user\", to: \"/User\"}\r\n                ]\r\n            },\r\n            {\r\n                label: \"Gestion de Empresa\", icon: \"pi pi-fw pi-briefcase\",\r\n                \"items\": [\r\n                    {\"label\": \"Empresas\", icon: \"pi pi-fw pi-briefcase\", to: \"/Empresa\"}\r\n                ]\r\n            },\r\n            {\r\n                label: \"Gestion Publicacion\", icon: \"pi pi-fw pi-sitemap\",\r\n                \"items\": [\r\n                    {\"label\": \"Convocatoria\"              , icon: \"pi pi-fw pi-id-card\"     , to: \"/Convocatoria\"},\r\n                    {\"label\": \"Pliego de Especificaciones\", icon: \"pi pi-fw pi-check-square\", to: \"/PliegoEspecificacion\"}\r\n                ]\r\n            },\r\n            {\r\n                label: \"Gestion de Firma de Contrato\", icon: \"pi pi-fw pi-sitemap\",\r\n                \"items\": [\r\n                    {\"label\": \"Firma de contrato\"              , icon: \"pi pi-fw pi-id-card\"     , to: \"/Contrato\"}\r\n                ]\r\n            },\r\n            {\r\n                label: \"Gestion de Orden de Cambio\", icon: \"pi pi-fw pi-sitemap\",\r\n                \"items\": [\r\n                    {\"label\": \"Orden de cambio\"              , icon: \"pi pi-fw pi-id-card\"     , to: \"/Orden\"}\r\n                ]\r\n            },\r\n            {\r\n                label: \"Gestion de Plan de Pagos\", icon: \"pi pi-fw pi-sitemap\",\r\n                \"items\": [\r\n                    {\"label\": \"Plan de pagos\"              , icon: \"pi pi-fw pi-id-card\"     , to: \"/Plan\"}\r\n                ]\r\n            },\r\n            {\r\n                label: \"Gestion de Entrega\", icon: \"pi pi-fw pi-sitemap\",\r\n                \"items\": [\r\n                    {\"label\": \"Parte A\"              , icon: \"pi pi-fw pi-id-card\"     , to: \"/ParteA\"},\r\n                    {\"label\": \"Parte B\"              , icon: \"pi pi-fw pi-id-card\"     , to: \"/ParteB\"}\r\n                ]\r\n            },\r\n            {\r\n                label: \"Gestion Avisos\", icon: \"pi pi-fw pi-sitemap\",\r\n                \"items\": [\r\n                    {\"label\": \"Avisos\", icon: \"pi pi-fw pi-id-card\", to: \"/Aviso\"}\r\n                ]\r\n            },\r\n            {\r\n                label: \"Lista de empresas\", icon: \"pi pi-fw pi-briefcase\",\r\n                \"items\": [\r\n                    {\"label\": \"Empresas\", icon: \"pi pi-fw pi-briefcase\", to: \"/ListEmpresa\"}\r\n                ]\r\n            },\r\n            {\r\n                label: \"Lista de Publicaciones\", icon: \"pi pi-fw pi-sitemap\",\r\n                \"items\": [\r\n                    {\"label\": \"Convocatoria\"              , icon: \"pi pi-fw pi-id-card\"     , to: \"/ListConvocatoria\"},\r\n                    {\"label\": \"Pliego de Especificaciones\", icon: \"pi pi-fw pi-check-square\", to: \"/ListPliego\"}\r\n                ]\r\n            },\r\n            {\r\n                label: \"FORO DE DISCUSION\", icon: \"pi pi-fw pi-sitemap\",\r\n                \"items\": [\r\n                    {label: \"Foro\", icon: \"pi pi-fw pi-users\", to: \"/Forum\"}\r\n                ]\r\n            }\r\n    \r\n    ];\r\n\r\n    return (\r\n        <div className={wrapperClass} onClick={onWrapperClick}>\r\n            <AppTopbar onToggleMenuClick={onToggleMenuClick} layoutColorMode={layoutColorMode}\r\n                       mobileTopbarMenuActive={mobileTopbarMenuActive} onMobileTopbarMenuClick={onMobileTopbarMenuClick} onMobileSubTopbarMenuClick={onMobileSubTopbarMenuClick}/>\r\n\r\n            <div className=\"layout-sidebar\" onClick={onSidebarClick}>\r\n                <AppMenu model={menu} onMenuItemClick={onMenuItemClick} layoutColorMode={layoutColorMode} />\r\n            </div>\r\n\r\n            <div className=\"layout-main-container\">\r\n                <div className=\"layout-main\">\r\n                    <Route path=\"/\"                      exact component={Dashboard}/>\r\n                    <Route path=\"/Role\"                  exact={true} render={props => <Role                 layoutColorMode={layoutColorMode} {...props} />}/>\r\n                    <Route path=\"/User\"                  exact={true} render={props => <User                 layoutColorMode={layoutColorMode} {...props} />}/>\r\n                    <Route path=\"/Empresa\"               exact={true} render={props => <Empresa              layoutColorMode={layoutColorMode} {...props} />}/>\r\n                    <Route path=\"/Convocatoria\"          exact={true} render={props => <Convocatoria         layoutColorMode={layoutColorMode} {...props} />}/>\r\n                    <Route path=\"/PliegoEspecificacion\"  exact={true} render={props => <PliegoEspecificacion layoutColorMode={layoutColorMode} {...props} />}/>\r\n                    <Route path=\"/Aviso\"                 component={Aviso}/>\r\n                    <Route path=\"/ListEmpresa\"           exact={true} render={props => <ListEmpresa          layoutColorMode={layoutColorMode} {...props} />}/>\r\n                    <Route path=\"/ListConvocatoria\"      exact={true} render={props => <ListConvocatoria     layoutColorMode={layoutColorMode} {...props} />}/>\r\n                    <Route path=\"/ListPliego\"            exact={true} render={props => <ListPliego           layoutColorMode={layoutColorMode} {...props} />}/>\r\n                    <Route path=\"/Forum\"            exact={true} render={props => <Forum           layoutColorMode={layoutColorMode} {...props} />}/>\r\n                    <Route path=\"/Contrato\"             exact={true} render={props => <Contrato              layoutColorMode={layoutColorMode} {...props} />}/>\r\n                    <Route path=\"/Orden\"                exact={true} render={props => <Orden                 layoutColorMode={layoutColorMode} {...props} />}/>\r\n                    <Route path=\"/Plan\"                 exact={true} render={props => <Plan                  layoutColorMode={layoutColorMode} {...props} />}/>\r\n                    <Route path=\"/ParteA\"               exact={true} render={props => <ParteA                layoutColorMode={layoutColorMode} {...props} />}/>\r\n                    <Route path=\"/ParteB\"               exact={true} render={props => <ParteB                layoutColorMode={layoutColorMode} {...props} />}/>\r\n\r\n                </div>\r\n\r\n                <AppFooter layoutColorMode={layoutColorMode}/>\r\n            </div>\r\n\r\n            <AppConfig rippleEffect={ripple} onRippleEffect={onRipple} inputStyle={inputStyle} onInputStyleChange={onInputStyleChange}\r\n                       layoutMode={layoutMode} onLayoutModeChange={onLayoutModeChange} layoutColorMode={layoutColorMode} onColorModeChange={onColorModeChange} />\r\n\r\n            <CSSTransition classNames=\"layout-mask\" timeout={{ enter: 200, exit: 200 }} in={mobileMenuActive} unmountOnExit>\r\n                <div className=\"layout-mask p-component-overlay\"></div>\r\n            </CSSTransition>\r\n\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default App;\r\n","import { useEffect } from 'react';\r\nimport { useLocation, withRouter } from 'react-router-dom';\r\n\r\nconst ScrollToTop = (props) => {\r\n\r\n    let location = useLocation();\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0)\r\n    }, [location]);\r\n\r\n    return props.children;\r\n}\r\n\r\nexport default withRouter(ScrollToTop);\r\n","import React,{useEffect,useState,useRef}   from 'react';\r\nimport axios                from 'axios';\r\nimport { Link }             from 'react-router-dom';\r\nimport { InputText }        from 'primereact/inputtext';\r\nimport { Password }         from 'primereact/password';\r\nimport { Button }           from 'primereact/button';\r\nimport { ProgressSpinner }  from 'primereact/progressspinner';\r\nimport { Toast }            from 'primereact/toast';\r\n\r\nimport { useFormik }        from \"formik\";\r\nimport { useHistory }       from 'react-router-dom';\r\nimport Cookies              from 'universal-cookie';\r\n\r\nexport const LoginApp = (props) =>{\r\n\r\n    const history            = useHistory();\r\n    const [isPush,setIsPush] = useState(true);\r\n    const toast              = useRef(null);\r\n    const cookies            = new Cookies();\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email:     \"\",\r\n            password:  \"\"\r\n        },\r\n        validate: (data) => {\r\n            let errors = {};\r\n\r\n            if (!data.email) {\r\n                errors.email = \"Se requiere el correo electronico\";\r\n            } else if (data.email.length > 255) {\r\n                errors.email = \"Como maximo 255 caracteres\";\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(data.email)) {\r\n                errors.email = 'Dirección de correo electrónico inválida. P.ej. ejemplo@email.com';\r\n            }\r\n\r\n            if (!data.password) {\r\n                errors.password = \"Se requiere la contraseña\";\r\n            } else if (data.password.length > 255) {\r\n                errors.password = \"Como maximo 255 caracteres\";\r\n            }\r\n\r\n            return errors;\r\n        },\r\n\r\n        onSubmit: (data) => {\r\n            setIsPush(false);\r\n            const timeout = setTimeout(() => {}, 10000);\r\n            axios.post('https://magic-tech-backend.herokuapp.com/api/login', \r\n            {\r\n                email:     `${data.email}`,\r\n                password:  `${data.password}`\r\n            }).then(function (response) {\r\n\r\n                cookies.set('id'        , response.data.id        , {path: \"/\"});\r\n                cookies.set('nombre'    , response.data.nombre    , {path: \"/\"});\r\n                cookies.set('apellido'  , response.data.apellido  , {path: \"/\"});\r\n                cookies.set('email'     , response.data.email     , {path: \"/\"});\r\n                cookies.set('rol'       , response.data.rol       , {path: \"/\"});\r\n                cookies.set('isLogin'   , true);\r\n\r\n                console.log('id:        '+cookies.get('id'));\r\n                console.log('nombre:    '+cookies.get('nombre'));\r\n                console.log('apellido:  '+cookies.get('apellido'));\r\n                console.log('email:     '+cookies.get('email'));\r\n                console.log('rol:       '+cookies.get('rol'));\r\n                console.log('isLogin:   '+cookies.get('isLogin'));\r\n\r\n                if(response.status === 200){\r\n                    clearTimeout(timeout);\r\n                    history.push('/');\r\n                }\r\n                formik.resetForm();\r\n                setIsPush(true);\r\n            })\r\n            .catch(function (error) {\r\n                toast.current.show({severity:'error', summary: 'Error Message', detail:'El correo electronico o la contraseña son incorrectas', life: 3000});\r\n                clearTimeout(timeout);\r\n                setIsPush(true);\r\n                formik.resetForm();\r\n                formik.setValues({\r\n                    email:`${data.email}`,\r\n                    password:''\r\n                }); \r\n            });\r\n        },\r\n      });\r\n\r\n\r\n\r\n\r\n\r\n    const isFormFieldValid = (name) => !!(formik.touched[name] && formik.errors[name]);\r\n    const getFormErrorMessage = (name) => {\r\n        return isFormFieldValid(name) && <small className=\"ml-5 p-error\" style={{'color': '#ff0000'}}>{formik.errors[name]}</small>;\r\n    };\r\n\r\n    return(\r\n        <div className=\"grid justify-content-evenly mt-6\">\r\n            <Toast ref={toast} />\r\n            <div className=\"lg:col-3\"></div>\r\n            <div className=\" lg:col-3 md:col-3\">\r\n                <div className=\"card p-fluid\" style={cookies.get('theme') === 'light' ?{ 'border': 'black 2px outset' }:{ 'border': 'white 2px outset' }}>\r\n                    <form onSubmit={formik.handleSubmit}>\r\n                        <div className='grid flex justify-content-center'>\r\n                            <div className=\"flex align-items-center justify-content-center  m-2\">\r\n                                <h2 className=\"p-text-center p-p-1\">Iniciar sesión</h2>        \r\n                            </div>\r\n                        </div>\r\n                        <div className='grid flex justify-content-center'>\r\n                            <div className=\"flex align-items-center justify-content-center  m-2\">\r\n                                <img src={cookies.get('theme') === 'light' ? 'assets/layout/images/avatar.png' : 'assets/layout/images/avatar-dark.png'} className=\"p-avatar-xl\"  shape=\"circle\"  size=\"xlarge\" style={{'height': '8em','width':'8em',}}/>               \r\n                            </div>\r\n                        </div>\r\n                        <div className='grid flex justify-content-center'>\r\n                            <div className=\"flex align-items-center justify-content-center\">\r\n                                <div className=\"p-field mt-1 lg:col-11\">\r\n                                    <div className=\"p-inputgroup\">\r\n                                            <span className=\"p-inputgroup-addon\">\r\n                                                <img   src={cookies.get('theme') === 'light' ? 'assets/layout/images/gmail.png' : 'assets/layout/images/gmail-dark.png'} style={{'height': '1.2em','width':'1.2em',}}/>   \r\n                                            </span>\r\n                                            <InputText id=\"email\" name='email' placeholder=\"Correo electronico\" value={formik.values.email} onChange={formik.handleChange} autoFocus/>\r\n                                    </div>       \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {getFormErrorMessage('email')}\r\n                        \r\n                        <div className='grid flex justify-content-center'>\r\n                            <div className=\"flex align-items-center justify-content-center\">\r\n                                <div className=\"p-field mt-1 lg:col-10\">\r\n                                    <div className=\"p-inputgroup\">\r\n                                            <span className=\"p-inputgroup-addon\">\r\n                                                <img   src={cookies.get('theme') === 'light' ? 'assets/layout/images/password.png' : 'assets/layout/images/password-dark.png'} style={{'height': '1.2em','width':'1.2em',}}/>      \r\n                                            </span>\r\n                                            <Password id=\"password\" name='password' placeholder=\"Contraseña\" value={formik.values.password} onChange={formik.handleChange} toggleMask  feedback={false}/>\r\n                                    </div>       \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {getFormErrorMessage('password')}\r\n                        {\r\n                            (isPush)?\r\n                            <div className='grid flex justify-content-center'>\r\n                                <div className=\"flex align-items-center justify-content-center  m-2\">\r\n                                    <Button type=\"submit\" id=\"buttonSubmit\" icon=\"pi pi-arrow-right\"  className=\"p-button-raised mt-4 p-button-lg\"  style={{'fontSize': '1.5em', 'background-color':'#d13639', 'color':'#ffffff', 'border':'1px solid hsl(0deg 0% 100% / 12%)'}}/>\r\n                                </div>\r\n                            </div>\r\n                            :\r\n                            <div className='grid flex justify-content-center'>\r\n                                <div className=\"flex align-items-center justify-content-center  m-4\">\r\n                                    <ProgressSpinner style={{width: '50px', height: '50px', stroke: '#d62d20'}} strokeWidth=\"8\" fill=\"var(--surface-ground)\" animationDuration=\"10s\"/>\r\n                                </div>\r\n                            </div>  \r\n                        }\r\n                        <div className='grid flex justify-content-center'>\r\n                            <div className=\"flex align-items-center justify-content-center  mt-3\">\r\n                                <Link to=\"/Register\" >\r\n                                    <Button label=\"Crear una cuenta\" className=\"p-button-link\" style={cookies.get('theme') === 'light' ? {'color':'#000000', 'font-weight': 'bold'} : {'color':'#ffffff', 'font-weight': 'bold'}}/>\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                        <div className='grid flex justify-content-center'>\r\n                            <div className=\"flex align-items-center justify-content-center\">\r\n                                <Link to=\"/\" >\r\n                                    <Button label=\"Pagina principal\" className=\"p-button-link\" style={cookies.get('theme') === 'light' ? {'color':'#000000', 'font-weight': 'bold'} : {'color':'#ffffff', 'font-weight': 'bold'}}/>\r\n                                </Link>\r\n                            </div>\r\n                        </div>        \r\n                    </form>\r\n                </div>\r\n            </div>\r\n            <div className=\"lg:col-3\"></div>\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\n","import React,{useEffect,useState,useRef}   from 'react';\r\nimport axios                from 'axios';\r\nimport { Link }             from 'react-router-dom';\r\nimport { InputText }        from 'primereact/inputtext';\r\nimport { Password }         from 'primereact/password';\r\nimport { Button }           from 'primereact/button';\r\nimport { Toast }            from 'primereact/toast';\r\nimport { ProgressSpinner }  from 'primereact/progressspinner';\r\nimport { useHistory }       from 'react-router-dom';\r\n\r\nimport { useFormik }        from \"formik\";\r\nimport uniqid               from 'uniqid';\r\nimport Cookies              from 'universal-cookie';\r\n\r\nimport { createUser,getUsers} from '../service/apiUser';\r\n\r\nexport const Register = (props) =>{\r\n\r\n    const toast                           = useRef(null);\r\n    const [users, setUsers]               = useState(null);\r\n    const history                         = useHistory();\r\n    const [emailUpdate, setEmailUpdate]   = useState(\"\");\r\n    const [isPush,setIsPush]              = useState(true);\r\n    const cookies                         = new Cookies();\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            nombre:    \"\",\r\n            apellido:  \"\",\r\n            email:     \"\",\r\n            password:  \"\",\r\n            confirmPassword : \"\"\r\n        },\r\n        validate: (data) => {\r\n            let errors = {};\r\n\r\n            if (!data.nombre) {\r\n                errors.nombre = \"Se requiere el nombre\";\r\n            } else if (data.nombre.length < 2) {\r\n                errors.nombre = \"Como minimo 2 caracteres\";\r\n            } else if (data.nombre.length > 30) {\r\n                errors.nombre = \"Como maximo 30 caracteres\";\r\n            } else if (!/^^[a-zA-Z\\s]+$/i.test(data.nombre)) {\r\n                errors.nombre = \"No se permiten numero o caracteres especiales\";\r\n            }\r\n\r\n            if (!data.apellido) {\r\n                errors.apellido = \"Se requiere el apellido\";\r\n            } else if (data.apellido.length < 2) {\r\n                errors.apellido = \"Como minimo 2 caracteres\";\r\n            } else if (data.apellido.length > 30) {\r\n                errors.apellido = \"Como maximo 30 caracteres\";\r\n            }else if (!/^^[a-zA-Z\\s]+$/i.test(data.apellido)) {\r\n                errors.apellido = \"No se permiten numero o caracteres especiales\";\r\n            }\r\n\r\n            if (!data.email) {\r\n                errors.email = \"Se requiere el correo electronico\";\r\n            } else if (data.email.length > 255) {\r\n                errors.email = \"Como maximo 255 caracteres\";\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(data.email)) {\r\n                errors.email = 'Dirección de correo electrónico inválida. P.ej. ejemplo@email.com';\r\n            }else if(!esRepetido(data.email)){\r\n                errors.email = \"Ya existe el correo electronico\";\r\n            }\r\n\r\n            if (!data.password) {\r\n                errors.password = \"Se requiere la contraseña\";\r\n            } else if (data.password.length < 6) {\r\n                errors.password = \"Como minimo 6 caracteres\";\r\n            } else if (data.password.length > 255) {\r\n                errors.password = \"Como maximo 255 caracteres\";\r\n            }\r\n\r\n            if (!data.confirmPassword) {\r\n                errors.confirmPassword = \"Se requiere la confirmacion de la contraseña\";\r\n            }else if (data.confirmPassword != data.password) {\r\n                errors.confirmPassword = \"Las contraseñas deben coincidir\";\r\n            } \r\n\r\n            return errors;\r\n        },\r\n\r\n        onSubmit: (data) => {\r\n            let idUser = uniqid(\"user-\");\r\n            let rolUser= \"rol-kvjva7f6\";\r\n            setIsPush(false); \r\n            const timeout = setTimeout(() => {}, 10000);\r\n\r\n            axios.post('https://magic-tech-backend.herokuapp.com/api/createUser', \r\n            {\r\n                id:         `${idUser}`,\r\n                nombre:     `${data.nombre}`,\r\n                apellido:   `${data.apellido}`,\r\n                email:      `${data.email}`,\r\n                password:   `${data.password}`,\r\n                rol:        `${rolUser}` \r\n            }\r\n            )\r\n            .then(function (response) {\r\n                if(response.status === 200){\r\n                    clearTimeout(timeout);\r\n                    toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Registrado Exitosamente', life: 3000 });\r\n                    \r\n                }\r\n                formik.resetForm();\r\n                setIsPush(true);\r\n            })\r\n            .catch(function (error) {\r\n                clearTimeout(timeout);\r\n                setIsPush(true);\r\n                formik.resetForm();\r\n            });\r\n\r\n        },\r\n      });\r\n\r\n\r\n    const isFormFieldValid = (name) => !!(formik.touched[name] && formik.errors[name]);\r\n    const getFormErrorMessage = (name) => {\r\n        return isFormFieldValid(name) && <small className=\"ml-2 p-error\" style={{'color': '#ff0000'}}>{formik.errors[name]}</small>;\r\n    };\r\n\r\n\r\n    const esRepetido =(value)=>{\r\n        var _users = [...users];\r\n        let res = _users.find(i => (i.email).toLowerCase() === (value).toLowerCase() );\r\n         if(res === undefined){\r\n             return true;\r\n         }else{\r\n             return false;\r\n         }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        fetchUsers();\r\n    },[])\r\n\r\n    const fetchUsers = () =>{\r\n        getUsers().then(json =>{\r\n            if(json.error){\r\n                console.log(\"Error\");\r\n            }else{\r\n                console.log(\"---------Users insertados-----------\");\r\n                setUsers(json.data);\r\n            }\r\n        })\r\n    }\r\n\r\n    return(\r\n        <div className=\"grid justify-content-evenly mt-6\">\r\n            <Toast ref={toast} />\r\n            <div className=\"lg:col-3\"></div>\r\n            <div className=\" lg:col-3 md:col-3\">\r\n                <div className=\"card p-fluid\" style={cookies.get('theme') === 'light' ?{ 'border': 'black 2px outset' }:{ 'border': 'white 2px outset' }}>\r\n                    <form onSubmit={formik.handleSubmit}>\r\n                        <div className='grid flex justify-content-center'>\r\n                            <div className=\"flex align-items-center justify-content-center  \">\r\n                                <h2 className=\"p-text-center p-p-1\">Registrarse</h2>        \r\n                            </div>\r\n                        </div>\r\n                        <div className='grid flex justify-content-center'>\r\n                            <div className=\"flex align-items-center justify-content-center  \">\r\n                                <div className=\"p-field mt-2 lg:col-12\">\r\n                                    <div className=\"p-inputgroup\">\r\n                                            <span className=\"p-inputgroup-addon\">\r\n                                                <i className=\"pi pi-user\"></i>\r\n                                            </span>\r\n                                            <InputText id=\"nombre\" name='nombre' placeholder=\"Nombre\" value={formik.values.nombre} onChange={formik.handleChange} autoFocus/>\r\n                                    </div>       \r\n                                </div>\r\n                            </div>   \r\n                        </div>\r\n                        {getFormErrorMessage('nombre')}\r\n                        \r\n                        <div className='grid flex justify-content-center'>\r\n                            <div className=\"flex align-items-center justify-content-center  \">\r\n                                <div className=\"p-field mt-1 lg:col-12\">\r\n                                    <div className=\"p-inputgroup\">\r\n                                            <span className=\"p-inputgroup-addon\">\r\n                                                <i className=\"pi pi-user\"></i>\r\n                                            </span>\r\n                                            <InputText id=\"apellido\" name='apellido' placeholder=\"Apellido\" value={formik.values.apellido} onChange={formik.handleChange}/>\r\n                                    </div>       \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {getFormErrorMessage('apellido')}\r\n                        \r\n                        <div className='grid flex justify-content-center'>\r\n                            <div className=\"flex align-items-center justify-content-center  \">\r\n                                <div className=\"p-field mt-1 lg:col-12\">\r\n                                    <div className=\"p-inputgroup\">\r\n                                            <span className=\"p-inputgroup-addon\">\r\n                                                <img   src={cookies.get('theme') === 'light' ? 'assets/layout/images/gmail.png' : 'assets/layout/images/gmail-dark.png'} style={{'height': '1.2em','width':'1.2em',}}/>   \r\n                                            </span>\r\n                                            <InputText id=\"email\" name='email' placeholder=\"Correo electronico\" value={formik.values.email} onChange={formik.handleChange}/>\r\n                                    </div>       \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {getFormErrorMessage('email')}\r\n\r\n                        <div className='grid flex justify-content-center'>\r\n                            <div className=\"flex align-items-center justify-content-center  \">\r\n                                <div className=\"p-field mt-1 lg:col-11\">\r\n                                    <div className=\"p-inputgroup\">\r\n                                            <span className=\"p-inputgroup-addon\">\r\n                                                <img   src={cookies.get('theme') === 'light' ? 'assets/layout/images/password.png' : 'assets/layout/images/password-dark.png'} style={{'height': '1.2em','width':'1.2em',}}/>   \r\n                                            </span>\r\n                                            <Password id=\"password\" name='password' placeholder=\"Contraseña\" value={formik.values.password} onChange={formik.handleChange} toggleMask  promptLabel=\"Por favor ingrese una contraseña\" weakLabel=\"Débil\" mediumLabel=\"Medio\" strongLabel=\"Fuerte\"/>\r\n                                    </div>       \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {getFormErrorMessage('password')}\r\n\r\n                        <div className='grid flex justify-content-center'>\r\n                            <div className=\"flex align-items-center justify-content-center  \">\r\n                                <div className=\"p-field mt-1 lg:col-11\">\r\n                                    <div className=\"p-inputgroup\">\r\n                                            <span className=\"p-inputgroup-addon\">\r\n                                                <img   src={cookies.get('theme') === 'light' ? 'assets/layout/images/password.png' : 'assets/layout/images/password-dark.png'} style={{'height': '1.2em','width':'1.2em',}}/>   \r\n                                            </span>\r\n                                            <Password id=\"confirmPassword\" name='confirmPassword' placeholder=\"Repite la contraseña\" value={formik.values.confirmPassword} onChange={formik.handleChange} toggleMask  promptLabel=\"Por favor ingrese una contraseña\" weakLabel=\"Débil\" mediumLabel=\"Medio\" strongLabel=\"Fuerte\"/>\r\n                                    </div>       \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {getFormErrorMessage('confirmPassword')}\r\n\r\n                        {\r\n                            (isPush)?\r\n                            <div className='grid flex justify-content-center'>\r\n                                <div className=\"flex align-items-center justify-content-center  \">\r\n                                    <div className=\"p-field mt-3 lg:col-11\">\r\n                                        <Button label=\"Registrar\"  icon=\"pi pi-check\" type=\"submit\" className=\"p-button-text\"  style={{'background': '#13af4e','color':'#ffffff'}}/>  \r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            :\r\n                            <div className='grid flex justify-content-center'>\r\n                                <div className=\"flex align-items-center justify-content-center  m-4\">\r\n                                    <ProgressSpinner style={{width: '50px', height: '50px', stroke: '#d62d20'}} strokeWidth=\"8\" fill=\"var(--surface-ground)\" animationDuration=\"10s\"/>\r\n                                </div>\r\n                            </div>  \r\n                        }\r\n\r\n                        <div className='grid flex justify-content-center mt-3'>\r\n                            <div className=\"flex align-items-center justify-content-center\">\r\n                                <Link to=\"/Login\" >\r\n                                    <Button label=\"Iniciar sesion\" className=\"p-button-link\" style={cookies.get('theme') === 'light' ? {'color':'#000000', 'font-weight': 'bold'} : {'color':'#ffffff', 'font-weight': 'bold'}}/>\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                        <div className='grid flex justify-content-center'>\r\n                            <div className=\"flex align-items-center justify-content-center\">\r\n                                <Link to=\"/\" >\r\n                                    <Button label=\"Pagina principal\" className=\"p-button-link\" style={cookies.get('theme') === 'light' ? {'color':'#000000', 'font-weight': 'bold'} : {'color':'#ffffff', 'font-weight': 'bold'}}/>\r\n                                </Link>\r\n                            </div>\r\n                        </div>        \r\n                    </form>\r\n                </div>\r\n            </div>\r\n            <div className=\"lg:col-3\"></div>\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\n","import 'react-app-polyfill/ie11';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n//import * as serviceWorker from './serviceWorker';\r\nimport { HashRouter, Switch ,Route} from 'react-router-dom'\r\nimport ScrollToTop                  from './ScrollToTop';\r\nimport { LoginApp }                 from './components/LoginApp';\r\nimport { Register }                 from './components/Register';\r\nimport Cookies                   from 'universal-cookie';\r\n\r\n\r\n{const cookies  = new Cookies()\r\n    cookies.set('isLogin', false);\r\n}\r\n\r\n\r\nReactDOM.render(\r\n\r\n    <HashRouter>\r\n        <Switch>\r\n            <Route path=\"/Login\"    exact={true} render={props => <LoginApp layoutColorMode={'light'} {...props} />} />\r\n            <Route path=\"/Register\" exact={true} render={props => <Register layoutColorMode={'light'} {...props} />} />\r\n            <ScrollToTop>\r\n                <App></App>\r\n            </ScrollToTop>\r\n        </Switch>\r\n    </HashRouter>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\n//serviceWorker.unregister();"],"sourceRoot":""}