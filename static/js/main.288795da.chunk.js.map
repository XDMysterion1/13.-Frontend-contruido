{"version":3,"sources":["AppTopbar.js","AppFooter.js","AppMenu.js","AppConfig.js","components/Dashboard.js","service/apiRole.js","components/Role.js","service/apiUser.js","components/User.js","service/apiEmpresa.js","components/Empresa.js","components/Convocatoria.js","service/apiConvocatoria.js","components/PliegoEspecificacion.js","service/apiPliego.js","components/Aviso.js","App.js","ScrollToTop.js","components/LoginApp.js","components/Register.js","index.js"],"names":["AppTopbar","props","login","setLogin","useState","history","useHistory","cookies","Cookies","className","type","onClick","onToggleMenuClick","onMobileTopbarMenuClick","to","src","layoutColorMode","alt","style","set","classNames","mobileTopbarMenuActive","onMobileSubTopbarMenuClick","push","AppFooter","height","AppSubmenu","activeIndex","setActiveIndex","onMenuItemClick","event","item","index","disabled","preventDefault","command","originalEvent","renderLink","i","content","submenuIcon","items","badge","Fragment","icon","label","renderLinkContent","activeClassName","e","exact","target","href","url","map","active","styleClass","badgeStyleClass","root","key","CSSTransition","timeout","enter","exit","in","unmountOnExit","AppMenu","model","AppConfig","setActive","scale","setScale","scales","themeScheme","setThemeScheme","themeColor","setThemeColor","config","useRef","outsideClickListener","unbindOutsideClickListener","useCallback","current","document","removeEventListener","hideConfigurator","bindOutsideClickListener","isOutsideClicked","addEventListener","useEffect","isSameNode","contains","documentElement","fontSize","configClassName","theme","themeElement","getElementById","replaceLink","linkElement","callback","isIE","setAttribute","id","getAttribute","cloneLinkElement","cloneNode","parentNode","insertBefore","nextSibling","remove","test","window","navigator","userAgent","changeThemeScheme","onColorModeChange","value","changeThemeColor","color","ref","prevState","length","inputId","name","onChange","onLayoutModeChange","checked","layoutMode","htmlFor","width","borderRadius","Dashboard","getRoles","axios","get","Role","emptyRole","rol","roles","setRoles","roleDialog","setRoleDialog","deleteRoleDialog","setDeleteRoleDialog","role","setRole","selectedRoles","setSelectedRoles","submitted","setSubmitted","toast","dt","stateRole","setStateRole","showMessage","setShowMessage","rolUpdate","setRolUpdate","formik","useFormik","initialValues","validate","data","errors","esRepetidoUpdate","esRepetido","onSubmit","_roles","_role","trim","console","log","findIndexById","put","then","response","catch","error","updateRolID","show","severity","summary","detail","life","uniqid","post","createRol","resetForm","undefined","find","toLowerCase","original","res","filter","fetchRoles","json","openNew","hideDialog","hideDeleteRoleDialog","deleteRoleDialogFooter","val","delete","headerGroup","header","left","headerColumnGroup","selection","onSelectionChange","dataKey","paginator","rows","rowsPerPageOptions","paginatorTemplate","currentPageReportTemplate","resizableColumns","columnResizeMode","showGridlines","field","sortable","body","rowData","setValues","editRole","confirmDeleteRole","visible","modal","onHide","handleSubmit","values","handleChange","placeholder","autoFocus","touched","isFormFieldValid","footer","getUsers","User","emptyUser","nombre","apellido","email","password","setRol","users","setUsers","userDialog","setUserDialog","deleteUserDialog","setDeleteUserDialog","user","setUser","selectedUsers","setSelectedUsers","stateUser","setStateUser","emailUpdate","setEmailUpdate","confirmPassword","_users","_user","updateUserID","createUser","getFormErrorMessage","fetchUsers","hideDeleteUserDialog","deleteUserDialogFooter","editUser","confirmDeleteUser","toggleMask","promptLabel","weakLabel","mediumLabel","strongLabel","options","optionLabel","optionValue","Empresa","emptyEmpresa","nombreCorto","nombreLargo","tipoSociedad","direccion","informacion","empresas","setEmpresas","empresaDialog","setEmpresaDialog","deleteEmpresaDialog","setDeleteEmpresaDialog","empresa","setEmpresa","selectedEmpresas","setSelectedEmpresas","stateEmpresa","setStateEmpresa","empresaUpdate","setEmpresaUpdate","esRepetidoEmpresa","esRepetidoUpdateEmpresa","_empresas","_empresa","updateEmpresaID","createEmpresa","fetchEmpresas","hideDeleteEmpresaDialog","deleteEmpresaDialogFooter","editEmpresa","confirmDeleteEmpresa","tipo","tipoSociedadad","Convocatoria","emptyConvocatoria","titulo","codigo","semestre","link","convocatorias","setConvocatorias","convocatoriaDialog","setConvocatoriaDialog","deleteConvocatoriaDialog","setDeleteConvocatoriaDialog","convocatoria","setConvocatoria","selectedConvocatorias","setSelectedConvocatorias","stateConvocatoria","setStateConvocatoria","convocatoriaUpdate","setConvocatoriaUpdate","_convocatorias","_convocatoria","updateConvocatoriaID","createConvocatoria","fetchConvocatorias","hideDeleteConvocatoriaDialog","deleteConvocatoriaDialogFooter","open","editConvocatoria","confirmDeleteConvocatoria","PliegoEspecificacion","emptyPliego","pliegos","setPliegos","pliegoDialog","setPliegoDialog","deletePliegoDialog","setDeletePliegoDialog","pliego","setPliego","selectedPliegos","setSelectedPliegos","statePliego","setStatePliego","pliegoUpdate","setPliegoUpdate","_pliegos","_pliego","updatePliegoID","createPliego","fetchPliegos","hideDeletePliegoDialog","deletePliegoDialogFooter","editPliego","confirmDeletePliego","Aviso","App","setLayoutMode","setLayoutColorMode","inputStyle","setInputStyle","ripple","setRipple","staticMenuInactive","setStaticMenuInactive","overlayMenuActive","setOverlayMenuActive","mobileMenuActive","setMobileMenuActive","setMobileTopbarMenuActive","PrimeReact","menuClick","mobileTopbarMenuClick","addClass","removeClass","isDesktop","innerWidth","element","classList","add","replace","RegExp","split","join","wrapperClass","path","component","render","rippleEffect","onRippleEffect","onInputStyleChange","mode","withRouter","location","useLocation","scrollTo","children","LoginApp","isPush","setIsPush","setTimeout","status","clearTimeout","shape","size","feedback","stroke","strokeWidth","fill","animationDuration","Register","idUser","ReactDOM"],"mappings":"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","file":"static/js/main.288795da.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { Link }          from 'react-router-dom';\r\nimport classNames        from 'classnames';\r\nimport { useHistory }    from 'react-router-dom';\r\nimport Cookies           from 'universal-cookie';\r\n\r\nexport const AppTopbar = (props) => {\r\n    const [login, setLogin]    = useState(false);\r\n    const history              = useHistory();\r\n    const cookies              = new Cookies();\r\n    \r\n    \r\n    return (\r\n        <div className=\"layout-topbar\">\r\n\r\n            <button type=\"button\" className=\"p-link  layout-menu-button layout-topbar-button\" onClick={props.onToggleMenuClick}>\r\n                <i className=\"pi pi-bars\"/>\r\n            </button>\r\n        \r\n\r\n            <button type=\"button\" className=\"p-link layout-topbar-menu-button layout-topbar-button\" onClick={props.onMobileTopbarMenuClick}>\r\n                <i className=\"pi pi-ellipsis-v\" />\r\n            </button>\r\n\r\n            <Link to=\"/\" className=\"layout-topbar-logo ml-6 \">\r\n                <img src={props.layoutColorMode === 'light' ? 'assets/layout/images/MagicTech.png' : 'assets/layout/images/MagicTech.png'} alt=\"logo\" style={{'height': '1.8em','width':'2.0em',}}/>\r\n                {(props.layoutColorMode === 'light')?cookies.set('theme', 'light'):cookies.set('theme', 'dark')}\r\n                <span>MAGIC TECH</span>\r\n            </Link>\r\n                {(login)? \r\n                 ( \r\n                    <ul className={classNames(\"layout-topbar-menu lg:flex origin-top\", {'layout-topbar-menu-mobile-active': props.mobileTopbarMenuActive })}>\r\n                        <li>\r\n                            <button className=\"p-link layout-topbar-button\" onClick={props.onMobileSubTopbarMenuClick}>\r\n                                <i className=\"pi pi-calendar\"/>\r\n                                <span>Events</span>\r\n                            </button>\r\n                        </li>\r\n                        <li>\r\n                            <button className=\"p-link layout-topbar-button\" onClick={props.onMobileSubTopbarMenuClick}>\r\n                                <i className=\"pi pi-cog\"/>\r\n                                <span>Settings</span>\r\n                            </button>\r\n                        </li>\r\n                        <li>\r\n                            <button className=\"p-link layout-topbar-button\" onClick={props.onMobileSubTopbarMenuClick}>\r\n                                <i className=\"pi pi-user\"/>\r\n                                <span>Profile</span>\r\n                            </button>\r\n                        </li>\r\n                    </ul>\r\n                )\r\n                :\r\n                (\r\n                    <ul className={classNames(\"layout-topbar-menu lg:flex origin-top\", {'layout-topbar-menu-mobile-active': props.mobileTopbarMenuActive })}>\r\n                        <li>\r\n                            <button className=\"p-link layout-topbar-button\"  onClick={() => history.push('/Register')}>\r\n                                <i className=\"pi pi-user-plus\"/>\r\n                                <span>Registrarse</span>\r\n                            </button>\r\n                        </li>\r\n                        <li>\r\n                            <button className=\"p-link layout-topbar-button\"  onClick={() => history.push('/Login')}>\r\n                                <i className=\"pi pi-user\"/>\r\n                                <span>Iniciar Sesion</span>\r\n                            </button>\r\n                        </li>\r\n                    </ul>\r\n                ) \r\n                }\r\n\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\n\r\nexport const AppFooter = (props) => {\r\n\r\n    return (\r\n        <div className=\"layout-footer\">\r\n            <img src={props.layoutColorMode === 'light' ? 'assets/layout/images/MagicTech.png' : 'assets/layout/images/MagicTech.png'} alt=\"Logo\" height=\"20\" className=\"mr-2\" style={{'height': '2.7em','width':'3em',}}/>\r\n            por\r\n            <span className=\"font-medium ml-2\">MAGIC TECH</span>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport classNames from 'classnames';\r\nimport {Ripple} from \"primereact/ripple\";\r\n\r\nconst AppSubmenu = (props) => {\r\n\r\n    const [activeIndex, setActiveIndex] = useState(null)\r\n\r\n    const onMenuItemClick = (event, item, index) => {\r\n        //avoid processing disabled items\r\n        if (item.disabled) {\r\n            event.preventDefault();\r\n            return true;\r\n        }\r\n\r\n        //execute command\r\n        if (item.command) {\r\n            item.command({ originalEvent: event, item: item });\r\n        }\r\n\r\n        if (index === activeIndex)\r\n            setActiveIndex(null);\r\n        else\r\n            setActiveIndex(index);\r\n\r\n        if (props.onMenuItemClick) {\r\n            props.onMenuItemClick({\r\n                originalEvent: event,\r\n                item: item\r\n            });\r\n        }\r\n    }\r\n\r\n    const renderLinkContent = (item) => {\r\n        let submenuIcon = item.items && <i className=\"pi pi-fw pi-angle-down menuitem-toggle-icon\"></i>;\r\n        let badge = item.badge && <span className=\"menuitem-badge\">{item.badge}</span>;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <i className={item.icon}></i>\r\n                <span>{item.label}</span>\r\n                {submenuIcon}\r\n                {badge}\r\n                <Ripple/>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    const renderLink = (item, i) => {\r\n        let content = renderLinkContent(item);\r\n\r\n        if (item.to) {\r\n            return (\r\n                <NavLink className=\"p-ripple\" activeClassName=\"router-link-active router-link-exact-active\" to={item.to} onClick={(e) => onMenuItemClick(e, item, i)} exact target={item.target}>\r\n                    {content}\r\n                </NavLink>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <a href={item.url} className=\"p-ripple\" onClick={(e) => onMenuItemClick(e, item, i)} target={item.target}>\r\n                    {content}\r\n                </a>\r\n            );\r\n        }\r\n    }\r\n\r\n    let items = props.items && props.items.map((item, i) => {\r\n        let active = activeIndex === i;\r\n        let styleClass = classNames(item.badgeStyleClass, {'layout-menuitem-category': props.root, 'active-menuitem': active && !item.to });\r\n\r\n        if(props.root) {\r\n            return (\r\n                <li className={styleClass} key={i}>\r\n                    {props.root === true && <React.Fragment>\r\n                        <div className=\"layout-menuitem-root-text\">{item.label}</div>\r\n                        <AppSubmenu items={item.items} onMenuItemClick={props.onMenuItemClick} />\r\n                    </React.Fragment>}\r\n                </li>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <li className={styleClass} key={i}>\r\n                    {renderLink(item, i)}\r\n                    <CSSTransition classNames=\"layout-submenu-wrapper\" timeout={{ enter: 1000, exit: 450 }} in={active} unmountOnExit>\r\n                        <AppSubmenu items={item.items} onMenuItemClick={props.onMenuItemClick} />\r\n                    </CSSTransition>\r\n                </li>\r\n            );\r\n        }\r\n    });\r\n\r\n    return items ? <ul className={props.className}>{items}</ul> : null;\r\n}\r\n\r\nexport const AppMenu = (props) => {\r\n    return (\r\n        <div className=\"layout-menu-container\">\r\n            <AppSubmenu items={props.model} className=\"layout-menu\" onMenuItemClick={props.onMenuItemClick} root={true} />\r\n\r\n        </div>\r\n    );\r\n}\r\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\r\nimport { RadioButton } from 'primereact/radiobutton';\r\nimport { InputSwitch } from 'primereact/inputswitch';\r\nimport classNames from 'classnames';\r\nimport {Button} from \"primereact/button\";\r\nimport Cookies  from 'universal-cookie';\r\n\r\nexport const AppConfig = (props) => {\r\n\r\n    const [active, setActive] = useState(false);\r\n    const [scale, setScale] = useState(16);\r\n    const [scales] = useState([12,13,14,15,16]);\r\n    const [themeScheme, setThemeScheme] = useState('saga');\r\n    const [themeColor, setThemeColor] = useState('blue');\r\n    const config = useRef(null);\r\n    let outsideClickListener = useRef(null);\r\n    const cookies  = new Cookies();\r\n\r\n    const unbindOutsideClickListener = useCallback(() => {\r\n        if (outsideClickListener.current) {\r\n            document.removeEventListener('click', outsideClickListener.current);\r\n            outsideClickListener.current = null;\r\n        }\r\n    }, []);\r\n\r\n    const hideConfigurator = useCallback((event) => {\r\n        setActive(false);\r\n        unbindOutsideClickListener();\r\n        event.preventDefault();\r\n    }, [unbindOutsideClickListener]);\r\n\r\n    const bindOutsideClickListener = useCallback(() => {\r\n        if (!outsideClickListener.current) {\r\n            outsideClickListener.current = (event) => {\r\n                if (active && isOutsideClicked(event)) {\r\n                    hideConfigurator(event);\r\n                }\r\n            };\r\n            document.addEventListener('click', outsideClickListener.current);\r\n        }\r\n    }, [active, hideConfigurator]);\r\n\r\n    useEffect(() => {\r\n        if (active) {\r\n            bindOutsideClickListener()\r\n        }\r\n        else {\r\n            unbindOutsideClickListener()\r\n        }\r\n    }, [active, bindOutsideClickListener, unbindOutsideClickListener]);\r\n\r\n    const isOutsideClicked = (event) => {\r\n        return !(config.current.isSameNode(event.target) || config.current.contains(event.target));\r\n    }\r\n\r\n    const decrementScale = () => {\r\n        setScale((prevState) => --prevState);\r\n    }\r\n\r\n    const incrementScale = () => {\r\n        setScale((prevState) => ++prevState);\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.documentElement.style.fontSize = scale + 'px';\r\n    }, [scale])\r\n\r\n    const toggleConfigurator = (event) => {\r\n        setActive(prevState => !prevState);\r\n    }\r\n\r\n    const configClassName = classNames('layout-config', {\r\n        'layout-config-active': active\r\n    });\r\n\r\n    useEffect(() => {\r\n        let theme = themeScheme + '-' + themeColor;\r\n        let themeElement = document.getElementById('theme-link');\r\n        const themeHref = 'assets/themes/' + theme + '/theme.css';\r\n        replaceLink(themeElement, themeHref);\r\n\r\n    })\r\n\r\n    const replaceLink = (linkElement, href, callback) => {\r\n        if (isIE()) {\r\n            linkElement.setAttribute('href', href);\r\n\r\n            if (callback) {\r\n                callback();\r\n            }\r\n        }\r\n        else {\r\n            const id = linkElement.getAttribute('id');\r\n            const cloneLinkElement = linkElement.cloneNode(true);\r\n\r\n            cloneLinkElement.setAttribute('href', href);\r\n            cloneLinkElement.setAttribute('id', id + '-clone');\r\n\r\n            linkElement.parentNode.insertBefore(cloneLinkElement, linkElement.nextSibling);\r\n\r\n            cloneLinkElement.addEventListener('load', () => {\r\n                linkElement.remove();\r\n                cloneLinkElement.setAttribute('id', id);\r\n\r\n                if (callback) {\r\n                    callback();\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    const isIE = () => {\r\n        return /(MSIE|Trident\\/|Edge\\/)/i.test(window.navigator.userAgent)\r\n    }\r\n\r\n    const changeThemeScheme = (e, theme) => {\r\n        props.onColorModeChange(e.value);\r\n        setThemeScheme(theme);\r\n        if(theme === 'saga'){\r\n            cookies.set('theme', 'light');\r\n        }else{\r\n            cookies.set('theme', 'dark');\r\n        }\r\n        \r\n    }\r\n\r\n    const changeThemeColor = (e, color) => {\r\n        setThemeColor(color);\r\n    }\r\n\r\n    return (\r\n        <div ref={config} className={configClassName} id={\"layout-config\"}>\r\n            <button className=\"layout-config-button p-link\" id=\"layout-config-button\" onClick={toggleConfigurator}>\r\n                <i className=\"pi pi-cog\"></i>\r\n            </button>\r\n            <Button className=\"p-button-danger layout-config-close p-button-rounded p-button-text\" icon=\"pi pi-times\" onClick={hideConfigurator}/>\r\n\r\n            <div className=\"layout-config-content\">\r\n                <h6 className=\"mt-0\">Escala de Componentes</h6>\r\n                <div className=\"config-scale\">\r\n                    <Button icon=\"pi pi-minus\" onClick={decrementScale} className=\"p-button-text\" disabled={scale === scales[0]} />\r\n                    {\r\n                        scales.map((item) => {\r\n                            return <i className={classNames('pi pi-circle-on', {'scale-active': item === scale})} key={item}/>\r\n                        })\r\n                    }\r\n                    <Button icon=\"pi pi-plus\" onClick={incrementScale} className=\"p-button-text\" disabled={scale === scales[scales.length - 1]} />\r\n                </div>\r\n\r\n            \r\n\r\n                <h6>Tipo de Menu</h6>\r\n                <div className=\"p-formgroup-inline\">\r\n                    <div className=\"field-radiobutton\">\r\n                        <RadioButton inputId=\"static\" name=\"layoutMode\" value=\"static\" onChange={(e) => props.onLayoutModeChange(e.value)} checked={props.layoutMode === 'static'} />\r\n                        <label htmlFor=\"static\">Estatico</label>\r\n                    </div>\r\n                    <div className=\"field-radiobutton\">\r\n                        <RadioButton inputId=\"overlay\" name=\"layoutMode\" value=\"overlay\" onChange={(e) => props.onLayoutModeChange(e.value)} checked={props.layoutMode === 'overlay'} />\r\n                        <label htmlFor=\"overlay\">Dinamico</label>\r\n                    </div>\r\n                </div>\r\n\r\n                <h6>Tema</h6>\r\n                <div className=\"p-formgroup-inline\">\r\n                    <div className=\"field-radiobutton\">\r\n                        <RadioButton inputId=\"light\" name=\"layoutColorMode\" value=\"light\" onChange={e => changeThemeScheme(e, 'saga')} checked={props.layoutColorMode === 'light'} />\r\n                        <label htmlFor=\"light\">Claro</label>\r\n                    </div>\r\n                    <div className=\"field-radiobutton\">\r\n                        <RadioButton inputId=\"dim\" name=\"layoutColorMode\" value=\"dim\" onChange={e => changeThemeScheme(e, 'vela')} checked={props.layoutColorMode === 'dim'} />\r\n                        <label htmlFor=\"dark\">Noche</label>\r\n                    </div>\r\n                    <div className=\"field-radiobutton\">\r\n                        <RadioButton inputId=\"dark\" name=\"layoutColorMode\" value=\"dark\" onChange={e => changeThemeScheme(e, 'arya')} checked={props.layoutColorMode === 'dark'} />\r\n                        <label htmlFor=\"dark\">Oscuro</label>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <h6>Colores Primarios</h6>\r\n                <div className=\"flex\">\r\n                    <div style={{width: '2rem', height: '2rem', borderRadius:'6px'}} className=\"bg-blue-500 mr-3 cursor-pointer\" onClick={e => changeThemeColor(e, 'blue')}/>\r\n                    <div style={{width: '2rem', height: '2rem', borderRadius:'6px'}} className=\"bg-green-500 mr-3 cursor-pointer\" onClick={e => changeThemeColor(e, 'green')}/>\r\n                    <div style={{width: '2rem', height: '2rem', borderRadius:'6px'}} className=\"bg-orange-500 mr-3 cursor-pointer\" onClick={e => changeThemeColor(e, 'orange')}/>\r\n                    <div style={{width: '2rem', height: '2rem', borderRadius:'6px'}} className=\"bg-purple-500 mr-3 cursor-pointer\" onClick={e => changeThemeColor(e, 'purple')}/>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react';\r\n\r\n\r\nexport const Dashboard = () => {\r\n\r\n    return (\r\n        <div className=\"grid\">\r\n             <h1>Estamos trabajando - En el Tablero</h1>\r\n        </div>\r\n    );\r\n}\r\n","import axios from 'axios';\r\n\r\n export const getRoles = () =>{\r\n     return axios.get('https://magic-tech-backend.herokuapp.com/api/getRoles');\r\n }\r\n\r\n export const getRolID =(id) =>{\r\n     return axios.get(`https://magic-tech-backend.herokuapp.com/api/getRolId/${id}`);\r\n }\r\n\r\n export const createRol=(data)=>{\r\n    return axios.post('https://magic-tech-backend.herokuapp.com/api/createRol', \r\n      {\r\n         id:  `${data.id}`,\r\n         rol: `${data.rol}`,\r\n      }\r\n      )\r\n      .then(function (response) {\r\n        console.log(response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n }\r\n\r\nexport const updateRolID =(data,id) =>{\r\n    return axios.put(`https://magic-tech-backend.herokuapp.com/api/updateRol/${id}`, \r\n    {\r\n       rol: `${data.rol}`\r\n    }\r\n    )\r\n    .then(function (response) {\r\n      console.log(response);\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error);\r\n    });\r\n}\r\n\r\nexport const deleteRolID =(id) =>{\r\n    return axios.delete(`https://magic-tech-backend.herokuapp.com/api/deleteRolId/${id}`);\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport classNames           from 'classnames';\r\nimport { DataTable }        from 'primereact/datatable';\r\nimport { Column }           from 'primereact/column';\r\nimport { Toast }            from 'primereact/toast';\r\nimport { Button }           from 'primereact/button';\r\nimport { Toolbar }          from 'primereact/toolbar';\r\nimport { Dialog }           from 'primereact/dialog';\r\nimport { InputText }        from 'primereact/inputtext';\r\nimport { ColumnGroup }      from 'primereact/columngroup';\r\nimport { Row }              from 'primereact/row';\r\nimport { useFormik }        from \"formik\";\r\n\r\nimport uniqid               from 'uniqid';\r\n\r\nimport { getRoles,createRol,updateRolID,deleteRolID } from '../service/apiRole';\r\n\r\nexport const Role = (props) => {\r\n\r\n    \r\n    let emptyRole = {\r\n        id: null,\r\n        rol: ''\r\n    };\r\n\r\n    const [roles, setRoles]                          = useState(null);\r\n    const [roleDialog, setRoleDialog]                = useState(false);\r\n    const [deleteRoleDialog, setDeleteRoleDialog]    = useState(false);\r\n\r\n    const [role, setRole]                            = useState(emptyRole);\r\n    const [selectedRoles, setSelectedRoles]          = useState(null);\r\n    const [submitted, setSubmitted]                  = useState(false);\r\n    const toast                                      = useRef(null);\r\n    const dt                                         = useRef(null);\r\n    const [stateRole,setStateRole]                   = useState(false);\r\n    const [showMessage, setShowMessage]              = useState(false);\r\n    const [rolUpdate, setRolUpdate]                  = useState(\"\");\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n          rol: \"\"\r\n        },\r\n        validate: (data) => {\r\n            let errors = {};\r\n\r\n            if (!data.rol) {\r\n                errors.rol = \"Se requiere el rol\";\r\n            } else if (data.rol.length < 2) {\r\n                errors.rol = \"Como minimo 2 caracteres\";\r\n            } else if (data.rol.length > 30) {\r\n                errors.rol = \"Como maximo 30 caracteres\";\r\n            } else if (!/^^[a-zA-Z\\s]+$/i.test(data.rol)) {\r\n                errors.rol = \"No se permiten numero o caracteres especiales\";\r\n            }else if(!esRepetidoUpdate(data.rol,rolUpdate)&&stateRole === true){\r\n                errors.rol = \"Ya existe el rol\";  \r\n            }else if(!esRepetido(data.rol)&&stateRole === false){\r\n                errors.rol = \"Ya existe el rol\";\r\n            }\r\n\r\n            return errors;\r\n        },\r\n        onSubmit: (data) => {\r\n            setSubmitted(true);\r\n            setShowMessage(true);\r\n            let _roles = [...roles];\r\n            let _role  = {...role };\r\n            _role['rol'] = data.rol;\r\n\r\n            if (_role.rol.trim()) {\r\n                if (role.id) {\r\n                    setRole({ ...role });\r\n                    console.log(role);\r\n                    const index = findIndexById(role.id);\r\n                    \r\n                    _roles[index] = _role;\r\n                    updateRolID({rol:`${_role.rol}`},role.id);\r\n                    toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Rol Actualizado', life: 3000 });\r\n                }\r\n                else {\r\n\r\n                    _role.id = uniqid(\"rol-\"); \r\n                    _roles.push(_role);\r\n                    createRol({id:_role.id, rol:`${_role.rol}`});\r\n                    toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Rol Creado', life: 3000 });\r\n                }\r\n            }\r\n            setRoles(_roles);\r\n            setRoleDialog(false);\r\n            setRole(emptyRole);\r\n            formik.resetForm();\r\n            \r\n        },\r\n      });\r\n\r\n    const isFormFieldValid = (name) => !!(formik.touched[name] && formik.errors[name]);\r\n    const getFormErrorMessage = (name) => {\r\n         return isFormFieldValid(name) && <small className=\"ml-1 p-error\" style={{'color': '#ff0000'}}>{formik.errors[name]}</small>;\r\n    };\r\n\r\n    const esRepetido =(value)=>{\r\n        var _roles = [...roles];\r\n        let res = _roles.find(i => (i.rol).toLowerCase().trim() === (value).toLowerCase().trim() );\r\n         if(res === undefined){\r\n             return true;\r\n         }else{\r\n             return false;\r\n         }\r\n    }\r\n    const esRepetidoUpdate =(value,original)=>{\r\n        var _roles = [...roles];\r\n        let aux = _roles.filter(i =>(i.rol).toLowerCase() != (original).toLowerCase())\r\n        let res = aux.find(i => (i.rol).toLowerCase().trim() === (value).toLowerCase().trim() );\r\n         if(res === undefined || res === original){\r\n             return true;\r\n         }else{\r\n             return false;\r\n         }\r\n    }\r\n\r\n\r\n    useEffect(()=>{\r\n        fetchRoles();\r\n    },[])\r\n\r\n\r\n    const fetchRoles = () =>{\r\n        getRoles().then(json =>{\r\n            if(json.error){\r\n                console.log(\"Error\");\r\n            }else{\r\n                console.log(\"---------roles insertados-----------\");\r\n                setRoles(json.data);\r\n            }\r\n        })\r\n    }\r\n\r\n    const openNew = () => {\r\n        setRole(emptyRole);\r\n        setSubmitted(false);\r\n        setStateRole(false);\r\n        formik.resetForm();\r\n        setRoleDialog(true);      \r\n    }\r\n\r\n    const hideDialog = () => {\r\n        setSubmitted(false);\r\n        setRoleDialog(false);\r\n    }\r\n\r\n    const hideDeleteRoleDialog = () => {\r\n        setDeleteRoleDialog(false);\r\n    }\r\n\r\n\r\n    const editRole = (role) => {\r\n        setRole({ ...role });\r\n        formik.resetForm();\r\n        formik.setValues({rol:`${role.rol}`});\r\n        setRolUpdate(`${role.rol}`);\r\n        setStateRole(true);\r\n        setRoleDialog(true);\r\n    }\r\n\r\n    const confirmDeleteRole = (role) => {\r\n        setRole(role);\r\n        setDeleteRoleDialog(true);\r\n    }\r\n\r\n    const deleteRole = () => {\r\n        let _roles = roles.filter(val => val.id !== role.id);\r\n        setRoles(_roles);\r\n        setDeleteRoleDialog(false);\r\n\r\n        if (role.rol.trim()) {\r\n            if (role.id) {\r\n                deleteRolID(role.id);\r\n            }\r\n        }\r\n        setRole(emptyRole);\r\n        \r\n        toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Rol Eliminado', life: 3000 });\r\n    }\r\n\r\n    const findIndexById = (id) => {\r\n        let index = -1;\r\n        for (let i = 0; i < roles.length; i++) {\r\n            if (roles[i].id === id) {\r\n\r\n                index = i;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return index;\r\n    }\r\n\r\n\r\n    const idBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">id</span>\r\n                {rowData.id}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const roleBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Rol</span>\r\n                {rowData.rol}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const leftToolbarTemplate = () => {\r\n        return (\r\n            <React.Fragment>\r\n                <Button style={props.layoutColorMode === 'light' ? {'color':'#ffffff','background': '#13af4e'} : {'color':'#ffffff','background': '#13af4e'}} label=\"Nuevo\" icon=\"pi pi-plus\" className=\"p-button-success p-mr-2\" onClick={openNew} />\r\n                \r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    const actionBodyTemplate = (rowData) => {\r\n        return (\r\n            <div className=\"actions\">\r\n                <Button icon=\"pi pi-pencil\" style={{'background': '#13af4e'}} className=\"p-button-rounded p-button-success p-mr-2\"   onClick={() => editRole(rowData)} />\r\n                <Button icon=\"pi pi-trash\"  style={{'background': '#eee500'}} className=\"p-button-rounded p-button-warning\"          onClick={() => confirmDeleteRole(rowData)} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const deleteRoleDialogFooter = (\r\n        <>\r\n            <Button label=\"No\" icon=\"pi pi-times\" style={{'background': '#d13639','color':'#ffffff'}} className=\"p-button-text\" onClick={hideDeleteRoleDialog} />\r\n            <Button label=\"Si\" icon=\"pi pi-check\" style={props.layoutColorMode === 'light' ? {'color':'#13af4e','border-color':'#13af4e'} : {'color':'#13af4e','border-color':'#13af4e'}} className=\"p-button-text\" onClick={deleteRole} />\r\n        </>\r\n    );\r\n\r\n\r\n    let headerGroup = <ColumnGroup>\r\n                        <Row>\r\n                            <Column header=\"ID\"                 style={{ 'background-color': '#13af4e', width:'20%'}} />\r\n                            <Column header=\"ROL\"                style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                            <Column header=\"Editar/Eliminar\"    style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                        </Row>\r\n                    </ColumnGroup>;\r\n\r\nconst headerDialog =()=>{\r\n    return (stateRole)?\"Actualizando Rol\":\"Añadir Rol\"\r\n}\r\n\r\n    return (\r\n        <div className=\"p-grid crud-demo\">\r\n            <div className=\"p-col-12\">\r\n                <div className=\"card\">\r\n                \r\n                    <Toast ref={toast} />\r\n                    <Toolbar className=\"p-mb-4\" left={leftToolbarTemplate}></Toolbar>\r\n\r\n                    <DataTable headerColumnGroup={headerGroup} ref={dt} value={roles} selection={selectedRoles}  onSelectionChange={(e) => setSelectedRoles(e.value)}\r\n                        dataKey=\"id\" paginator rows={10} rowsPerPageOptions={[5, 10, 25]} className=\"datatable-responsive p-datatable-sm\"\r\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\r\n                        currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} roles\" resizableColumns columnResizeMode=\"fit\" showGridlines>\r\n\r\n                        <Column style={{width:'20%'}} field=\"id\"   header=\"ID\"  sortable body={idBodyTemplate}></Column>\r\n                        <Column style={{width:'20%'}} field=\"role\" header=\"ROL\" sortable body={roleBodyTemplate}></Column>\r\n                        <Column style={{width:'20%'}} body={actionBodyTemplate}></Column>\r\n\r\n                    </DataTable>\r\n\r\n\r\n                    <Dialog visible={roleDialog} style={{ width: '450px' }} header={headerDialog} modal className=\"p-fluid\" onHide={hideDialog}>  \r\n                        <form onSubmit={formik.handleSubmit}>\r\n                            <div className=\"form-group\">\r\n                                <div className=\"p-field mt-2\">\r\n                                    <div className=\"p-inputgroup\">\r\n                                            <span className=\"p-inputgroup-addon\">\r\n                                                <img   src={props.layoutColorMode === 'light' ? 'assets/layout/images/rol.png' : 'assets/layout/images/rol-dark.png'} style={{'height': '1.2em','width':'1.2em',}}/>   \r\n                                                \r\n                                            </span>\r\n                                            <InputText id=\"rol\" type=\"text\" name=\"rol\" value={formik.values.rol} onChange={formik.handleChange} placeholder=\"Rol\" autoFocus/>\r\n                                    </div>       \r\n                                </div>\r\n                                {getFormErrorMessage('rol')}\r\n                            </div>\r\n                            <div className='mt-2'>\r\n                                <div className=\"flex justify-content-center flex-wrap\">\r\n                                    <div className=\"flex align-items-center justify-content-center  m-2\">\r\n                                        <Button label=\"Cancelar\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDialog} style={props.layoutColorMode === 'light' ? {'color':'#d13639','border-color':'#d13639'} : {'color':'#d13639','border-color':'#d13639'}}/>\r\n                                    </div>\r\n                                    <div className=\"flex align-items-center justify-content-center  m-2\">\r\n                                        <Button label=\"Guardar\"  icon=\"pi pi-check\" type=\"submit\" className=\"p-button-text\" style={{'background': '#13af4e','color':'#ffffff'}}/>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </Dialog>\r\n\r\n                    <Dialog visible={deleteRoleDialog} style={{ width: '450px' }} header=\"Confirm\" modal footer={deleteRoleDialogFooter} onHide={hideDeleteRoleDialog}>\r\n                        <div className=\"confirmation-content\">\r\n                            <i className=\"pi pi-exclamation-triangle p-mr-3\" style={{ fontSize: '2rem' }} />\r\n                            {role && <span>¿Estás segura de que quieres eliminar? <b>{role.rol}</b>?</span>}\r\n                        </div>\r\n                    </Dialog>\r\n    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import axios from 'axios';\r\n\r\n export const getUsers = () =>{\r\n     return axios.get('https://magic-tech-backend.herokuapp.com/api/getUsers');\r\n }\r\n\r\n export const getUserID =(id) =>{\r\n     return axios.get(`https://magic-tech-backend.herokuapp.com/api/getUserId/${id}`);\r\n }\r\n\r\n\r\n\r\n export const createUser=(data)=>{\r\n    return axios.post('https://magic-tech-backend.herokuapp.com/api/createUser', \r\n      {\r\n         id:        `${data.id}`,\r\n         nombre:    `${data.nombre}`,\r\n         apellido:  `${data.apellido}`,\r\n         email:     `${data.email}`,\r\n         password:  `${data.password}`,\r\n         rol:       `${data.rol}`      //rol es un numero entero\r\n      }\r\n      )\r\n      .then(function (response) {\r\n        console.log(response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n }\r\n\r\nexport const updateUserID =(data,id) =>{\r\n    return axios.put(`https://magic-tech-backend.herokuapp.com/api/updateUser/${id}`, \r\n    {\r\n      nombre:    `${data.nombre}`,\r\n      apellido:  `${data.apellido}`,\r\n      email:     `${data.email}`,\r\n      password:  `${data.password}`,\r\n      rol:       `${data.rol}`      //rol es un numero entero\r\n    }\r\n    )\r\n    .then(function (response) {\r\n      console.log(response);\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error);\r\n    });\r\n}\r\n\r\nexport const deleteUserID =(id) =>{\r\n    return axios.delete(`https://magic-tech-backend.herokuapp.com/api/deleteUserId/${id}`);\r\n}\r\n\r\nexport async function login(data){\r\n\r\n  return await axios.post('https://magic-tech-backend.herokuapp.com/api/login', \r\n  {\r\n     email:     `${data.email}`,\r\n     password:  `${data.password}`\r\n  }).then(function (response) {\r\n    console.log(response);\r\n  })\r\n  .catch(function (error) {\r\n    console.log(error);\r\n  });\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport classNames           from 'classnames';\r\nimport { DataTable }        from 'primereact/datatable';\r\nimport { Column }           from 'primereact/column';\r\nimport { Toast }            from 'primereact/toast';\r\nimport { Button }           from 'primereact/button';\r\nimport { Toolbar }          from 'primereact/toolbar';\r\nimport { Dialog }           from 'primereact/dialog';\r\nimport { InputText }        from 'primereact/inputtext';\r\nimport { Password }         from 'primereact/password';\r\nimport { ColumnGroup }      from 'primereact/columngroup';\r\nimport { Row }              from 'primereact/row';\r\nimport { Dropdown }         from 'primereact/dropdown';\r\nimport { useFormik }        from \"formik\";\r\n\r\n\r\nimport uniqid               from 'uniqid';\r\n\r\nimport { getUsers,getUserID,createUser,updateUserID,deleteUserID } from '../service/apiUser';\r\nimport { getRoles }         from '../service/apiRole';\r\n\r\nexport const User = (props) => {\r\n\r\n    let emptyUser = {\r\n        id:       null,\r\n        nombre:     '',\r\n        apellido:     '',\r\n        email:    '',\r\n        password: '',\r\n        rol:      ''\r\n    };\r\n    \r\n    const [roles,setRoles]                           = useState(null);\r\n    const [rol, setRol]                              = useState(null);\r\n    const [users, setUsers]                          = useState(null);\r\n    const [userDialog, setUserDialog]                = useState(false);\r\n    const [deleteUserDialog, setDeleteUserDialog]    = useState(false);\r\n\r\n    const [user, setUser]                            = useState(emptyUser);\r\n    const [selectedUsers, setSelectedUsers]          = useState(null);\r\n    const [submitted, setSubmitted]                  = useState(false);\r\n    const toast                                      = useRef(null);\r\n    const dt                                         = useRef(null);\r\n    const [stateUser,setStateUser]                   = useState(false);\r\n    const [emailUpdate, setEmailUpdate]              = useState(\"\");\r\n  \r\n    const formik = useFormik({\r\n        initialValues: {\r\n            nombre:    \"\",\r\n            apellido:  \"\",\r\n            email:     \"\",\r\n            password:  \"\",\r\n            confirmPassword : \"\",\r\n            rol: ''\r\n        },\r\n        \r\n         validate: (data) => {\r\n            \r\n            let errors = {};\r\n            if (!data.nombre) {\r\n                errors.nombre = \"Se requiere el nombre\";\r\n            } else if (data.nombre.length < 2) {\r\n                errors.nombre = \"Como minimo 2 caracteres\";\r\n            } else if (data.nombre.length > 30) {\r\n                errors.nombre = \"Como maximo 30 caracteres\";\r\n            } else if (!/^^[a-zA-Z\\s]+$/i.test(data.nombre)) {\r\n                errors.nombre = \"No se permiten numero o caracteres especiales\";\r\n            }\r\n\r\n            if (!data.apellido) {\r\n                errors.apellido = \"Se requiere el apellido\";\r\n            } else if (data.apellido.length < 2) {\r\n                errors.apellido = \"Como minimo 2 caracteres\";\r\n            } else if (data.apellido.length > 30) {\r\n                errors.apellido = \"Como maximo 30 caracteres\";\r\n            }else if (!/^^[a-zA-Z\\s]+$/i.test(data.apellido)) {\r\n                errors.apellido = \"No se permiten numero o caracteres especiales\";\r\n            }\r\n\r\n            if (!data.email) {\r\n                errors.email = \"Se requiere el correo electronico\";\r\n            } else if (data.email.length > 255) {\r\n                errors.email = \"Como maximo 255 caracteres\";\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(data.email)) {\r\n                errors.email = 'Dirección de correo electrónico inválida. P.ej. ejemplo@email.com';\r\n            }else if(!esRepetido(data.email) && stateUser === false){\r\n                errors.email = \"Ya existe el correo electronico\";\r\n            } else if(!esRepetidoUpdate(data.email,emailUpdate) && stateUser === true){\r\n                errors.email = \"Ya existe el correo electronico\";  \r\n            }\r\n\r\n            if (!data.password) {\r\n                errors.password = \"Se requiere la contraseña\";\r\n            } else if (data.password.length < 6) {\r\n                errors.password = \"Como minimo 6 caracteres\";\r\n            } else if (data.password.length > 255) {\r\n                errors.password = \"Como maximo 255 caracteres\";\r\n            }\r\n\r\n            if (!data.confirmPassword) {\r\n                errors.confirmPassword = \"Se requiere la confirmacion de la contraseña\";\r\n            }else if (data.confirmPassword != data.password) {\r\n                errors.confirmPassword = \"Las contraseñas deben coincidir\";\r\n            } \r\n\r\n            if (!data.rol) {\r\n                errors.rol = \"Se requiere el rol\";\r\n            }\r\n            return errors;\r\n    \r\n        },\r\n        \r\n        onSubmit: (data ) => {\r\n\r\n        \r\n            if(submitted === true){\r\n                let _users = [...users];\r\n                let _user  = {...user };\r\n                _user['nombre']     = data.nombre;\r\n                _user['apellido']   = data.apellido;\r\n                _user['email']      = data.email;\r\n                _user['password']   = data.password;\r\n                _user['rol']        = data.rol;\r\n\r\n                if (_user.nombre.trim()) {\r\n                    if (user.id) {\r\n                        setUser({ ...user });\r\n                        const index = findIndexById(user.id);\r\n                        _users[index] = _user;\r\n                        \r\n                        updateUserID({nombre:`${_user.nombre}`,apellido:`${_user.apellido}`,email:`${_user.email}`,password:`${_user.password}`,rol:`${_user.rol}`},user.id);\r\n                        toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Usuario Actualizado', life: 3000 });\r\n                    }\r\n                    else {\r\n\r\n                        _user.id = uniqid(\"user-\");\r\n                        \r\n                        _users.push(_user);\r\n                        createUser({id:`${_user.id}`,nombre:`${_user.nombre}`,apellido:`${_user.apellido}`,email:`${_user.email}`,password:`${_user.password}`,rol:`${_user.rol}`});\r\n                        toast.current.show({ severity: 'success', summary: 'Successful', detail: 'usuario Creado', life: 3000 });\r\n                    }\r\n                }\r\n                setUsers(_users);\r\n                setUserDialog(false);\r\n                setUser(emptyUser);\r\n                formik.resetForm();\r\n        }\r\n            \r\n        },\r\n      });\r\n\r\n    const isFormFieldValid = (name) => !!(formik.touched[name] && formik.errors[name]);\r\n    const getFormErrorMessage = (name) => {\r\n        return isFormFieldValid(name) && <small className=\"ml-1 p-error\" style={{'color': '#ff0000'}}>{formik.errors[name]}</small>;\r\n    };\r\n\r\n    const esRepetido =(value)=>{\r\n        var _users = [...users];\r\n        let res = _users.find(i => (i.email).toLowerCase() === (value).toLowerCase() );\r\n         if(res === undefined){\r\n             return true;\r\n         }else{\r\n             return false;\r\n         }\r\n    }\r\n    const esRepetidoUpdate =(value,original)=>{\r\n        var _users = [...users];\r\n        let aux = _users.filter(i =>(i.email).toLowerCase() != (original).toLowerCase());\r\n        let res = aux.find(i => (i.email).toLowerCase() === (value).toLowerCase() );\r\n         if(res === undefined || res === original){\r\n             return true;\r\n         }else{\r\n             return false;\r\n         }\r\n    }\r\n\r\n\r\n    useEffect(()=>{\r\n        fetchRoles();\r\n    },[])\r\n\r\n    const fetchRoles = () =>{\r\n        getRoles().then(json =>{\r\n            if(json.error){\r\n                console.log(\"Error\");\r\n            }else{\r\n                console.log(\"---------roles insertados-----------\");\r\n                setRoles(json.data);\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        fetchUsers();\r\n    },[])\r\n\r\n    const fetchUsers = () =>{\r\n        getUsers().then(json =>{\r\n            if(json.error){\r\n                console.log(\"Error\");\r\n            }else{\r\n                console.log(\"---------Users insertados-----------\");\r\n                setUsers(json.data);\r\n            }\r\n        })\r\n    }\r\n\r\n    const openNew = () => {\r\n        setUser(emptyUser);\r\n        formik.resetForm();\r\n        setSubmitted(false);\r\n        setStateUser(false); \r\n        setUserDialog(true);    \r\n    }\r\n\r\n    const hideDialog = () => {\r\n        setSubmitted(false);\r\n        setUserDialog(false);\r\n    }\r\n\r\n    const showDialog = () => {\r\n        setSubmitted(true);\r\n        formik.handleSubmit();\r\n    }\r\n\r\n    const hideDeleteUserDialog = () => {\r\n        setDeleteUserDialog(false);\r\n    }\r\n\r\n    const editUser = (user) => {\r\n        setUser({ ...user });\r\n        setSubmitted(true);\r\n        formik.resetForm();\r\n        formik.setValues(\r\n            {nombre:        `${user.nombre}`,\r\n            apellido:       `${user.apellido}`,\r\n            email:          `${user.email}`,\r\n            password:       `${user.password}`,\r\n            confirmPassword:`${user.password}`,\r\n            rol:            `${user.rol}`\r\n        });\r\n        setEmailUpdate(`${user.email}`);\r\n        setStateUser(true);\r\n        setUserDialog(true);\r\n    }\r\n\r\n    const confirmDeleteUser = (user) => {\r\n        setUser(user);\r\n        setDeleteUserDialog(true);\r\n    }\r\n\r\n    const deleteUser = () => {\r\n        let _users = users.filter(val => val.id !== user.id);\r\n        setUsers(_users);\r\n        setDeleteUserDialog(false);\r\n\r\n        if (user.email.trim()) {\r\n            if (user.id) {\r\n                deleteUserID(user.id);\r\n            }\r\n        }\r\n        setUser(emptyUser);\r\n        toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Usuario Eliminado', life: 3000 });\r\n    }\r\n\r\n    const findIndexById = (id) => {\r\n        let index = -1;\r\n        for (let i = 0; i < users.length; i++) {\r\n            if (users[i].id === id) {\r\n\r\n                index = i;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return index;\r\n    }\r\n\r\n  \r\n    const idBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">id</span>\r\n                {rowData.id}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const nombreBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Nombre</span>\r\n                {rowData.nombre}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const apellidoBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Apellido</span>\r\n                {rowData.apellido}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const emailBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Correo electronico</span>\r\n                {rowData.email}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const passwordBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Contrasena</span>\r\n                {rowData.password}\r\n                \r\n            </>\r\n        );\r\n    }\r\n\r\n    \r\n\r\n\r\n    const rolBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Rol</span>\r\n                {rowData.rol}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const findRol = (rolFind) => {\r\n        \r\n        var _roles = [...roles]\r\n\r\n        let res = _roles.find(el => el.id === rolFind);\r\n        console.log(res[\"rol\"]);\r\n        return res;\r\n    }\r\n\r\n    const leftToolbarTemplate = () => {\r\n        return (\r\n            <React.Fragment>\r\n                <Button style={props.layoutColorMode === 'light' ? {'color':'#ffffff','background': '#13af4e'} : {'color':'#ffffff','background': '#13af4e'}} label=\"Nuevo\" icon=\"pi pi-plus\" className=\"p-button-success p-mr-2\" onClick={openNew}/>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    const actionBodyTemplate = (rowData) => {\r\n        return (\r\n            <div className=\"actions\">\r\n                <Button icon=\"pi pi-pencil\" style={{'background': '#13af4e'}} className=\"p-button-rounded p-button-success p-mr-2\"   onClick={() => editUser(rowData)} />\r\n                <Button icon=\"pi pi-trash\"  style={{'background': '#eee500'}} className=\"p-button-rounded p-button-warning\"          onClick={() => confirmDeleteUser(rowData)} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const deleteUserDialogFooter = (\r\n        <>\r\n            <Button label=\"No\" icon=\"pi pi-times\" style={{'background': '#d13639','color':'#ffffff'}} className=\"p-button-text\" onClick={hideDeleteUserDialog} />\r\n            <Button label=\"Si\" icon=\"pi pi-check\" style={props.layoutColorMode === 'light' ? {'color':'#13af4e','border-color':'#13af4e'} : {'color':'#13af4e','border-color':'#13af4e'}} className=\"p-button-text\" onClick={deleteUser} />\r\n        </>\r\n    );\r\n\r\n\r\n    let headerGroup = <ColumnGroup>\r\n                        <Row>\r\n                            <Column header=\"ID\"                 style={{ 'background-color': '#13af4e', width:'20%'}} />\r\n                            <Column header=\"NOMBRE\"             style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                            <Column header=\"APELLIDO\"           style={{ 'background-color': '#13af4e', width:'20%'}} />\r\n                            <Column header=\"CORREO ELECTRONICO\" style={{ 'background-color': '#13af4e', width:'40%'}}/>\r\n                            <Column header=\"CONTRASENA\"         style={{ 'background-color': '#13af4e', width:'20%'}} />\r\n                            <Column header=\"ROL\"                style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                            <Column header=\"Editar/Eliminar\"    style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                        </Row>\r\n                    </ColumnGroup>;\r\n\r\n\r\n    const headerDialog =()=>{\r\n        return (stateUser?\"Actualizando usuario\":\"Añadir Usuario\")\r\n    }\r\n\r\n    return (\r\n        \r\n        <div className=\"p-grid crud-demo\">\r\n            <div className=\"p-col-12\">\r\n                <div className=\"card\">\r\n                    <Toast ref={toast} />\r\n                    <Toolbar className=\"\" left={leftToolbarTemplate}></Toolbar>\r\n\r\n                    <DataTable headerColumnGroup={headerGroup} ref={dt} value={users} selection={selectedUsers}  onSelectionChange={(e) => setSelectedUsers(e.value)}\r\n                        dataKey=\"id\" paginator rows={10} rowsPerPageOptions={[5, 10, 25]} className=\"datatable-responsive p-datatable-sm col-12\"\r\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\r\n                        currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} users\" resizableColumns columnResizeMode=\"fit\" showGridlines>\r\n                    \r\n                        <Column style={{width:'20%'}} field=\"id\"         header=\"ID\"                 sortable body={idBodyTemplate}></Column>\r\n                        <Column style={{width:'20%'}} field=\"apellido\"   header=\"APELLIDO\"           sortable body={nombreBodyTemplate}></Column>\r\n                        <Column style={{width:'20%'}} field=\"nombre\"     header=\"NOMBRE\"             sortable body={apellidoBodyTemplate}></Column>\r\n                        <Column style={{width:'40%'}} field=\"email\"      header=\"CORREO ELECTRONICO\" sortable body={emailBodyTemplate}></Column>\r\n                        <Column style={{width:'20%'}} field=\"password\"   header=\"CONTRASENA\"         sortable body={passwordBodyTemplate}></Column>\r\n                        <Column style={{width:'20%'}} field=\"rol\"        header=\"ROL\"                sortable body={rolBodyTemplate}></Column>\r\n                        <Column style={{width:'20%'}} body={actionBodyTemplate}></Column>\r\n\r\n                    </DataTable>\r\n\r\n\r\n                    <Dialog visible={userDialog} style={{ width: '450px' }} header={headerDialog} modal className=\"p-fluid\" onHide={hideDialog}>\r\n                        <form onSubmit={formik.handleSubmit}>\r\n                            <div className=\"p-field mt-2\" >\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <i className=\"pi pi-user\"></i>\r\n                                        </span>\r\n                                        <InputText id=\"nombre\" name='nombre' placeholder=\"Nombre\" value={formik.values.nombre} onChange={formik.handleChange} autoFocus/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('nombre')}\r\n\r\n                            <div className=\"p-field mt-2\">\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <i className=\"pi pi-user\"></i>\r\n                                        </span>\r\n                                        <InputText id=\"apellido\" name='apellido' placeholder=\"Apellido\" value={formik.values.apellido} onChange={formik.handleChange}/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('apellido')}\r\n\r\n                            <div className=\"p-field mt-2\">\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <img   src={props.layoutColorMode === 'light' ? 'assets/layout/images/gmail.png' : 'assets/layout/images/gmail-dark.png'} style={{'height': '1.2em','width':'1.2em',}}/>  \r\n                                        </span>\r\n                                        <InputText id=\"email\" name='email' placeholder=\"Correo electronico\"  value={formik.values.email} onChange={formik.handleChange}/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('email')}\r\n\r\n                            <div className=\"p-field mt-2\">\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <img   src={props.layoutColorMode === 'light' ? 'assets/layout/images/password.png' : 'assets/layout/images/password-dark.png'} style={{'height': '1.2em','width':'1.2em',}}/>  \r\n                                        </span>\r\n                                        <Password id=\"password\" name='password' placeholder=\"Contraseña\"  value={formik.values.password} onChange={formik.handleChange} toggleMask  promptLabel=\"Por favor ingrese una contraseña\" weakLabel=\"Débil\" mediumLabel=\"Medio\" strongLabel=\"Fuerte\"/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('password')}\r\n\r\n                            <div className=\"p-field mt-2\">\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <img   src={props.layoutColorMode === 'light' ? 'assets/layout/images/password.png' : 'assets/layout/images/password-dark.png'} style={{'height': '1.2em','width':'1.2em',}}/>   \r\n                                        </span>\r\n                                        <Password id=\"rol\" name='confirmPassword' placeholder=\"Confirmar contraseña\"  value={formik.values.confirmPassword} onChange={formik.handleChange} toggleMask  promptLabel=\"Por favor ingrese una contraseña\" weakLabel=\"Débil\" mediumLabel=\"Medio\" strongLabel=\"Fuerte\"/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('confirmPassword')}\r\n\r\n                            <div className=\"p-field mt-2\">\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <img   src={props.layoutColorMode === 'light' ? 'assets/layout/images/rol.png' : 'assets/layout/images/rol-dark.png'} style={{'height': '1.2em','width':'1.2em',}}/>   \r\n                                        </span>\r\n                                        <Dropdown id=\"rol\" name=\"rol\" placeholder=\"Seleccione un rol\" value={formik.values.rol} onChange={formik.handleChange} options={roles} optionLabel=\"rol\"  optionValue=\"id\"/>   \r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('rol')}\r\n\r\n                            <div className='mt-2'>\r\n                                <div className=\"flex justify-content-center flex-wrap\">\r\n                                    <div className=\"flex align-items-center justify-content-center  m-2\">\r\n                                        <Button label=\"Cancelar\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDialog} style={props.layoutColorMode === 'light' ? {'color':'#d13639','border-color':'#d13639'} : {'color':'#d13639','border-color':'#d13639'}}/>\r\n                                    </div>\r\n                                    <div className=\"flex align-items-center justify-content-center  m-2\">\r\n                                        <Button label=\"Guardar\"  icon=\"pi pi-check\" type=\"submit\" className=\"p-button-text\" onClick={showDialog} style={{'background': '#13af4e','color':'#ffffff'}}/>  \r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </form>\r\n                    </Dialog>\r\n\r\n\r\n                    <Dialog className=\"mt-2\" visible={deleteUserDialog} style={{ width: '450px' }} header=\"Confirm\" modal footer={deleteUserDialogFooter} onHide={hideDeleteUserDialog}>\r\n                        <div className=\"confirmation-content\">\r\n                            <i className=\"pi pi-exclamation-triangle p-mr-3\" style={{ fontSize: '2rem' }} />\r\n                            {user && <span>¿Estás segura de que quieres eliminar? <b>{user.nombre}</b> <b>{user.apellido}</b>?</span>}\r\n                        </div>\r\n                    </Dialog>\r\n    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import axios from 'axios';\r\n\r\n export const getEmpresas = () =>{\r\n     return axios.get('https://magic-tech-backend.herokuapp.com/api/getEmpresas');\r\n }\r\n\r\n export const getEmpresaID =(id) =>{\r\n     return axios.get(`https://magic-tech-backend.herokuapp.com/api/getEmpresaId/${id}`);\r\n }\r\n\r\n\r\n\r\n export const createEmpresa=(data)=>{\r\n    return axios.post('https://magic-tech-backend.herokuapp.com/api/createEmpresa', \r\n      {\r\n         id:          `${data.id}`,\r\n         nombre:      `${data.nombre}`,\r\n         nombreCorto: `${data.nombreCorto}`,\r\n         nombreLargo: `${data.nombreLargo}`,\r\n         tipoSociedad:`${data.tipoSociedad}`,\r\n         direccion:   `${data.direccion}`,\r\n         email:       `${data.email}`,\r\n         password:    `${data.password}`,\r\n         informacion: `${data.informacion}`,\r\n         user:        `${data.user}`\r\n       \r\n      }\r\n      )\r\n      .then(function (response) {\r\n        console.log(response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n }\r\n\r\nexport const updateEmpresaID =(data,id) =>{\r\n    return axios.put(`https://magic-tech-backend.herokuapp.com/api/updateEmpresa/${id}`, \r\n    {\r\n      nombre:      `${data.nombre}`,\r\n      nombreCorto: `${data.nombreCorto}`,\r\n      nombreLargo: `${data.nombreLargo}`,\r\n      tipoSociedad:`${data.tipoSociedad}`,\r\n      direccion:   `${data.direccion}`,\r\n      email:       `${data.email}`,\r\n      password:    `${data.password}`,\r\n      informacion: `${data.informacion}`,\r\n      user:        `${data.user}`\r\n    }\r\n    )\r\n    .then(function (response) {\r\n      console.log(response);\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error);\r\n    });\r\n}\r\n\r\nexport const deleteEmpresaID =(id) =>{\r\n    return axios.delete(`https://magic-tech-backend.herokuapp.com/api/deleteEmpresaId/${id}`);\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport classNames           from 'classnames';\r\nimport { DataTable }        from 'primereact/datatable';\r\nimport { Column }           from 'primereact/column';\r\nimport { Toast }            from 'primereact/toast';\r\nimport { Button }           from 'primereact/button';\r\nimport { Toolbar }          from 'primereact/toolbar';\r\nimport { Dialog }           from 'primereact/dialog';\r\nimport { InputText }        from 'primereact/inputtext';\r\nimport { InputTextarea }    from 'primereact/inputtextarea';\r\nimport { Password }         from 'primereact/password';\r\nimport { ColumnGroup }      from 'primereact/columngroup';\r\nimport { Row }              from 'primereact/row';\r\nimport { Dropdown }         from 'primereact/dropdown';\r\nimport { useFormik }        from \"formik\";\r\n\r\nimport uniqid               from 'uniqid';\r\n\r\nimport { getUsers,getUserID,createUser,updateUserID,deleteUserID }   from '../service/apiUser';\r\nimport { getEmpresas,createEmpresa,updateEmpresaID,deleteEmpresaID } from '../service/apiEmpresa';\r\n\r\nexport const Empresa = (props) => {\r\n\r\n    let emptyEmpresa = {\r\n        id:              null,\r\n        nombre:          '',\r\n        nombreCorto:     '',\r\n        nombreLargo:     '',\r\n        tipoSociedad:    '',\r\n        direccion:       '',\r\n        email:           '',\r\n        password:        '',\r\n        informacion:     '',\r\n        user:            ''\r\n    };\r\n    \r\n    const Sociedades = [\r\n        {name: \"Sociedad de Responsabilidad Limitada\"       , tipo:\"S.R.L.\"},\r\n        {name: \"Sociedad Anónima\"                           , tipo:\"S.A.\"},\r\n        {name: \"Sociedad Colectiva\"                         , tipo:\"S.C.\"},\r\n        {name: \"Sociedad Anónima Mixta o de Economía Mixta\" , tipo:\"S.A.M.\"},\r\n        {name: \"Sociedad en Comandita Simple\"               , tipo:\"S.C.S.\"}\r\n    ];\r\n\r\n    const [users, setUsers]                             = useState(null);\r\n\r\n    const [empresas, setEmpresas]                       = useState(null);\r\n    const [empresaDialog, setEmpresaDialog]             = useState(false);\r\n    const [deleteEmpresaDialog, setDeleteEmpresaDialog] = useState(false);\r\n\r\n    const [empresa, setEmpresa]                         = useState(emptyEmpresa);\r\n    const [selectedEmpresas, setSelectedEmpresas]       = useState(null);\r\n    const [submitted, setSubmitted]                     = useState(false);\r\n    const toast                                         = useRef(null);\r\n    const dt                                            = useRef(null);\r\n    const [stateEmpresa,setStateEmpresa]                = useState(false);\r\n    const [emailUpdate, setEmailUpdate]                 = useState(\"\");\r\n    const [empresaUpdate, setEmpresaUpdate]             = useState(\"\");\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            nombre:          '',\r\n            nombreCorto:     '',\r\n            nombreLargo:     '',\r\n            tipoSociedad:    '',\r\n            direccion:       '',\r\n            email:           '',\r\n            password:        '',\r\n            confirmPassword :'',\r\n            informacion:     '',\r\n            user:            ''\r\n            \r\n        },\r\n         validate: (data) => {\r\n            let errors = {};\r\n\r\n            if (!data.nombre) {\r\n                errors.nombre = \"Se requiere el nombre\";\r\n            } else if (data.nombre.length < 2) {\r\n                errors.nombre = \"Como minimo 2 caracteres\";\r\n            } else if (data.nombre.length > 30) {\r\n                errors.nombre = \"Como maximo 30 caracteres\";\r\n            } else if (!/^^[a-zA-Z\\s]+$/i.test(data.nombre)) {\r\n                errors.nombre = \"No se permiten numero o caracteres especiales\";\r\n            }else if(!esRepetidoEmpresa(data.nombre) && stateEmpresa === false){\r\n                errors.nombre = \"Ya existe el nombre de la empresa\";\r\n            } else if(!esRepetidoUpdateEmpresa(data.nombre,empresaUpdate) && stateEmpresa === true){\r\n                errors.nombre = \"Ya existe el nombre de la empresa\";  \r\n            }\r\n\r\n\r\n            if (!data.nombreCorto) {\r\n                errors.nombreCorto = \"Se requiere el nombre corto\";\r\n            } else if (data.nombreCorto.length < 2) {\r\n                errors.nombreCorto = \"Como minimo 2 caracteres\";\r\n            } else if (data.nombreCorto.length > 30) {\r\n                errors.nombreCorto = \"Como maximo 30 caracteres\";\r\n            } else if (!/^^[a-zA-Z\\s]+$/i.test(data.nombreCorto)) {\r\n                errors.nombreCorto = \"No se permiten numero o caracteres especiales\";\r\n            }\r\n\r\n            if (!data.nombreLargo) {\r\n                errors.nombreLargo = \"Se requiere el nombre largo\";\r\n            } else if (data.nombreLargo.length < 2) {\r\n                errors.nombreLargo = \"Como minimo 2 caracteres\";\r\n            } else if (data.nombreLargo.length > 50) {\r\n                errors.nombreLargo = \"Como maximo 50 caracteres\";\r\n            } else if (!/^^[a-zA-Z\\s]+$/i.test(data.nombreLargo)) {\r\n                errors.nombreLargo = \"No se permiten numero o caracteres especiales\";\r\n            }\r\n\r\n            if (!data.tipoSociedad) {\r\n                errors.tipoSociedad = \"Se requiere el tipo de sociedad\";\r\n            } else if (data.tipoSociedad.length < 2) {\r\n                errors.tipoSociedad = \"Como minimo 2 caracteres\";\r\n            } else if (data.tipoSociedad.length > 30) {\r\n                errors.tipoSociedad = \"Como maximo 30 caracteres\";\r\n            } else if (!/^^[a-zA-Z.\\s]+$/i.test(data.tipoSociedad)) {\r\n                errors.tipoSociedad = \"No se permiten numero o caracteres especiales\";\r\n            }\r\n\r\n            if (!data.direccion) {\r\n                errors.direccion = \"Se requiere la direccion\";\r\n            } else if (data.direccion.length < 2) {\r\n                errors.direccion = \"Como minimo 2 caracteres\";\r\n            } else if (data.direccion.length > 50) {\r\n                errors.direccion = \"Como maximo 50 caracteres\";\r\n            }else if (!/^^[a-zA-Z0-9.\\s]+$/i.test(data.direccion)) {\r\n                errors.direccion = \"No se permiten numero o caracteres especiales\";\r\n            }\r\n\r\n            if (!data.email) {\r\n                errors.email = \"Se requiere el correo electronico\";\r\n            } else if (data.email.length > 255) {\r\n                errors.email = \"Como maximo 255 caracteres\";\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(data.email)) {\r\n                errors.email = 'Dirección de correo electrónico inválida. P.ej. ejemplo@email.com';\r\n            }else if(!esRepetido(data.email) && stateEmpresa === false){\r\n                errors.email = \"Ya existe el correo electronico\";\r\n            } else if(!esRepetidoUpdate(data.email,emailUpdate) && stateEmpresa === true){\r\n                errors.email = \"Ya existe el correo electronico\";  \r\n            }\r\n\r\n            if (!data.password) {\r\n                errors.password = \"Se requiere la contraseña\";\r\n            } else if (data.password.length < 6) {\r\n                errors.password = \"Como minimo 6 caracteres\";\r\n            } else if (data.password.length > 255) {\r\n                errors.password = \"Como maximo 255 caracteres\";\r\n            }\r\n\r\n            if (!data.confirmPassword) {\r\n                errors.confirmPassword = \"Se requiere la confirmacion de la contraseña\";\r\n            }else if (data.confirmPassword != data.password) {\r\n                errors.confirmPassword = \"Las contraseñas deben coincidir\";\r\n            } \r\n\r\n            if (!data.informacion) {\r\n                errors.informacion = \"Se requiere la informacion de la empresa\";\r\n            } else if (data.informacion.length < 2) {\r\n                errors.informacion = \"Como minimo 2 caracteres\";\r\n            } else if (data.informacion.length > 255) {\r\n                errors.informacion = \"Como maximo 255 caracteres\";\r\n            } else if (!/^^[a-zA-Z0-9.\\s]+$/i.test(data.informacion)) {\r\n                errors.informacion = \"No se permiten numero o caracteres especiales\";\r\n            }\r\n\r\n            if (!data.user) {\r\n                errors.user = \"Se requiere el usuario\";\r\n            } else if (data.user.length < 2) {\r\n                errors.user = \"Como minimo 2 caracteres\";\r\n            } else if (data.user.length > 30) {\r\n                errors.user = \"Como maximo 30 caracteres\";\r\n            }else if (!/^^[a-zA-Z0-9\\s-]+$/i.test(data.user)) {\r\n                errors.user = \"No se permiten numero o caracteres especiales\";\r\n            }\r\n\r\n\r\n            return errors;\r\n        },\r\n\r\n        onSubmit: (data) => {\r\n            if(submitted === true){\r\n                let _empresas = [...empresas];\r\n                let _empresa  = {...empresa };\r\n                _empresa['nombre']            = data.nombre;\r\n                _empresa['nombreCorto']       = data.nombreCorto;\r\n                _empresa['nombreLargo']       = data.nombreLargo;\r\n                _empresa['tipoSociedad']      = data.tipoSociedad;\r\n                _empresa['direccion']         = data.direccion;\r\n                _empresa['email']             = data.email;\r\n                _empresa['password']          = data.password;\r\n                _empresa['confirmPassword']   = data.confirmPassword;\r\n                _empresa['informacion']       = data.informacion;\r\n                _empresa['user']              = data.user;\r\n\r\n\r\n                if (_empresa.nombre.trim()) {\r\n                    if (empresa.id) {\r\n\r\n                        setEmpresa({ ...empresa });\r\n                        console.log(empresa);\r\n                        const index = findIndexById(empresa.id);\r\n                        _empresas[index] = _empresa;\r\n                        updateEmpresaID({nombre:`${_empresa.nombre}`,nombreCorto:`${_empresa.nombreCorto}`,nombreLargo:`${_empresa.nombreLargo}`,tipoSociedad:`${_empresa.tipoSociedad}`,direccion:`${_empresa.direccion}`,email:`${_empresa.email}`,password:`${_empresa.password}`,informacion:`${_empresa.informacion}`,user:`${_empresa.user}`},empresa.id);\r\n                        toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Empresa Actualizado', life: 3000 });\r\n                    }\r\n                    else {\r\n\r\n                        _empresa.id = uniqid(\"empresa-\");\r\n                        _empresas.push(_empresa);\r\n                        console.log({id:`${_empresa.id}`,nombre:`${_empresa.nombre}`,nombreCorto:`${_empresa.nombreCorto}`,nombreLargo:`${_empresa.nombreLargo}`,tipoSociedad:`${_empresa.tipoSociedad}`,direccion:`${_empresa.direccion}`,email:`${_empresa.email}`,password:`${_empresa.password}`,informacion:`${_empresa.informacion}`,user:`${_empresa.user}`});\r\n                        createEmpresa({id:`${_empresa.id}`,nombre:`${_empresa.nombre}`,nombreCorto:`${_empresa.nombreCorto}`,nombreLargo:`${_empresa.nombreLargo}`,tipoSociedad:`${_empresa.tipoSociedad}`,direccion:`${_empresa.direccion}`,email:`${_empresa.email}`,password:`${_empresa.password}`,informacion:`${_empresa.informacion}`,user:`${_empresa.user}`});\r\n                        toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Empresa Creado', life: 3000 });\r\n                    }\r\n                }\r\n                setEmpresas(_empresas);\r\n                setEmpresaDialog(false);\r\n                setEmpresa(emptyEmpresa);\r\n                formik.resetForm();\r\n        }\r\n            \r\n        },\r\n      });\r\n\r\n    const isFormFieldValid = (name) => !!(formik.touched[name] && formik.errors[name]);\r\n    const getFormErrorMessage = (name) => {\r\n        return isFormFieldValid(name) && <small className=\"ml-1 p-error\" style={{'color': '#ff0000'}}>{formik.errors[name]}</small>;\r\n    };\r\n\r\n    const esRepetido =(value)=>{\r\n        var _empresas = [...empresas];\r\n        let res = _empresas.find(i => (i.email).toLowerCase() === (value).toLowerCase() );\r\n         if(res === undefined){\r\n             return true;\r\n         }else{\r\n             return false;\r\n         }\r\n    }\r\n    const esRepetidoUpdate =(value,original)=>{\r\n        var _empresas = [...empresas];\r\n        let aux = _empresas.filter(i =>(i.email).toLowerCase() != (original).toLowerCase())\r\n        let res = aux.find(i => (i.email).toLowerCase() === (value).toLowerCase() );\r\n         if(res === undefined || res === original){\r\n             return true;\r\n         }else{\r\n             return false;\r\n         }\r\n    }\r\n\r\n    const esRepetidoEmpresa =(value)=>{\r\n        var _empresas = [...empresas];\r\n        let res = _empresas.find(i => (i.nombre).toLowerCase().trim() === (value).toLowerCase().trim() );\r\n         if(res === undefined){\r\n             return true;\r\n         }else{\r\n             return false;\r\n         }\r\n    }\r\n    const esRepetidoUpdateEmpresa =(value,original)=>{\r\n        var _empresas = [...empresas];\r\n        let aux = _empresas.filter(i =>(i.nombre).toLowerCase().trim() != (original).toLowerCase().trim())\r\n        let res = aux.find(i => (i.nombre).toLowerCase().trim() === (value).toLowerCase().trim() );\r\n         if(res === undefined || res === original){\r\n             return true;\r\n         }else{\r\n             return false;\r\n         }\r\n    }\r\n\r\n\r\n    useEffect(()=>{\r\n        fetchUsers();\r\n    },[])\r\n\r\n    const fetchUsers = () =>{\r\n        getUsers().then(json =>{\r\n            if(json.error){\r\n                console.log(\"Error\");\r\n            }else{\r\n                console.log(\"---------Usuarios insertados-----------\");\r\n                setUsers(json.data);\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        fetchEmpresas();\r\n    },[])\r\n\r\n    const fetchEmpresas = () =>{\r\n        getEmpresas().then(json =>{\r\n            if(json.error){\r\n                console.log(\"Error\");\r\n            }else{\r\n                console.log(\"---------Empresas insertados-----------\");\r\n                setEmpresas(json.data);\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(stateEmpresa); //esta línea se ejecuta la primera vez que se renderiza y en todos los cambios que location tenga, aqui siempre tendrás el ultimo valor de location\r\n     }, [stateEmpresa])\r\n\r\n    const openNew = () => {\r\n        setEmpresa(emptyEmpresa);\r\n        formik.resetForm();\r\n        setSubmitted(false);\r\n        setStateEmpresa(false); \r\n        setEmpresaDialog(true);    \r\n    }\r\n\r\n    const hideDialog = () => {\r\n        setSubmitted(false);\r\n        setEmpresaDialog(false);\r\n    }\r\n\r\n    const showDialog = () => {\r\n        setSubmitted(true);\r\n        formik.handleSubmit();\r\n    }\r\n\r\n    const hideDeleteEmpresaDialog = () => {\r\n        setDeleteEmpresaDialog(false);\r\n    }\r\n\r\n    const editEmpresa = (empresa) => {\r\n        setEmpresa({ ...empresa });\r\n        setSubmitted(true);\r\n        formik.resetForm();\r\n        formik.setValues(\r\n        {\r\n            nombre:         `${empresa.nombre}`,\r\n            nombreCorto:    `${empresa.nombreCorto}`,\r\n            nombreLargo:    `${empresa.nombreLargo}`,\r\n            tipoSociedad:   `${empresa.tipoSociedad}`,\r\n            direccion:      `${empresa.direccion}`,\r\n            email:          `${empresa.email}`,\r\n            password:       `${empresa.password}`,\r\n            confirmPassword:`${empresa.password}`,\r\n            informacion:    `${empresa.informacion}`,\r\n            user:           `${empresa.user}`\r\n        });\r\n\r\n        setEmailUpdate(`${empresa.email}`);\r\n        setEmpresaUpdate(`${empresa.nombre}`);\r\n        setStateEmpresa(true);\r\n        setEmpresaDialog(true);\r\n    }\r\n\r\n    const confirmDeleteEmpresa = (empresa) => {\r\n        setEmpresa(empresa);\r\n        setDeleteEmpresaDialog(true);\r\n    }\r\n\r\n    const deleteEmpresa = () => {\r\n        let _empresas = empresas.filter(val => val.id !== empresa.id);\r\n        setEmpresas(_empresas);\r\n        setDeleteEmpresaDialog(false);\r\n\r\n        if (empresa.email.trim()) {\r\n            if (empresa.id) {\r\n                deleteEmpresaID(empresa.id);\r\n            }\r\n        }\r\n        setEmpresa(emptyEmpresa);\r\n        toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Empresa Eliminada', life: 3000 });\r\n    }\r\n\r\n    const findIndexById = (id) => {\r\n        let index = -1;\r\n        for (let i = 0; i < empresas.length; i++) {\r\n            if (empresas[i].id === id) {\r\n\r\n                index = i;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return index;\r\n    }\r\n\r\n    const idBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">id</span>\r\n                {rowData.id}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const nombreBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Nombre</span>\r\n                {rowData.nombre}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const nombreCortoBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Nombre Corto</span>\r\n                {rowData.nombreCorto}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const nombreLargoBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Nombre Largo</span>\r\n                {rowData.nombreLargo}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const tipoSociedadBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Tipo Sociedad</span>\r\n                {rowData.tipoSociedad}\r\n                \r\n            </>\r\n        );\r\n    }\r\n\r\n    \r\n\r\n\r\n    const direccionBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Direccion</span>\r\n                {rowData.direccion}\r\n               \r\n\r\n            </>\r\n        );\r\n    }\r\n\r\n    const emailBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Correo electronico</span>\r\n                {rowData.email}\r\n               \r\n\r\n            </>\r\n        );\r\n    }\r\n\r\n    const passwordBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">contraseña</span>\r\n                {rowData.password}\r\n               \r\n\r\n            </>\r\n        );\r\n    }\r\n\r\n    const informacionBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Informacion</span>\r\n                {rowData.informacion}\r\n               \r\n\r\n            </>\r\n        );\r\n    }\r\n\r\n    const userBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Usuario</span>\r\n                {rowData.user}\r\n               \r\n\r\n            </>\r\n        );\r\n    }\r\n\r\n\r\n    const leftToolbarTemplate = () => {\r\n        return (\r\n            <React.Fragment>\r\n                <Button style={props.layoutColorMode === 'light' ? {'color':'#ffffff','background': '#13af4e'} : {'color':'#ffffff','background': '#13af4e'}} label=\"Nuevo\" icon=\"pi pi-plus\" className=\"p-button-success p-mr-2\" onClick={openNew} />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    const actionBodyTemplate = (rowData) => {\r\n        return (\r\n            <div className=\"actions\">\r\n                <Button icon=\"pi pi-pencil\" style={{'background': '#13af4e'}} className=\"p-button-rounded p-button-success p-mr-2\"   onClick={() => editEmpresa(rowData)} />\r\n                <Button icon=\"pi pi-trash\"  style={{'background': '#eee500'}} className=\"p-button-rounded p-button-warning\"          onClick={() => confirmDeleteEmpresa(rowData)} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const deleteEmpresaDialogFooter = (\r\n        <>\r\n            <Button label=\"No\" icon=\"pi pi-times\" style={{'background': '#d13639','color':'#ffffff'}} className=\"p-button-text\" onClick={hideDeleteEmpresaDialog} />\r\n            <Button label=\"Si\" icon=\"pi pi-check\" style={props.layoutColorMode === 'light' ? {'color':'#13af4e','border-color':'#13af4e'} : {'color':'#13af4e','border-color':'#13af4e'}} className=\"p-button-text\" onClick={deleteEmpresa} />\r\n        </>\r\n    );\r\n\r\n\r\n    let headerGroup = <ColumnGroup>\r\n                        <Row>\r\n                            <Column header=\"ID\"                 style={{ 'background-color': '#13af4e', width:'20%'}} />\r\n                            <Column header=\"NOMBRE\"             style={{ 'background-color': '#13af4e', width:'20%'}} />\r\n                            <Column header=\"SOCIEDAD\"           style={{ 'background-color': '#13af4e', width:'20%'}} />\r\n                            <Column header=\"DIRECCION\"          style={{ 'background-color': '#13af4e', width:'20%'}} />\r\n                            <Column header=\"CORREO ELECTRONICO\" style={{ 'background-color': '#13af4e', width:'25%'}} />\r\n                            <Column header=\"USUARIO\"            style={{ 'background-color': '#13af4e', width:'20%'}} />\r\n                            <Column header=\"Editar/Eliminar\"    style={{ 'background-color': '#13af4e', width:'20%'}} />\r\n                        </Row>\r\n                    </ColumnGroup>;\r\n\r\n\r\n    const headerDialog =()=>{\r\n        return (stateEmpresa)?\"Actualizando Empresa\":\"Añadir Empresa\"\r\n    }\r\n\r\n    return (\r\n        <div className=\"p-grid crud-demo\">\r\n            <div className=\"p-col-12\">\r\n                <div className=\"card\">\r\n                \r\n                    <Toast ref={toast} />\r\n                    <Toolbar className=\"\" left={leftToolbarTemplate}></Toolbar>\r\n\r\n                    <DataTable headerColumnGroup={headerGroup} ref={dt} value={empresas} selection={selectedEmpresas}  onSelectionChange={(e) => setSelectedEmpresas(e.value)}\r\n                        dataKey=\"id\" paginator rows={10} rowsPerPageOptions={[5, 10, 25]} className=\"datatable-responsive p-datatable-sm col-12\"\r\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\r\n                        currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} users\" resizableColumns columnResizeMode=\"fit\" showGridlines>\r\n                    \r\n                        <Column style={{width:'20%'}} field=\"id\"              header=\"ID\"                 sortable body={idBodyTemplate}            ></Column>\r\n                        <Column style={{width:'20%'}} field=\"nombre\"          header=\"NOMBRE\"             sortable body={nombreBodyTemplate}        ></Column>\r\n                        <Column style={{width:'20%'}} field=\"tipoSociedad\"    header=\"SOCIEDAD\"           sortable body={tipoSociedadBodyTemplate}  ></Column>\r\n                        <Column style={{width:'20%'}} field=\"direccion\"       header=\"DIRECCION\"          sortable body={direccionBodyTemplate}     ></Column>\r\n                        <Column style={{width:'25%'}} field=\"email\"           header=\"CORREO ELECTRONICO\" sortable body={emailBodyTemplate}         ></Column>\r\n                        <Column style={{width:'20%'}} field=\"user\"            header=\"USUARIO\"            sortable body={userBodyTemplate}          ></Column>\r\n\r\n                        <Column style={{width:'20%'}} body={actionBodyTemplate}></Column>\r\n\r\n                    </DataTable>\r\n\r\n\r\n                    <Dialog visible={empresaDialog} style={{ width: '450px' }} header={headerDialog} modal className=\"p-fluid\" onHide={hideDialog}>\r\n                        <form onSubmit={formik.handleSubmit}>\r\n                            <div className=\"p-field mt-2\" >\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <i className=\"pi pi-user\"></i>\r\n                                        </span>\r\n                                        <InputText id=\"nombre\" name='nombre' placeholder=\"Nombre\" value={formik.values.nombre} onChange={formik.handleChange} autoFocus/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('nombre')}\r\n\r\n                            <div className=\"p-field mt-2\" >\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <i className=\"pi pi-user\"></i>\r\n                                        </span>\r\n                                        <InputText id=\"nombreCorto\" name='nombreCorto' placeholder=\"Nombre Corto\" value={formik.values.nombreCorto} onChange={formik.handleChange}/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('nombreCorto')}\r\n\r\n                            <div className=\"p-field mt-2\" >\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <i className=\"pi pi-user\"></i>\r\n                                        </span>\r\n                                        <InputText id=\"nombreLargo\" name='nombreLargo' placeholder=\"Nombre Largo\" value={formik.values.nombreLargo} onChange={formik.handleChange}/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('nombreLargo')}\r\n\r\n                            <div className=\"p-field mt-2\" >\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <i className=\"pi pi-briefcase\"></i>\r\n                                        </span>\r\n                                        <Dropdown id=\"tipoSociedad\" name=\"tipoSociedad\" placeholder=\"Seleccione el tipo de sociedad\" value={formik.values.tipoSociedad} onChange={formik.handleChange} options={Sociedades} optionLabel=\"tipo\"  optionValue=\"tipo\"/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('tipoSociedad')}\r\n\r\n                            <div className=\"p-field mt-2\" >\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <i className=\"pi pi-map-marker\"></i>\r\n                                        </span>\r\n                                        <InputText id=\"direccion\" name='direccion' placeholder=\"Direccion\" value={formik.values.direccion} onChange={formik.handleChange}/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('direccion')}\r\n\r\n\r\n                            <div className=\"p-field mt-2\">\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <img   src={props.layoutColorMode === 'light' ? 'assets/layout/images/gmail.png' : 'assets/layout/images/gmail-dark.png'} style={{'height': '1.2em','width':'1.2em',}}/>  \r\n                                        </span>\r\n                                        <InputText id=\"email\" name='email' placeholder=\"Correo electronico\"  value={formik.values.email} onChange={formik.handleChange}/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('email')}\r\n\r\n                            <div className=\"p-field mt-2\">\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <img   src={props.layoutColorMode === 'light' ? 'assets/layout/images/password.png' : 'assets/layout/images/password-dark.png'} style={{'height': '1.2em','width':'1.2em',}}/>  \r\n                                        </span>\r\n                                        <Password id=\"password\" name='password' placeholder=\"Contraseña\"  value={formik.values.password} onChange={formik.handleChange} toggleMask  promptLabel=\"Por favor ingrese una contraseña\" weakLabel=\"Débil\" mediumLabel=\"Medio\" strongLabel=\"Fuerte\"/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('password')}\r\n\r\n                            <div className=\"p-field mt-2\">\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <img   src={props.layoutColorMode === 'light' ? 'assets/layout/images/password.png' : 'assets/layout/images/password-dark.png'} style={{'height': '1.2em','width':'1.2em',}}/>   \r\n                                        </span>\r\n                                        <Password id=\"confirmPassword\" name='confirmPassword' placeholder=\"Confirmar contraseña\"  value={formik.values.confirmPassword} onChange={formik.handleChange} toggleMask  promptLabel=\"Por favor ingrese una contraseña\" weakLabel=\"Débil\" mediumLabel=\"Medio\" strongLabel=\"Fuerte\"/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('confirmPassword')}\r\n\r\n                            <div className=\"p-field mt-2\" >\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <i className=\"pi pi-info\"></i>\r\n                                        </span>\r\n                                        <InputTextarea id=\"informacion\" name='informacion' placeholder=\"Informacion\" value={formik.values.informacion} onChange={formik.handleChange}/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('informacion')}\r\n\r\n                            <div className=\"p-field mt-2\" >\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <i className=\"pi pi-user\"></i>\r\n                                        </span>\r\n                                        <Dropdown id=\"user\" name=\"user\" placeholder=\"Seleccione un usuario\" value={formik.values.user} onChange={formik.handleChange} options={users} optionLabel=\"nombre\"  optionValue=\"id\"/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('user')}\r\n\r\n\r\n\r\n                            <div className='mt-2'>\r\n                                <div className=\"flex justify-content-center flex-wrap\">\r\n                                    <div className=\"flex align-items-center justify-content-center  m-2\">\r\n                                        <Button label=\"Cancelar\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDialog} style={props.layoutColorMode === 'light' ? {'color':'#d13639','border-color':'#d13639'} : {'color':'#d13639','border-color':'#d13639'}}/>\r\n                                    </div>\r\n                                    <div className=\"flex align-items-center justify-content-center  m-2\">\r\n                                        <Button label=\"Guardar\"  icon=\"pi pi-check\" type=\"submit\" className=\"p-button-text\" onClick={showDialog} style={{'background': '#13af4e','color':'#ffffff'}}/>  \r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </Dialog>\r\n\r\n\r\n                    <Dialog className=\"mt-2\" visible={deleteEmpresaDialog} style={{ width: '450px' }} header=\"Confirm\" modal footer={deleteEmpresaDialogFooter} onHide={hideDeleteEmpresaDialog}>\r\n                        <div className=\"confirmation-content\">\r\n                            <i className=\"pi pi-exclamation-triangle p-mr-3\" style={{ fontSize: '2rem' }} />\r\n                            {empresa && <span>¿Estás segura de que quieres eliminar? <b>{empresa.nombre}</b> <b>{empresa.tipoSociedadad}</b>?</span>}\r\n                        </div>\r\n                    </Dialog>\r\n    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport classNames           from 'classnames';\r\nimport { DataTable }        from 'primereact/datatable';\r\nimport { Column }           from 'primereact/column';\r\nimport { Toast }            from 'primereact/toast';\r\nimport { Button }           from 'primereact/button';\r\nimport { Toolbar }          from 'primereact/toolbar';\r\nimport { Dialog }           from 'primereact/dialog';\r\nimport { InputText }        from 'primereact/inputtext';\r\nimport { InputTextarea }    from 'primereact/inputtextarea';\r\nimport { Password }         from 'primereact/password';\r\nimport { ColumnGroup }      from 'primereact/columngroup';\r\nimport { Row }              from 'primereact/row';\r\nimport { Dropdown }         from 'primereact/dropdown';\r\nimport { useFormik }        from \"formik\";\r\nimport { Link }             from 'react-router-dom';\r\n\r\nimport uniqid               from 'uniqid';\r\n\r\nimport { getConvocatorias,getConvocatoriaID,createConvocatoria,updateConvocatoriaID,deleteConvocatoriaID} from '../service/apiConvocatoria';\r\nimport { getUsers } from '../service/apiUser';\r\n\r\nexport const Convocatoria = (props) => {\r\n\r\n    let emptyConvocatoria = {\r\n        id:        null,\r\n        titulo:    '',\r\n        codigo:    '',\r\n        semestre:  '',\r\n        link:      '',\r\n        user:      ''\r\n    };\r\n\r\n    const semestres = [\r\n        { name: \"I-2020\" },\r\n        { name: \"II-2020\"},\r\n        { name: \"I-2021\"},\r\n        { name: \"II-2021\"},\r\n        { name: \"I-2022\"},\r\n        { name: \"II-2022\"}\r\n    ];\r\n\r\n    const [convocatorias, setConvocatorias]                          = useState(null);\r\n    const [users, setUsers]                                          = useState(null);\r\n    const [convocatoriaDialog, setConvocatoriaDialog]                = useState(false);\r\n    const [deleteConvocatoriaDialog, setDeleteConvocatoriaDialog]    = useState(false);\r\n\r\n    const [convocatoria, setConvocatoria]                            = useState(emptyConvocatoria);\r\n    const [selectedConvocatorias, setSelectedConvocatorias]          = useState(null);\r\n    const [submitted, setSubmitted]                                  = useState(false);\r\n    const toast                                                      = useRef(null);\r\n    const dt                                                         = useRef(null);\r\n    const [stateConvocatoria,setStateConvocatoria]                   = useState(false);\r\n    const [convocatoriaUpdate, setConvocatoriaUpdate]                = useState(\"\");\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            titulo:    '',\r\n            codigo:    '',\r\n            semestre:  '',\r\n            link:      '',\r\n            user:      ''\r\n        },\r\n         validate: (data) => {\r\n            let errors = {};\r\n\r\n            if (!data.titulo) {\r\n                errors.titulo = \"Se requiere el titulo\";\r\n            } else if (data.titulo.length < 2) {\r\n                errors.titulo = \"Como minimo 2 caracteres\";\r\n            } else if (data.titulo.length > 50) {\r\n                errors.titulo = \"Como maximo 50 caracteres\";\r\n            } else if (!/^^[a-zA-Z0-9\\s]+$/i.test(data.titulo)) {\r\n                errors.titulo = \"No se permiten numero o caracteres especiales\";\r\n            }\r\n\r\n            if (!data.codigo) {\r\n                errors.codigo = \"Se requiere el codigo\";\r\n            } else if (data.codigo.length < 2) {\r\n                errors.codigo = \"Como minimo 2 caracteres\";\r\n            } else if (data.codigo.length > 30) {\r\n                errors.codigo = \"Como maximo 30 caracteres\";\r\n            }else if (!/^^[a-zA-Z0-9\\s-]+$/i.test(data.codigo)) {\r\n                errors.codigo = \"No se permiten numero o caracteres especiales\";\r\n            }else if(!esRepetido(data.codigo) && stateConvocatoria === false){\r\n                errors.codigo = \"Ya existe el codigo\";\r\n            } else if(!esRepetidoUpdate(data.codigo,convocatoriaUpdate) && stateConvocatoria === true){\r\n                errors.codigo = \"Ya existe el codigo\";  \r\n            }\r\n\r\n            \r\n            if (!data.semestre) {\r\n                errors.semestre = \"Se requiere el semestre\";\r\n            } else if (data.semestre.length < 2) {\r\n                errors.semestre = \"Como minimo 2 caracteres\";\r\n            } else if (data.semestre.length > 30) {\r\n                errors.semestre = \"Como maximo 30 caracteres\";\r\n            }else if (!/^^[a-zA-Z0-9\\s-]+$/i.test(data.semestre)) {\r\n                errors.semestre = \"No se permiten numero o caracteres especiales\";\r\n            }\r\n\r\n            if (!data.link) {\r\n                errors.link = \"Se requiere el link\";\r\n            }else if (data.link.length > 500) {\r\n                errors.link = \"Como maximo 500 caracteres\";\r\n            }else if (!/^(ftp|http|https):\\/\\/[^ \"]+$/.test(data.link)) {\r\n               errors.link = \"El link no es valido\";\r\n            }\r\n            //else if (!/^((http|https):\\/\\/)?(www.)?(?!.*(http|https|www.))[a-zA-Z0-9_-]+(\\.[a-zA-Z]+)+(\\/)?.([\\w\\?[a-zA-Z-_%\\/@?]+)*([^\\/\\w\\?[a-zA-Z0-9_-]+=\\w+(&[a-zA-Z0-9_]+=\\w+)*)?$/.test(data.link)) {\r\n            //    errors.link = \"El link no es valido\";\r\n            //}\r\n\r\n            if (!data.user) {\r\n                errors.user = \"Se requiere el usuario\";\r\n            } else if (data.user.length < 2) {\r\n                errors.user = \"Como minimo 2 caracteres\";\r\n            } else if (data.user.length > 30) {\r\n                errors.user = \"Como maximo 30 caracteres\";\r\n            }else if (!/^^[a-zA-Z0-9\\s-]+$/i.test(data.user)) {\r\n                errors.user = \"No se permiten numero o caracteres especiales\";\r\n            }\r\n\r\n            return errors;\r\n        },\r\n\r\n        onSubmit: (data) => {\r\n            if(submitted === true){\r\n                let _convocatorias = [...convocatorias];\r\n                let _convocatoria  = {...convocatoria };\r\n                _convocatoria['titulo']     = data.titulo;\r\n                _convocatoria['codigo']     = data.codigo;\r\n                _convocatoria['semestre']   = data.semestre;\r\n                _convocatoria['link']       = data.link;\r\n                _convocatoria['user']       = data.user;\r\n\r\n                if (_convocatoria.titulo.trim()) {\r\n                    if (convocatoria.id) {\r\n\r\n                        setConvocatoria({ ...convocatoria });\r\n                        const index = findIndexById(convocatoria.id);\r\n                        _convocatorias[index] = _convocatoria;\r\n                        updateConvocatoriaID({titulo:`${_convocatoria.titulo}`,codigo:`${_convocatoria.codigo}`,semestre:`${_convocatoria.semestre}`,link:`${_convocatoria.link}`,user:`${_convocatoria.user}`},convocatoria.id);\r\n                        toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Convocatoria Actualizada', life: 3000 });\r\n                    }\r\n                    else {\r\n\r\n                        _convocatoria.id = uniqid(\"conv-\");\r\n                        _convocatorias.push(_convocatoria);\r\n                        console.log({id:`${_convocatoria.id}`,titulo:`${_convocatoria.titulo}`,codigo:`${_convocatoria.codigo}`,semestre:`${_convocatoria.semestre}`,link:`${_convocatoria.link}`,user:`${_convocatoria.user}`});\r\n                        createConvocatoria({id:`${_convocatoria.id}`,titulo:`${_convocatoria.titulo}`,codigo:`${_convocatoria.codigo}`,semestre:`${_convocatoria.semestre}`,link:`${_convocatoria.link}`,user:`${_convocatoria.user}`});\r\n                        toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Convocatoria Creada', life: 3000 });\r\n                    }\r\n                }\r\n                setConvocatorias(_convocatorias);\r\n                setConvocatoriaDialog(false);\r\n                setConvocatoria(emptyConvocatoria);\r\n                formik.resetForm();\r\n        }\r\n            \r\n        },\r\n      });\r\n\r\n      const esRepetido =(value)=>{\r\n        var _convocatorias = [...convocatorias];\r\n        let res = _convocatorias.find(i => (i.codigo).toLowerCase().trim() === (value).toLowerCase().trim() );\r\n         if(res === undefined){\r\n             return true;\r\n         }else{\r\n             return false;\r\n         }\r\n    }\r\n    const esRepetidoUpdate =(value,original)=>{\r\n        var _convocatorias = [...convocatorias];\r\n        let aux = _convocatorias.filter(i =>(i.codigo).toLowerCase().trim() != (original).toLowerCase().trim())\r\n        let res = aux.find(i => (i.codigo).toLowerCase().trim() === (value).toLowerCase().trim() );\r\n         if(res === undefined || res === original){\r\n             return true;\r\n         }else{\r\n             return false;\r\n         }\r\n    }\r\n\r\n    const isFormFieldValid = (name) => !!(formik.touched[name] && formik.errors[name]);\r\n    const getFormErrorMessage = (name) => {\r\n        return isFormFieldValid(name) && <small className=\"ml-1 p-error\" style={{'color': '#ff0000'}}>{formik.errors[name]}</small>;\r\n    };\r\n\r\n    useEffect(()=>{\r\n        fetchConvocatorias();\r\n    },[])\r\n\r\n    const fetchConvocatorias = () =>{\r\n        getConvocatorias().then(json =>{\r\n            if(json.error){\r\n                console.log(\"Error\");\r\n            }else{\r\n                console.log(\"---------Convocatorias insertados-----------\");\r\n                setConvocatorias(json.data);\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        fetchUsers();\r\n    },[])\r\n\r\n    const fetchUsers = () =>{\r\n        getUsers().then(json =>{\r\n            if(json.error){\r\n                console.log(\"Error\");\r\n            }else{\r\n                console.log(\"---------Users insertados-----------\");\r\n                setUsers(json.data);\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(stateConvocatoria); //esta línea se ejecuta la primera vez que se renderiza y en todos los cambios que location tenga, aqui siempre tendrás el ultimo valor de location\r\n     }, [stateConvocatoria])\r\n\r\n    const openNew = () => {\r\n        setConvocatoria(emptyConvocatoria);\r\n        formik.resetForm();\r\n        setSubmitted(false);\r\n        setStateConvocatoria(false); \r\n        setConvocatoriaDialog(true);    \r\n    }\r\n\r\n    const hideDialog = () => {\r\n        setSubmitted(false);\r\n        setConvocatoriaDialog(false);\r\n    }\r\n\r\n    const showDialog = () => {\r\n        setSubmitted(true);\r\n        formik.handleSubmit();\r\n    }\r\n\r\n    const hideDeleteConvocatoriaDialog = () => {\r\n        setDeleteConvocatoriaDialog(false);\r\n    }\r\n\r\n    const editConvocatoria = (convocatoria) => {\r\n        setConvocatoria({ ...convocatoria });\r\n        setSubmitted(true);\r\n        \r\n        formik.setValues(\r\n        {\r\n            titulo:    `${convocatoria.titulo}`,\r\n            codigo:    `${convocatoria.codigo}`,\r\n            semestre:  `${convocatoria.semestre}`,\r\n            link:      `${convocatoria.link}`,\r\n            user:      `${convocatoria.user}`\r\n        });\r\n        setConvocatoriaUpdate(`${convocatoria.codigo}`);\r\n        setStateConvocatoria(true);\r\n        setConvocatoriaDialog(true);\r\n    }\r\n\r\n    const confirmDeleteConvocatoria = (convocatoria) => {\r\n        setConvocatoria(convocatoria);\r\n        setDeleteConvocatoriaDialog(true);\r\n    }\r\n\r\n    const deleteConvocatoria = () => {\r\n        let _convocatorias = convocatorias.filter(val => val.id !== convocatoria.id);\r\n        setConvocatorias(_convocatorias);\r\n        setDeleteConvocatoriaDialog(false);\r\n\r\n        if (convocatoria.titulo.trim()) {\r\n            if (convocatoria.id) {\r\n                deleteConvocatoriaID(convocatoria.id);\r\n            }\r\n        }\r\n        setConvocatoria(emptyConvocatoria);\r\n        toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Convocatoria Eliminada', life: 3000 });\r\n    }\r\n\r\n    const findIndexById = (id) => {\r\n        let index = -1;\r\n        for (let i = 0; i < convocatorias.length; i++) {\r\n            if (convocatorias[i].id === id) {\r\n\r\n                index = i;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return index;\r\n    }\r\n\r\n    const idBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">id</span>\r\n                {rowData.id}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const tituloBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Titulo</span>\r\n                {rowData.titulo}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const codigoBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Codigo</span>\r\n                {rowData.codigo}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const semestreBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Semestre</span>\r\n                {rowData.semestre}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const linkBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Link</span>\r\n                <Button label={`${rowData.link}`} className=\"p-button-link\" onClick={() => window.open(`${rowData.link}`)} style={props.layoutColorMode === 'light' ? {'color':'#495057', 'font-weight': 'bold' , 'text-align': 'justify'} : {'color':'#ffffff', 'font-weight': 'bold' , 'text-align': 'justify'}}/>      \r\n            </>\r\n        );\r\n    }\r\n\r\n    \r\n\r\n\r\n    const userBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">User</span>\r\n                {rowData.user}\r\n               \r\n\r\n            </>\r\n        );\r\n    }\r\n\r\n    const leftToolbarTemplate = () => {\r\n        return (\r\n            <React.Fragment>\r\n                <Button style={props.layoutColorMode === 'light' ? {'color':'#ffffff','background': '#13af4e'} : {'color':'#ffffff','background': '#13af4e'}} label=\"Nuevo\" icon=\"pi pi-plus\" className=\"p-button-success p-mr-2\" onClick={openNew} />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    const actionBodyTemplate = (rowData) => {\r\n        return (\r\n            <div className=\"actions\">\r\n                <Button icon=\"pi pi-pencil\" style={{'background': '#13af4e'}} className=\"p-button-rounded p-button-success p-mr-2\"   onClick={() => editConvocatoria(rowData)} />\r\n                <Button icon=\"pi pi-trash\"  style={{'background': '#eee500'}} className=\"p-button-rounded p-button-warning\"          onClick={() => confirmDeleteConvocatoria(rowData)} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const deleteConvocatoriaDialogFooter = (\r\n        <>\r\n            <Button label=\"No\" icon=\"pi pi-times\" style={{'background': '#d13639','color':'#ffffff'}} className=\"p-button-text\" onClick={hideDeleteConvocatoriaDialog} />\r\n            <Button label=\"Si\" icon=\"pi pi-check\" style={props.layoutColorMode === 'light' ? {'color':'#13af4e','border-color':'#13af4e'} : {'color':'#13af4e','border-color':'#13af4e'}} className=\"p-button-text\" onClick={deleteConvocatoria} />\r\n        </>\r\n    );\r\n\r\n\r\n    let headerGroup = <ColumnGroup>\r\n                        <Row>\r\n                            <Column header=\"ID\"                 style={{ 'background-color': '#13af4e', width:'20%'}} />\r\n                            <Column header=\"TITULO\"             style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                            <Column header=\"CODIGO\"             style={{ 'background-color': '#13af4e', width:'20%'}} />\r\n                            <Column header=\"SEMESTRE\"           style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                            <Column header=\"LINK\"               style={{ 'background-color': '#13af4e', width:'40%'}} />\r\n                            <Column header=\"USER\"               style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                            <Column header=\"Editar/Eliminar\"    style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                        </Row>\r\n                    </ColumnGroup>;\r\n\r\n\r\n    const headerDialog =()=>{\r\n        return (stateConvocatoria)?\"Actualizando convocatoria\":\"Añadir convocatoria\"\r\n    }\r\n\r\n    return (\r\n        <div className=\"p-grid crud-demo\">\r\n            <div className=\"p-col-12\">\r\n                <div className=\"card\">\r\n                \r\n                    <Toast ref={toast} />\r\n                    <Toolbar className=\"\" left={leftToolbarTemplate}></Toolbar>\r\n\r\n                    <DataTable headerColumnGroup={headerGroup} ref={dt} value={convocatorias} selection={selectedConvocatorias}  onSelectionChange={(e) => setSelectedConvocatorias(e.value)}\r\n                        dataKey=\"id\" paginator rows={10} rowsPerPageOptions={[5, 10, 25]} className=\"datatable-responsive p-datatable-sm col-12\"\r\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\r\n                        currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} users\" resizableColumns columnResizeMode=\"fit\" showGridlines>\r\n                    \r\n                        <Column style={{width:'20%'}} field=\"id\"       header=\"ID\"       sortable body={idBodyTemplate}></Column>\r\n                        <Column style={{width:'20%'}} field=\"titulo\"   header=\"TITULO\"   sortable body={tituloBodyTemplate}></Column>\r\n                        <Column style={{width:'20%'}} field=\"codigo\"   header=\"CODIGO\"   sortable body={codigoBodyTemplate}></Column>\r\n                        <Column style={{width:'20%'}} field=\"semestre\" header=\"SEMESTRE\" sortable body={semestreBodyTemplate}></Column>\r\n                        <Column style={{width:'40%'}} field=\"link\"     header=\"LINK\"     sortable body={linkBodyTemplate}></Column>\r\n                        <Column style={{width:'20%'}} field=\"user\"     header=\"USER\"     sortable body={userBodyTemplate}></Column>\r\n                        <Column style={{width:'20%'}} body={actionBodyTemplate}></Column>\r\n\r\n                    </DataTable>\r\n\r\n\r\n                    <Dialog visible={convocatoriaDialog} style={{ width: '450px' }} header={headerDialog} modal className=\"p-fluid\" onHide={hideDialog}>\r\n                        <form onSubmit={formik.handleSubmit}>\r\n                            <div className=\"p-field mt-2\" >\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <img   src={props.layoutColorMode === 'light' ? 'assets/layout/images/title.png' : 'assets/layout/images/title-dark.png'} style={{'height': '1.2em','width':'1.2em',}}/>  \r\n                                        </span>\r\n                                        <InputText id=\"titulo\" name='titulo' placeholder=\"Titulo\" value={formik.values.titulo} onChange={formik.handleChange} autoFocus/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('titulo')}\r\n\r\n                            <div className=\"p-field mt-2\">\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <img   src={props.layoutColorMode === 'light' ? 'assets/layout/images/code.png' : 'assets/layout/images/code-dark.png'} style={{'height': '1.2em','width':'1.2em',}}/>  \r\n                                        </span>\r\n                                        <InputText id=\"codigo\" name='codigo' placeholder=\"Codigo\" value={formik.values.codigo} onChange={formik.handleChange}/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('codigo')}\r\n\r\n                            \r\n                            <div className=\"p-field mt-2\">\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <i className=\"pi pi-calendar\"></i>\r\n                                        </span>\r\n                                        <Dropdown id=\"semestre\" name=\"semestre\" placeholder=\"Seleccione el semestre\" value={formik.values.semestre} onChange={formik.handleChange} options={semestres} optionLabel=\"name\"  optionValue=\"name\"/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('semestre')}\r\n\r\n                            <div className=\"p-field mt-2\">\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <i className=\"pi pi-link\"></i>\r\n                                        </span>\r\n                                        <InputTextarea id=\"link\" name='link' placeholder=\"Link\"  value={formik.values.link} onChange={formik.handleChange}/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('link')}\r\n\r\n                            <div className=\"p-field mt-2\">\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <i className=\"pi pi-user\"></i>\r\n                                        </span>\r\n                                        <Dropdown id=\"user\" name=\"user\" placeholder=\"Seleccione un usuario\" value={formik.values.user} onChange={formik.handleChange} options={users} optionLabel=\"nombre\"  optionValue=\"id\"/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('user')}\r\n\r\n\r\n                            <div className='mt-2'>\r\n                                <div className=\"flex justify-content-center flex-wrap\">\r\n                                    <div className=\"flex align-items-center justify-content-center  m-2\">\r\n                                        <Button label=\"Cancelar\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDialog} style={props.layoutColorMode === 'light' ? {'color':'#d13639','border-color':'#d13639'} : {'color':'#d13639','border-color':'#d13639'}}/>\r\n                                    </div>\r\n                                    <div className=\"flex align-items-center justify-content-center  m-2\">\r\n                                        <Button label=\"Guardar\"  icon=\"pi pi-check\" type=\"submit\" className=\"p-button-text\" onClick={showDialog} style={{'background': '#13af4e','color':'#ffffff'}}/>  \r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </Dialog>\r\n\r\n\r\n                    <Dialog className=\"mt-2\" visible={deleteConvocatoriaDialog} style={{ width: '450px' }} header=\"Confirm\" modal footer={deleteConvocatoriaDialogFooter} onHide={hideDeleteConvocatoriaDialog}>\r\n                        <div className=\"confirmation-content\">\r\n                            <i className=\"pi pi-exclamation-triangle p-mr-3\" style={{ fontSize: '2rem' }} />\r\n                            {convocatoria && <span>¿Estás segura de que quieres eliminar? <b>{convocatoria.titulo}</b> <b>{convocatoria.semestre}</b>?</span>}\r\n                        </div>\r\n                    </Dialog>\r\n    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import axios from 'axios';\r\n\r\n export const getConvocatorias = () =>{\r\n     return axios.get('https://magic-tech-backend.herokuapp.com/api/getConvocatorias');\r\n }\r\n\r\n export const getConvocatoriaID =(id) =>{\r\n     return axios.get(`https://magic-tech-backend.herokuapp.com/api/getConvocatoriaId/${id}`);\r\n }\r\n\r\n\r\n\r\n export const createConvocatoria=(data)=>{\r\n    return axios.post('https://magic-tech-backend.herokuapp.com/api/createConvocatoria', \r\n      {\r\n         id:        `${data.id}`,\r\n         titulo:    `${data.titulo}`,\r\n         codigo:    `${data.codigo}`,\r\n         semestre:  `${data.semestre}`,\r\n         link:      `${data.link}`,\r\n         user:      `${data.user}`     \r\n      }\r\n      )\r\n      .then(function (response) {\r\n        console.log(response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n }\r\n\r\nexport const updateConvocatoriaID =(data,id) =>{\r\n    return axios.put(`https://magic-tech-backend.herokuapp.com/api/updateConvocatoria/${id}`, \r\n    {\r\n        titulo:    `${data.titulo}`,\r\n        codigo:    `${data.codigo}`,\r\n        semestre:  `${data.semestre}`,\r\n        link:      `${data.link}`,\r\n        user:      `${data.user}`\r\n    }\r\n    )\r\n    .then(function (response) {\r\n      console.log(response);\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error);\r\n    });\r\n}\r\n\r\nexport const deleteConvocatoriaID =(id) =>{\r\n    return axios.delete(`https://magic-tech-backend.herokuapp.com/api/deleteConvocatoriaId/${id}`);\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport classNames           from 'classnames';\r\nimport { DataTable }        from 'primereact/datatable';\r\nimport { Column }           from 'primereact/column';\r\nimport { Toast }            from 'primereact/toast';\r\nimport { Button }           from 'primereact/button';\r\nimport { Toolbar }          from 'primereact/toolbar';\r\nimport { Dialog }           from 'primereact/dialog';\r\nimport { InputText }        from 'primereact/inputtext';\r\nimport { InputTextarea }    from 'primereact/inputtextarea';\r\nimport { Password }         from 'primereact/password';\r\nimport { ColumnGroup }      from 'primereact/columngroup';\r\nimport { Row }              from 'primereact/row';\r\nimport { Dropdown }         from 'primereact/dropdown';\r\nimport { useFormik }        from \"formik\";\r\nimport { Link }             from 'react-router-dom';\r\n\r\nimport uniqid               from 'uniqid';\r\n\r\nimport { getPliegos,createPliego,updatePliegoID,deletePliegoID} from '../service/apiPliego';\r\nimport { getUsers } from '../service/apiUser';\r\n\r\nexport const PliegoEspecificacion = (props) => {\r\n\r\n    let emptyPliego = {\r\n        id:        null,\r\n        titulo:    '',\r\n        codigo:    '',\r\n        semestre:  '',\r\n        link:      '',\r\n        user:      ''\r\n    };\r\n\r\n    const semestres = [\r\n        { name: \"I-2020\" },\r\n        { name: \"II-2020\"},\r\n        { name: \"I-2021\"},\r\n        { name: \"II-2021\"},\r\n        { name: \"I-2022\"},\r\n        { name: \"II-2022\"}\r\n    ];\r\n\r\n    const [pliegos, setPliegos]                          = useState(null);\r\n    const [users, setUsers]                              = useState(null);\r\n    const [pliegoDialog, setPliegoDialog]                = useState(false);\r\n    const [deletePliegoDialog, setDeletePliegoDialog]    = useState(false);\r\n\r\n    const [pliego, setPliego]                            = useState(emptyPliego);\r\n    const [selectedPliegos, setSelectedPliegos]          = useState(null);\r\n    const [submitted, setSubmitted]                      = useState(false);\r\n    const toast                                          = useRef(null);\r\n    const dt                                             = useRef(null);\r\n    const [statePliego,setStatePliego]                   = useState(false);\r\n    const [pliegoUpdate, setPliegoUpdate]                = useState(\"\");\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            titulo:    '',\r\n            codigo:    '',\r\n            semestre:  '',\r\n            link:      '',\r\n            user:      ''\r\n        },\r\n         validate: (data) => {\r\n            let errors = {};\r\n\r\n            if (!data.titulo) {\r\n                errors.titulo = \"Se requiere el titulo\";\r\n            } else if (data.titulo.length < 2) {\r\n                errors.titulo = \"Como minimo 2 caracteres\";\r\n            } else if (data.titulo.length > 50) {\r\n                errors.titulo = \"Como maximo 50 caracteres\";\r\n            } else if (!/^^[a-zA-Z0-9\\s]+$/i.test(data.titulo)) {\r\n                errors.titulo = \"No se permiten numero o caracteres especiales\";\r\n            }\r\n\r\n            if (!data.codigo) {\r\n                errors.codigo = \"Se requiere el codigo\";\r\n            } else if (data.codigo.length < 2) {\r\n                errors.codigo = \"Como minimo 2 caracteres\";\r\n            } else if (data.codigo.length > 30) {\r\n                errors.codigo = \"Como maximo 30 caracteres\";\r\n            }else if (!/^^[a-zA-Z0-9\\s-]+$/i.test(data.codigo)) {\r\n                errors.codigo = \"No se permiten numero o caracteres especiales\";\r\n            }else if(!esRepetido(data.codigo) && statePliego === false){\r\n                errors.codigo = \"Ya existe el codigo\";\r\n            } else if(!esRepetidoUpdate(data.codigo,pliegoUpdate) && statePliego === true){\r\n                errors.codigo = \"Ya existe el codigo\";  \r\n            }\r\n\r\n            \r\n            if (!data.semestre) {\r\n                errors.semestre = \"Se requiere el semestre\";\r\n            } else if (data.semestre.length < 2) {\r\n                errors.semestre = \"Como minimo 2 caracteres\";\r\n            } else if (data.semestre.length > 30) {\r\n                errors.semestre = \"Como maximo 30 caracteres\";\r\n            }else if (!/^^[a-zA-Z0-9\\s-]+$/i.test(data.semestre)) {\r\n                errors.semestre = \"No se permiten numero o caracteres especiales\";\r\n            }\r\n\r\n            if (!data.link) {\r\n                errors.link = \"Se requiere el link\";\r\n            }else if (data.link.length > 500) {\r\n                errors.link = \"Como maximo 500 caracteres\";\r\n            }else if (!/^(ftp|http|https):\\/\\/[^ \"]+$/.test(data.link)) {\r\n                errors.link = \"El link no es valido\";\r\n             }\r\n\r\n            if (!data.user) {\r\n                errors.user = \"Se requiere el usuario\";\r\n            } else if (data.user.length < 2) {\r\n                errors.user = \"Como minimo 2 caracteres\";\r\n            } else if (data.user.length > 30) {\r\n                errors.user = \"Como maximo 30 caracteres\";\r\n            }else if (!/^^[a-zA-Z0-9\\s-]+$/i.test(data.user)) {\r\n                errors.user = \"No se permiten numero o caracteres especiales\";\r\n            }\r\n\r\n            return errors;\r\n        },\r\n\r\n        onSubmit: (data) => {\r\n            if(submitted === true){\r\n                let _pliegos = [...pliegos];\r\n                let _pliego  = {...pliego };\r\n                _pliego['titulo']     = data.titulo;\r\n                _pliego['codigo']     = data.codigo;\r\n                _pliego['semestre']   = data.semestre;\r\n                _pliego['link']       = data.link;\r\n                _pliego['user']       = data.user;\r\n\r\n                if (_pliego.titulo.trim()) {\r\n                    if (pliego.id) {\r\n\r\n                        setPliego({ ...pliego });\r\n                        const index = findIndexById(pliego.id);\r\n                        _pliegos[index] = _pliego;\r\n                        updatePliegoID({titulo:`${_pliego.titulo}`,codigo:`${_pliego.codigo}`,semestre:`${_pliego.semestre}`,link:`${_pliego.link}`,user:`${_pliego.user}`},pliego.id);\r\n                        toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Pliego de especificaciones Actualizada', life: 3000 });\r\n                    }\r\n                    else {\r\n\r\n                        _pliego.id = uniqid(\"plieg-\");\r\n                        _pliegos.push(_pliego);\r\n                        createPliego({id:`${_pliego.id}`,titulo:`${_pliego.titulo}`,codigo:`${_pliego.codigo}`,semestre:`${_pliego.semestre}`,link:`${_pliego.link}`,user:`${_pliego.user}`});\r\n                        toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Pliego de especificaciones Creada', life: 3000 });\r\n                    }\r\n                }\r\n                setPliegos(_pliegos);\r\n                setPliegoDialog(false);\r\n                setPliego(emptyPliego);\r\n                formik.resetForm();\r\n        }\r\n            \r\n        },\r\n      });\r\n\r\n    const esRepetido =(value)=>{\r\n        var _pliegos = [...pliegos];\r\n        let res = _pliegos.find(i => (i.codigo).toLowerCase().trim() === (value).toLowerCase().trim() );\r\n         if(res === undefined){\r\n             return true;\r\n         }else{\r\n             return false;\r\n         }\r\n    }\r\n    const esRepetidoUpdate =(value,original)=>{\r\n        var _pliegos = [...pliegos];\r\n        let aux = _pliegos.filter(i =>(i.codigo).toLowerCase().trim() != (original).toLowerCase().trim())\r\n        let res = aux.find(i => (i.codigo).toLowerCase().trim() === (value).toLowerCase().trim() );\r\n         if(res === undefined || res === original){\r\n             return true;\r\n         }else{\r\n             return false;\r\n         }\r\n    }\r\n\r\n    const isFormFieldValid = (name) => !!(formik.touched[name] && formik.errors[name]);\r\n    const getFormErrorMessage = (name) => {\r\n        return isFormFieldValid(name) && <small className=\"ml-1 p-error\" style={{'color': '#ff0000'}}>{formik.errors[name]}</small>;\r\n    };\r\n\r\n    useEffect(()=>{\r\n        fetchPliegos();\r\n    },[])\r\n\r\n    const fetchPliegos = () =>{\r\n        getPliegos().then(json =>{\r\n            if(json.error){\r\n                console.log(\"Error\");\r\n            }else{\r\n                console.log(\"---------Pliego de espeficiaciones insertados-----------\");\r\n                setPliegos(json.data);\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        fetchUsers();\r\n    },[])\r\n\r\n    const fetchUsers = () =>{\r\n        getUsers().then(json =>{\r\n            if(json.error){\r\n                console.log(\"Error\");\r\n            }else{\r\n                console.log(\"---------Users insertados-----------\");\r\n                setUsers(json.data);\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(statePliego); //esta línea se ejecuta la primera vez que se renderiza y en todos los cambios que location tenga, aqui siempre tendrás el ultimo valor de location\r\n     }, [statePliego])\r\n\r\n    const openNew = () => {\r\n        setPliego(emptyPliego);\r\n        formik.resetForm();\r\n        setSubmitted(false);\r\n        setStatePliego(false); \r\n        setPliegoDialog(true);    \r\n    }\r\n\r\n    const hideDialog = () => {\r\n        setSubmitted(false);\r\n        setPliegoDialog(false);\r\n    }\r\n\r\n    const showDialog = () => {\r\n        setSubmitted(true);\r\n        formik.handleSubmit();\r\n    }\r\n\r\n    const hideDeletePliegoDialog = () => {\r\n        setDeletePliegoDialog(false);\r\n    }\r\n\r\n    const editPliego = (pliego) => {\r\n        setPliego({ ...pliego });\r\n        setSubmitted(true);\r\n        \r\n        formik.setValues(\r\n        {\r\n            titulo:    `${pliego.titulo}`,\r\n            codigo:    `${pliego.codigo}`,\r\n            semestre:  `${pliego.semestre}`,\r\n            link:      `${pliego.link}`,\r\n            user:      `${pliego.user}`\r\n        });\r\n        setPliegoUpdate(`${pliego.codigo}`);\r\n        setStatePliego(true);\r\n        setPliegoDialog(true);\r\n    }\r\n\r\n    const confirmDeletePliego = (pliego) => {\r\n        setPliego(pliego);\r\n        setDeletePliegoDialog(true);\r\n    }\r\n\r\n    const deletePliego = () => {\r\n        let _pliegos = pliegos.filter(val => val.id !== pliego.id);\r\n        setPliegos(_pliegos);\r\n        setDeletePliegoDialog(false);\r\n\r\n        if (pliego.titulo.trim()) {\r\n            if (pliego.id) {\r\n                deletePliegoID(pliego.id);\r\n            }\r\n        }\r\n        setPliego(emptyPliego);\r\n        toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Pliego de espeficiacion Eliminada', life: 3000 });\r\n    }\r\n\r\n    const findIndexById = (id) => {\r\n        let index = -1;\r\n        for (let i = 0; i < pliegos.length; i++) {\r\n            if (pliegos[i].id === id) {\r\n\r\n                index = i;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return index;\r\n    }\r\n\r\n    const idBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">id</span>\r\n                {rowData.id}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const tituloBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Titulo</span>\r\n                {rowData.titulo}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const codigoBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Codigo</span>\r\n                {rowData.codigo}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const semestreBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Semestre</span>\r\n                {rowData.semestre}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const linkBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">Link</span>\r\n                <Button label={`${rowData.link}`} className=\"p-button-link\" onClick={() => window.open(`${rowData.link}`)} style={props.layoutColorMode === 'light' ? {'color':'#495057', 'font-weight': 'bold' , 'text-align': 'justify'} : {'color':'#ffffff', 'font-weight': 'bold' , 'text-align': 'justify'}}/>      \r\n            </>\r\n        );\r\n    }\r\n\r\n    \r\n\r\n\r\n    const userBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <span className=\"p-column-title\">User</span>\r\n                {rowData.user}\r\n               \r\n\r\n            </>\r\n        );\r\n    }\r\n\r\n    const leftToolbarTemplate = () => {\r\n        return (\r\n            <React.Fragment>\r\n                <Button style={props.layoutColorMode === 'light' ? {'color':'#ffffff','background': '#13af4e'} : {'color':'#ffffff','background': '#13af4e'}} label=\"Nuevo\" icon=\"pi pi-plus\" className=\"p-button-success p-mr-2\" onClick={openNew} />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    const actionBodyTemplate = (rowData) => {\r\n        return (\r\n            <div className=\"actions\">\r\n                <Button icon=\"pi pi-pencil\" style={{'background': '#13af4e'}} className=\"p-button-rounded p-button-success p-mr-2\"   onClick={() => editPliego(rowData)} />\r\n                <Button icon=\"pi pi-trash\"  style={{'background': '#eee500'}} className=\"p-button-rounded p-button-warning\"          onClick={() => confirmDeletePliego(rowData)} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const deletePliegoDialogFooter = (\r\n        <>\r\n            <Button label=\"No\" icon=\"pi pi-times\" style={{'background': '#d13639','color':'#ffffff'}} className=\"p-button-text\" onClick={hideDeletePliegoDialog} />\r\n            <Button label=\"Si\" icon=\"pi pi-check\" style={props.layoutColorMode === 'light' ? {'color':'#13af4e','border-color':'#13af4e'} : {'color':'#13af4e','border-color':'#13af4e'}} className=\"p-button-text\" onClick={deletePliego} />\r\n        </>\r\n    );\r\n\r\n\r\n    let headerGroup = <ColumnGroup>\r\n                        <Row>\r\n                            <Column header=\"ID\"                 style={{ 'background-color': '#13af4e', width:'20%'}} />\r\n                            <Column header=\"TITULO\"             style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                            <Column header=\"CODIGO\"             style={{ 'background-color': '#13af4e', width:'20%'}} />\r\n                            <Column header=\"SEMESTRE\"           style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                            <Column header=\"LINK\"               style={{ 'background-color': '#13af4e', width:'40%'}} />\r\n                            <Column header=\"USER\"               style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                            <Column header=\"Editar/Eliminar\"    style={{ 'background-color': '#13af4e', width:'20%'}}/>\r\n                        </Row>\r\n                    </ColumnGroup>;\r\n\r\n\r\n    const headerDialog =()=>{\r\n        return (statePliego)?\"Actualizando pliego de espeficiciones\":\"Añadir pliego de espeficiciones\"\r\n    }\r\n\r\n    return (\r\n        <div className=\"p-grid crud-demo\">\r\n            <div className=\"p-col-12\">\r\n                <div className=\"card\">\r\n                \r\n                    <Toast ref={toast} />\r\n                    <Toolbar className=\"\" left={leftToolbarTemplate}></Toolbar>\r\n\r\n                    <DataTable headerColumnGroup={headerGroup} ref={dt} value={pliegos} selection={selectedPliegos}  onSelectionChange={(e) => setSelectedPliegos(e.value)}\r\n                        dataKey=\"id\" paginator rows={10} rowsPerPageOptions={[5, 10, 25]} className=\"datatable-responsive p-datatable-sm col-12\"\r\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\r\n                        currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} users\" resizableColumns columnResizeMode=\"fit\" showGridlines>\r\n                    \r\n                        <Column style={{width:'20%'}} field=\"id\"       header=\"ID\"       sortable body={idBodyTemplate}></Column>\r\n                        <Column style={{width:'20%'}} field=\"titulo\"   header=\"TITULO\"   sortable body={tituloBodyTemplate}></Column>\r\n                        <Column style={{width:'20%'}} field=\"codigo\"   header=\"CODIGO\"   sortable body={codigoBodyTemplate}></Column>\r\n                        <Column style={{width:'20%'}} field=\"semestre\" header=\"SEMESTRE\" sortable body={semestreBodyTemplate}></Column>\r\n                        <Column style={{width:'40%'}} field=\"link\"     header=\"LINK\"     sortable body={linkBodyTemplate}></Column>\r\n                        <Column style={{width:'20%'}} field=\"user\"     header=\"USER\"     sortable body={userBodyTemplate}></Column>\r\n                        <Column style={{width:'20%'}} body={actionBodyTemplate}></Column>\r\n\r\n                    </DataTable>\r\n\r\n\r\n                    <Dialog visible={pliegoDialog} style={{ width: '450px' }} header={headerDialog} modal className=\"p-fluid\" onHide={hideDialog}>\r\n                        <form onSubmit={formik.handleSubmit}>\r\n                            <div className=\"p-field mt-2\" >\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <img   src={props.layoutColorMode === 'light' ? 'assets/layout/images/title.png' : 'assets/layout/images/title-dark.png'} style={{'height': '1.2em','width':'1.2em',}}/>  \r\n                                        </span>\r\n                                        <InputText id=\"titulo\" name='titulo' placeholder=\"Titulo\" value={formik.values.titulo} onChange={formik.handleChange} autoFocus/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('titulo')}\r\n\r\n                            <div className=\"p-field mt-2\">\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <img   src={props.layoutColorMode === 'light' ? 'assets/layout/images/code.png' : 'assets/layout/images/code-dark.png'} style={{'height': '1.2em','width':'1.2em',}}/>  \r\n                                        </span>\r\n                                        <InputText id=\"codigo\" name='codigo' placeholder=\"Codigo\" value={formik.values.codigo} onChange={formik.handleChange}/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('codigo')}\r\n\r\n                            \r\n                            <div className=\"p-field mt-2\">\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <i className=\"pi pi-calendar\"></i>\r\n                                        </span>\r\n                                        <Dropdown id=\"semestre\" name=\"semestre\" placeholder=\"Seleccione el semestre\" value={formik.values.semestre} onChange={formik.handleChange} options={semestres} optionLabel=\"name\"  optionValue=\"name\"/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('semestre')}\r\n\r\n                            <div className=\"p-field mt-2\">\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <i className=\"pi pi-link\"></i>\r\n                                        </span>\r\n                                        <InputTextarea id=\"link\" name='link' placeholder=\"Link\"  value={formik.values.link} onChange={formik.handleChange}/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('link')}\r\n\r\n                            <div className=\"p-field mt-2\">\r\n                                <div className=\"p-inputgroup\">\r\n                                        <span className=\"p-inputgroup-addon\">\r\n                                            <i className=\"pi pi-user\"></i>\r\n                                        </span>\r\n                                        <Dropdown id=\"user\" name=\"user\" placeholder=\"Seleccione un usuario\" value={formik.values.user} onChange={formik.handleChange} options={users} optionLabel=\"nombre\"  optionValue=\"id\"/>\r\n                                </div>       \r\n                            </div>\r\n                            {getFormErrorMessage('user')}\r\n\r\n\r\n                            <div className='mt-2'>\r\n                                <div className=\"flex justify-content-center flex-wrap\">\r\n                                    <div className=\"flex align-items-center justify-content-center  m-2\">\r\n                                        <Button label=\"Cancelar\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDialog} style={props.layoutColorMode === 'light' ? {'color':'#d13639','border-color':'#d13639'} : {'color':'#d13639','border-color':'#d13639'}}/>\r\n                                    </div>\r\n                                    <div className=\"flex align-items-center justify-content-center  m-2\">\r\n                                        <Button label=\"Guardar\"  icon=\"pi pi-check\" type=\"submit\" className=\"p-button-text\" onClick={showDialog} style={{'background': '#13af4e','color':'#ffffff'}}/>  \r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </Dialog>\r\n\r\n\r\n                    <Dialog className=\"mt-2\" visible={deletePliegoDialog} style={{ width: '450px' }} header=\"Confirm\" modal footer={deletePliegoDialogFooter} onHide={hideDeletePliegoDialog}>\r\n                        <div className=\"confirmation-content\">\r\n                            <i className=\"pi pi-exclamation-triangle p-mr-3\" style={{ fontSize: '2rem' }} />\r\n                            {pliego && <span>¿Estás segura de que quieres eliminar? <b>{pliego.titulo}</b> <b>{pliego.semestre}</b>?</span>}\r\n                        </div>\r\n                    </Dialog>\r\n    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import axios from 'axios';\r\n\r\n export const getPliegos = () =>{\r\n     return axios.get('https://magic-tech-backend.herokuapp.com/api/getPliegos');\r\n }\r\n\r\n export const getPliegoID =(id) =>{\r\n     return axios.get(`https://magic-tech-backend.herokuapp.com/api/getPliegoId/${id}`);\r\n }\r\n\r\n\r\n\r\n export const createPliego=(data)=>{\r\n    return axios.post('https://magic-tech-backend.herokuapp.com/api/createPliego', \r\n      {\r\n        id:        `${data.id}`,\r\n        titulo:    `${data.titulo}`,\r\n        codigo:    `${data.codigo}`,\r\n        semestre:  `${data.semestre}`,\r\n        link:      `${data.link}`,\r\n        user:      `${data.user}` \r\n      }\r\n      )\r\n      .then(function (response) {\r\n        console.log(response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n }\r\n\r\nexport const updatePliegoID =(data,id) =>{\r\n    return axios.put(`https://magic-tech-backend.herokuapp.com/api/updatePliego/${id}`, \r\n    {\r\n        titulo:    `${data.titulo}`,\r\n        codigo:    `${data.codigo}`,\r\n        semestre:  `${data.semestre}`,\r\n        link:      `${data.link}`,\r\n        user:      `${data.user}` \r\n    }\r\n    )\r\n    .then(function (response) {\r\n      console.log(response);\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error);\r\n    });\r\n}\r\n\r\nexport const deletePliegoID =(id) =>{\r\n    return axios.delete(`https://magic-tech-backend.herokuapp.com/api/deletePliegoId/${id}`);\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react';\r\n\r\n\r\nexport const Aviso = () => {\r\n\r\n    return (\r\n        <div className=\"grid\">\r\n             <h1>Estamos trabajando - En los Avisos</h1>\r\n        </div>\r\n    );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport classNames           from 'classnames';\r\nimport { Route}             from 'react-router-dom';\r\nimport { CSSTransition }    from 'react-transition-group';\r\n\r\nimport { AppTopbar }        from './AppTopbar';\r\nimport { AppFooter }        from './AppFooter';\r\nimport { AppMenu }          from './AppMenu';\r\nimport { AppConfig }        from './AppConfig';\r\n\r\nimport { Dashboard }             from './components/Dashboard';\r\nimport { Role }                  from './components/Role';\r\nimport { User }                  from './components/User';\r\nimport {Empresa}                 from './components/Empresa';\r\nimport { Convocatoria }          from './components/Convocatoria';\r\nimport { PliegoEspecificacion }  from './components/PliegoEspecificacion';\r\nimport { Aviso }                 from './components/Aviso';\r\nimport Cookies                   from 'universal-cookie';\r\n\r\n\r\nimport PrimeReact           from 'primereact/api';\r\n\r\nimport 'primereact/resources/primereact.min.css';\r\nimport 'primeicons/primeicons.css';\r\nimport 'primeflex/primeflex.css';\r\nimport 'prismjs/themes/prism-coy.css';\r\nimport './layout/flags/flags.css';\r\nimport './layout/layout.scss';\r\nimport './App.scss';\r\n\r\n\r\nconst App = () => {\r\n\r\n    const [layoutMode, setLayoutMode]                         = useState('static');\r\n    const [layoutColorMode, setLayoutColorMode]               = useState('light')\r\n    const [inputStyle, setInputStyle]                         = useState('outlined');\r\n    const [ripple, setRipple]                                 = useState(true);\r\n    const [staticMenuInactive, setStaticMenuInactive]         = useState(false);\r\n    const [overlayMenuActive, setOverlayMenuActive]           = useState(false);\r\n    const [mobileMenuActive, setMobileMenuActive]             = useState(false);\r\n    const [mobileTopbarMenuActive, setMobileTopbarMenuActive] = useState(false);\r\n\r\n    PrimeReact.ripple = true;\r\n\r\n    let menuClick = false;\r\n    let mobileTopbarMenuClick = false;\r\n\r\n    useEffect(() => {\r\n        if (mobileMenuActive) {\r\n            addClass(document.body, \"body-overflow-hidden\");\r\n        } else {\r\n            removeClass(document.body, \"body-overflow-hidden\");\r\n        }\r\n    }, [mobileMenuActive]);\r\n\r\n    const onInputStyleChange = (inputStyle) => {\r\n        setInputStyle(inputStyle);\r\n    }\r\n\r\n    const onRipple = (e) => {\r\n        PrimeReact.ripple = e.value;\r\n        setRipple(e.value)\r\n    }\r\n\r\n    const onLayoutModeChange = (mode) => {\r\n        setLayoutMode(mode)\r\n    }\r\n\r\n    const onColorModeChange = (mode) => {\r\n        setLayoutColorMode(mode)\r\n    }\r\n\r\n    const onWrapperClick = (event) => {\r\n        if (!menuClick) {\r\n            setOverlayMenuActive(false);\r\n            setMobileMenuActive(false);\r\n        }\r\n\r\n        if (!mobileTopbarMenuClick) {\r\n            setMobileTopbarMenuActive(false);\r\n        }\r\n\r\n        mobileTopbarMenuClick = false;\r\n        menuClick = false;\r\n    }\r\n\r\n    const onToggleMenuClick = (event) => {\r\n        menuClick = true;\r\n\r\n        if (isDesktop()) {\r\n            if (layoutMode === 'overlay') {\r\n                if(mobileMenuActive === true) {\r\n                    setOverlayMenuActive(true);\r\n                }\r\n\r\n                setOverlayMenuActive((prevState) => !prevState);\r\n                setMobileMenuActive(false);\r\n            }\r\n            else if (layoutMode === 'static') {\r\n                setStaticMenuInactive((prevState) => !prevState);\r\n            }\r\n        }\r\n        else {\r\n            setMobileMenuActive((prevState) => !prevState);\r\n        }\r\n\r\n        event.preventDefault();\r\n    }\r\n\r\n    const onSidebarClick = () => {\r\n        menuClick = true;\r\n    }\r\n\r\n    const onMobileTopbarMenuClick = (event) => {\r\n        mobileTopbarMenuClick = true;\r\n\r\n        setMobileTopbarMenuActive((prevState) => !prevState);\r\n        event.preventDefault();\r\n    }\r\n\r\n    const onMobileSubTopbarMenuClick = (event) => {\r\n        mobileTopbarMenuClick = true;\r\n\r\n        event.preventDefault();\r\n    }\r\n\r\n    const onMenuItemClick = (event) => {\r\n        if (!event.item.items) {\r\n            setOverlayMenuActive(false);\r\n            setMobileMenuActive(false);\r\n        }\r\n    }\r\n    const isDesktop = () => {\r\n        return window.innerWidth >= 992;\r\n    }\r\n\r\n    const menu0 = [\r\n        {\r\n            label: 'Home',\r\n            items: [{\r\n                label: 'Tablero', icon: 'pi pi-fw pi-home', to: '/'\r\n            }]\r\n        }\r\n    ];\r\n\r\n    const menu = [\r\n        {\r\n            label: 'Home',\r\n            items: [{\r\n                label: 'Tablero', icon: 'pi pi-fw pi-home', to: '/'\r\n            }]\r\n        },\r\n        {\r\n            label: 'Gestion de Roles', icon: 'pi pi-fw pi-sitemap',\r\n            items: [\r\n                {label: 'Roles', icon: 'pi pi-fw pi-users', to: '/Role'},\r\n               \r\n            ]\r\n        },\r\n        {\r\n            label: 'Gestion de Usuario', icon: 'pi pi-fw pi-sitemap',\r\n            items: [\r\n                {label: 'Usuarios', icon: 'pi pi-fw pi-user', to: '/User'},\r\n            ]\r\n        },\r\n        {\r\n            label: 'Gestion de Empresa', icon: 'pi pi-fw pi-sitemap',\r\n            items: [\r\n                {label: 'Empresas', icon: 'pi pi-fw pi-user', to: '/Empresa'},\r\n            ]\r\n        },\r\n        {\r\n            label: 'Gestion Publicacion', icon: 'pi pi-fw pi-sitemap',\r\n            items: [\r\n                {label: 'Convocatoria', icon: 'pi pi-fw pi-id-card', to: '/Convocatoria'},\r\n                {label: 'Pliego de Especificaciones', icon: 'pi pi-fw pi-check-square', to: '/PliegoEspecificacion'}\r\n            ]\r\n        },\r\n        {\r\n            label: 'Gestion Avisos', icon: 'pi pi-fw pi-sitemap',\r\n            items: [\r\n                {label: 'Avisos', icon: 'pi pi-fw pi-id-card', to: '/Aviso'}\r\n            ]\r\n        },\r\n    ];\r\n\r\n    const addClass = (element, className) => {\r\n        if (element.classList)\r\n            element.classList.add(className);\r\n        else\r\n            element.className += ' ' + className;\r\n    }\r\n\r\n    const removeClass = (element, className) => {\r\n        if (element.classList)\r\n            element.classList.remove(className);\r\n        else\r\n            element.className = element.className.replace(new RegExp('(^|\\\\b)' + className.split(' ').join('|') + '(\\\\b|$)', 'gi'), ' ');\r\n    }\r\n\r\n    const wrapperClass = classNames('layout-wrapper', {\r\n        'layout-overlay': layoutMode === 'overlay',\r\n        'layout-static': layoutMode === 'static',\r\n        'layout-static-sidebar-inactive': staticMenuInactive && layoutMode === 'static',\r\n        'layout-overlay-sidebar-active': overlayMenuActive && layoutMode === 'overlay',\r\n        'layout-mobile-sidebar-active': mobileMenuActive,\r\n        'p-input-filled': inputStyle === 'filled',\r\n        'p-ripple-disabled': ripple === false,\r\n        'layout-theme-light': layoutColorMode === 'light'\r\n    });\r\n\r\n    return (\r\n        <div className={wrapperClass} onClick={onWrapperClick}>\r\n            <AppTopbar onToggleMenuClick={onToggleMenuClick} layoutColorMode={layoutColorMode}\r\n                       mobileTopbarMenuActive={mobileTopbarMenuActive} onMobileTopbarMenuClick={onMobileTopbarMenuClick} onMobileSubTopbarMenuClick={onMobileSubTopbarMenuClick}/>\r\n\r\n            <div className=\"layout-sidebar\" onClick={onSidebarClick}>\r\n                <AppMenu model={menu} onMenuItemClick={onMenuItemClick} layoutColorMode={layoutColorMode} />\r\n            </div>\r\n\r\n            <div className=\"layout-main-container\">\r\n                <div className=\"layout-main\">\r\n                    <Route path=\"/\"                      exact component={Dashboard}/>\r\n                    <Route path=\"/Role\"                  exact={true} render={props => <Role                 layoutColorMode={layoutColorMode} {...props} />}/>\r\n                    <Route path=\"/User\"                  exact={true} render={props => <User                 layoutColorMode={layoutColorMode} {...props} />}/>\r\n                    <Route path=\"/Empresa\"               exact={true} render={props => <Empresa              layoutColorMode={layoutColorMode} {...props} />}/>\r\n                    <Route path=\"/Convocatoria\"          exact={true} render={props => <Convocatoria         layoutColorMode={layoutColorMode} {...props} />}/>\r\n                    <Route path=\"/PliegoEspecificacion\"  exact={true} render={props => <PliegoEspecificacion layoutColorMode={layoutColorMode} {...props} />}/>\r\n                    <Route path=\"/Aviso\"                 component={Aviso}/>\r\n                </div>\r\n\r\n                <AppFooter layoutColorMode={layoutColorMode}/>\r\n            </div>\r\n\r\n            <AppConfig rippleEffect={ripple} onRippleEffect={onRipple} inputStyle={inputStyle} onInputStyleChange={onInputStyleChange}\r\n                       layoutMode={layoutMode} onLayoutModeChange={onLayoutModeChange} layoutColorMode={layoutColorMode} onColorModeChange={onColorModeChange} />\r\n\r\n            <CSSTransition classNames=\"layout-mask\" timeout={{ enter: 200, exit: 200 }} in={mobileMenuActive} unmountOnExit>\r\n                <div className=\"layout-mask p-component-overlay\"></div>\r\n            </CSSTransition>\r\n\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default App;\r\n","import { useEffect } from 'react';\r\nimport { useLocation, withRouter } from 'react-router-dom';\r\n\r\nconst ScrollToTop = (props) => {\r\n\r\n    let location = useLocation();\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0)\r\n    }, [location]);\r\n\r\n    return props.children;\r\n}\r\n\r\nexport default withRouter(ScrollToTop);\r\n","import React,{useEffect,useState,useRef}   from 'react';\r\nimport axios                from 'axios';\r\nimport { Link }             from 'react-router-dom';\r\nimport { InputText }        from 'primereact/inputtext';\r\nimport { Password }         from 'primereact/password';\r\nimport { Button }           from 'primereact/button';\r\nimport { ProgressSpinner }  from 'primereact/progressspinner';\r\nimport { Toast }            from 'primereact/toast';\r\n\r\nimport { useFormik }        from \"formik\";\r\nimport { useHistory }       from 'react-router-dom';\r\nimport Cookies              from 'universal-cookie';\r\n\r\nexport const LoginApp = (props) =>{\r\n\r\n    const history            = useHistory();\r\n    const [isPush,setIsPush] = useState(true);\r\n    const toast              = useRef(null);\r\n    const cookies            = new Cookies();\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email:     \"\",\r\n            password:  \"\"\r\n        },\r\n        validate: (data) => {\r\n            let errors = {};\r\n\r\n            if (!data.email) {\r\n                errors.email = \"Se requiere el correo electronico\";\r\n            } else if (data.email.length > 255) {\r\n                errors.email = \"Como maximo 255 caracteres\";\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(data.email)) {\r\n                errors.email = 'Dirección de correo electrónico inválida. P.ej. ejemplo@email.com';\r\n            }\r\n\r\n            if (!data.password) {\r\n                errors.password = \"Se requiere la contraseña\";\r\n            } else if (data.password.length > 255) {\r\n                errors.password = \"Como maximo 255 caracteres\";\r\n            }\r\n\r\n            return errors;\r\n        },\r\n\r\n        onSubmit: (data) => {\r\n            setIsPush(false);\r\n            const timeout = setTimeout(() => {}, 10000);\r\n            axios.post('https://magic-tech-backend.herokuapp.com/api/login', \r\n            {\r\n                email:     `${data.email}`,\r\n                password:  `${data.password}`\r\n            }).then(function (response) {\r\n\r\n                cookies.set('id'        , response.data.id        , {path: \"/\"});\r\n                cookies.set('nombre'    , response.data.nombre    , {path: \"/\"});\r\n                cookies.set('apellido'  , response.data.apellido  , {path: \"/\"});\r\n                cookies.set('email'     , response.data.email     , {path: \"/\"});\r\n                cookies.set('rol'       , response.data.rol       , {path: \"/\"});\r\n                cookies.set('isLogin'   , true);\r\n\r\n                console.log('id:        '+cookies.get('id'));\r\n                console.log('nombre:    '+cookies.get('nombre'));\r\n                console.log('apellido:  '+cookies.get('apellido'));\r\n                console.log('email:     '+cookies.get('email'));\r\n                console.log('rol:       '+cookies.get('rol'));\r\n                console.log('isLogin:   '+cookies.get('isLogin'));\r\n\r\n                if(response.status === 200){\r\n                    clearTimeout(timeout);\r\n                    history.push('/');\r\n                }\r\n                formik.resetForm();\r\n                setIsPush(true);\r\n            })\r\n            .catch(function (error) {\r\n                toast.current.show({severity:'error', summary: 'Error Message', detail:'El correo electronico o la contraseña son incorrectas', life: 3000});\r\n                clearTimeout(timeout);\r\n                setIsPush(true);\r\n                formik.setValues({\r\n                    email:`${data.email}`,\r\n                    password:''\r\n                }); \r\n            });\r\n        },\r\n      });\r\n\r\n\r\n\r\n\r\n\r\n    const isFormFieldValid = (name) => !!(formik.touched[name] && formik.errors[name]);\r\n    const getFormErrorMessage = (name) => {\r\n        return isFormFieldValid(name) && <small className=\"ml-5 p-error\" style={{'color': '#ff0000'}}>{formik.errors[name]}</small>;\r\n    };\r\n\r\n    return(\r\n        <div className=\"grid justify-content-evenly mt-6\">\r\n            <Toast ref={toast} />\r\n            <div className=\"lg:col-3\"></div>\r\n            <div className=\" lg:col-3 md:col-3\">\r\n                <div className=\"card p-fluid\" style={cookies.get('theme') === 'light' ?{ 'border': 'black 2px outset' }:{ 'border': 'white 2px outset' }}>\r\n                    <form onSubmit={formik.handleSubmit}>\r\n                        <div className='grid flex justify-content-center'>\r\n                            <div className=\"flex align-items-center justify-content-center  m-2\">\r\n                                <h2 className=\"p-text-center p-p-1\">Iniciar sesión</h2>        \r\n                            </div>\r\n                        </div>\r\n                        <div className='grid flex justify-content-center'>\r\n                            <div className=\"flex align-items-center justify-content-center  m-2\">\r\n                                <img src={cookies.get('theme') === 'light' ? 'assets/layout/images/avatar.png' : 'assets/layout/images/avatar-dark.png'} className=\"p-avatar-xl\"  shape=\"circle\"  size=\"xlarge\" style={{'height': '8em','width':'8em',}}/>               \r\n                            </div>\r\n                        </div>\r\n                        <div className='grid flex justify-content-center'>\r\n                            <div className=\"flex align-items-center justify-content-center\">\r\n                                <div className=\"p-field mt-1 lg:col-11\">\r\n                                    <div className=\"p-inputgroup\">\r\n                                            <span className=\"p-inputgroup-addon\">\r\n                                                <img   src={cookies.get('theme') === 'light' ? 'assets/layout/images/gmail.png' : 'assets/layout/images/gmail-dark.png'} style={{'height': '1.2em','width':'1.2em',}}/>   \r\n                                            </span>\r\n                                            <InputText id=\"email\" name='email' placeholder=\"Correo electronico\" value={formik.values.email} onChange={formik.handleChange} autoFocus/>\r\n                                    </div>       \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {getFormErrorMessage('email')}\r\n                        \r\n                        <div className='grid flex justify-content-center'>\r\n                            <div className=\"flex align-items-center justify-content-center\">\r\n                                <div className=\"p-field mt-1 lg:col-10\">\r\n                                    <div className=\"p-inputgroup\">\r\n                                            <span className=\"p-inputgroup-addon\">\r\n                                                <img   src={cookies.get('theme') === 'light' ? 'assets/layout/images/password.png' : 'assets/layout/images/password-dark.png'} style={{'height': '1.2em','width':'1.2em',}}/>      \r\n                                            </span>\r\n                                            <Password id=\"password\" name='password' placeholder=\"Contraseña\" value={formik.values.password} onChange={formik.handleChange} toggleMask  feedback={false}/>\r\n                                    </div>       \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {getFormErrorMessage('password')}\r\n                        {\r\n                            (isPush)?\r\n                            <div className='grid flex justify-content-center'>\r\n                                <div className=\"flex align-items-center justify-content-center  m-2\">\r\n                                    <Button type=\"submit\" id=\"buttonSubmit\" icon=\"pi pi-arrow-right\"  className=\"p-button-raised mt-4 p-button-lg\"  style={{'fontSize': '1.5em', 'background-color':'#d13639', 'color':'#ffffff', 'border':'1px solid hsl(0deg 0% 100% / 12%)'}}/>\r\n                                </div>\r\n                            </div>\r\n                            :\r\n                            <div className='grid flex justify-content-center'>\r\n                                <div className=\"flex align-items-center justify-content-center  m-4\">\r\n                                    <ProgressSpinner style={{width: '50px', height: '50px', stroke: '#d62d20'}} strokeWidth=\"8\" fill=\"var(--surface-ground)\" animationDuration=\"10s\"/>\r\n                                </div>\r\n                            </div>  \r\n                        }\r\n                        <div className='grid flex justify-content-center'>\r\n                            <div className=\"flex align-items-center justify-content-center  mt-3\">\r\n                                <Link to=\"/Register\" >\r\n                                    <Button label=\"Crear una cuenta\" className=\"p-button-link\" style={cookies.get('theme') === 'light' ? {'color':'#000000', 'font-weight': 'bold'} : {'color':'#ffffff', 'font-weight': 'bold'}}/>\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                        <div className='grid flex justify-content-center'>\r\n                            <div className=\"flex align-items-center justify-content-center\">\r\n                                <Link to=\"/\" >\r\n                                    <Button label=\"Pagina principal\" className=\"p-button-link\" style={cookies.get('theme') === 'light' ? {'color':'#000000', 'font-weight': 'bold'} : {'color':'#ffffff', 'font-weight': 'bold'}}/>\r\n                                </Link>\r\n                            </div>\r\n                        </div>        \r\n                    </form>\r\n                </div>\r\n            </div>\r\n            <div className=\"lg:col-3\"></div>\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\n","import React,{useEffect,useState,useRef}   from 'react';\r\nimport axios                from 'axios';\r\nimport { Link }             from 'react-router-dom';\r\nimport { InputText }        from 'primereact/inputtext';\r\nimport { Password }         from 'primereact/password';\r\nimport { Button }           from 'primereact/button';\r\nimport { Toast }            from 'primereact/toast';\r\nimport { ProgressSpinner }  from 'primereact/progressspinner';\r\nimport { useHistory }       from 'react-router-dom';\r\n\r\nimport { useFormik }        from \"formik\";\r\nimport uniqid               from 'uniqid';\r\nimport Cookies              from 'universal-cookie';\r\n\r\nimport { createUser,getUsers} from '../service/apiUser';\r\n\r\nexport const Register = (props) =>{\r\n\r\n    const toast                           = useRef(null);\r\n    const [users, setUsers]               = useState(null);\r\n    const history                         = useHistory();\r\n    const [emailUpdate, setEmailUpdate]   = useState(\"\");\r\n    const [isPush,setIsPush]              = useState(true);\r\n    const cookies                         = new Cookies();\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            nombre:    \"\",\r\n            apellido:  \"\",\r\n            email:     \"\",\r\n            password:  \"\",\r\n            confirmPassword : \"\"\r\n        },\r\n        validate: (data) => {\r\n            let errors = {};\r\n\r\n            if (!data.nombre) {\r\n                errors.nombre = \"Se requiere el nombre\";\r\n            } else if (data.nombre.length < 2) {\r\n                errors.nombre = \"Como minimo 2 caracteres\";\r\n            } else if (data.nombre.length > 30) {\r\n                errors.nombre = \"Como maximo 30 caracteres\";\r\n            } else if (!/^^[a-zA-Z\\s]+$/i.test(data.nombre)) {\r\n                errors.nombre = \"No se permiten numero o caracteres especiales\";\r\n            }\r\n\r\n            if (!data.apellido) {\r\n                errors.apellido = \"Se requiere el apellido\";\r\n            } else if (data.apellido.length < 2) {\r\n                errors.apellido = \"Como minimo 2 caracteres\";\r\n            } else if (data.apellido.length > 30) {\r\n                errors.apellido = \"Como maximo 30 caracteres\";\r\n            }else if (!/^^[a-zA-Z\\s]+$/i.test(data.apellido)) {\r\n                errors.apellido = \"No se permiten numero o caracteres especiales\";\r\n            }\r\n\r\n            if (!data.email) {\r\n                errors.email = \"Se requiere el correo electronico\";\r\n            } else if (data.email.length > 255) {\r\n                errors.email = \"Como maximo 255 caracteres\";\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(data.email)) {\r\n                errors.email = 'Dirección de correo electrónico inválida. P.ej. ejemplo@email.com';\r\n            }else if(!esRepetido(data.email)){\r\n                errors.email = \"Ya existe el correo electronico\";\r\n            }\r\n\r\n            if (!data.password) {\r\n                errors.password = \"Se requiere la contraseña\";\r\n            } else if (data.password.length < 6) {\r\n                errors.password = \"Como minimo 6 caracteres\";\r\n            } else if (data.password.length > 255) {\r\n                errors.password = \"Como maximo 255 caracteres\";\r\n            }\r\n\r\n            if (!data.confirmPassword) {\r\n                errors.confirmPassword = \"Se requiere la confirmacion de la contraseña\";\r\n            }else if (data.confirmPassword != data.password) {\r\n                errors.confirmPassword = \"Las contraseñas deben coincidir\";\r\n            } \r\n\r\n            return errors;\r\n        },\r\n\r\n        onSubmit: (data) => {\r\n            let idUser = uniqid(\"user-\");\r\n            let rolUser= \"rol-kvjva7f6\";\r\n            setIsPush(false); \r\n            const timeout = setTimeout(() => {}, 10000);\r\n\r\n            axios.post('https://magic-tech-backend.herokuapp.com/api/createUser', \r\n            {\r\n                id:         `${idUser}`,\r\n                nombre:     `${data.nombre}`,\r\n                apellido:   `${data.apellido}`,\r\n                email:      `${data.email}`,\r\n                password:   `${data.password}`,\r\n                rol:        `${rolUser}` \r\n            }\r\n            )\r\n            .then(function (response) {\r\n                if(response.status === 200){\r\n                    clearTimeout(timeout);\r\n                    toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Registrado Exitosamente', life: 3000 });\r\n                    \r\n                }\r\n                formik.resetForm();\r\n                setIsPush(true);\r\n            })\r\n            .catch(function (error) {\r\n                clearTimeout(timeout);\r\n                setIsPush(true);\r\n                formik.resetForm();\r\n            });\r\n\r\n        },\r\n      });\r\n\r\n\r\n    const isFormFieldValid = (name) => !!(formik.touched[name] && formik.errors[name]);\r\n    const getFormErrorMessage = (name) => {\r\n        return isFormFieldValid(name) && <small className=\"ml-2 p-error\" style={{'color': '#ff0000'}}>{formik.errors[name]}</small>;\r\n    };\r\n\r\n\r\n    const esRepetido =(value)=>{\r\n        var _users = [...users];\r\n        let res = _users.find(i => (i.email).toLowerCase() === (value).toLowerCase() );\r\n         if(res === undefined){\r\n             return true;\r\n         }else{\r\n             return false;\r\n         }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        fetchUsers();\r\n    },[])\r\n\r\n    const fetchUsers = () =>{\r\n        getUsers().then(json =>{\r\n            if(json.error){\r\n                console.log(\"Error\");\r\n            }else{\r\n                console.log(\"---------Users insertados-----------\");\r\n                setUsers(json.data);\r\n            }\r\n        })\r\n    }\r\n\r\n    return(\r\n        <div className=\"grid justify-content-evenly mt-6\">\r\n            <Toast ref={toast} />\r\n            <div className=\"lg:col-3\"></div>\r\n            <div className=\" lg:col-3 md:col-3\">\r\n                <div className=\"card p-fluid\" style={cookies.get('theme') === 'light' ?{ 'border': 'black 2px outset' }:{ 'border': 'white 2px outset' }}>\r\n                    <form onSubmit={formik.handleSubmit}>\r\n                        <div className='grid flex justify-content-center'>\r\n                            <div className=\"flex align-items-center justify-content-center  \">\r\n                                <h2 className=\"p-text-center p-p-1\">Registrarse</h2>        \r\n                            </div>\r\n                        </div>\r\n                        <div className='grid flex justify-content-center'>\r\n                            <div className=\"flex align-items-center justify-content-center  \">\r\n                                <div className=\"p-field mt-2 lg:col-12\">\r\n                                    <div className=\"p-inputgroup\">\r\n                                            <span className=\"p-inputgroup-addon\">\r\n                                                <i className=\"pi pi-user\"></i>\r\n                                            </span>\r\n                                            <InputText id=\"nombre\" name='nombre' placeholder=\"Nombre\" value={formik.values.nombre} onChange={formik.handleChange} autoFocus/>\r\n                                    </div>       \r\n                                </div>\r\n                            </div>   \r\n                        </div>\r\n                        {getFormErrorMessage('nombre')}\r\n                        \r\n                        <div className='grid flex justify-content-center'>\r\n                            <div className=\"flex align-items-center justify-content-center  \">\r\n                                <div className=\"p-field mt-1 lg:col-12\">\r\n                                    <div className=\"p-inputgroup\">\r\n                                            <span className=\"p-inputgroup-addon\">\r\n                                                <i className=\"pi pi-user\"></i>\r\n                                            </span>\r\n                                            <InputText id=\"apellido\" name='apellido' placeholder=\"Apellido\" value={formik.values.apellido} onChange={formik.handleChange}/>\r\n                                    </div>       \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {getFormErrorMessage('apellido')}\r\n                        \r\n                        <div className='grid flex justify-content-center'>\r\n                            <div className=\"flex align-items-center justify-content-center  \">\r\n                                <div className=\"p-field mt-1 lg:col-12\">\r\n                                    <div className=\"p-inputgroup\">\r\n                                            <span className=\"p-inputgroup-addon\">\r\n                                                <img   src={cookies.get('theme') === 'light' ? 'assets/layout/images/gmail.png' : 'assets/layout/images/gmail-dark.png'} style={{'height': '1.2em','width':'1.2em',}}/>   \r\n                                            </span>\r\n                                            <InputText id=\"email\" name='email' placeholder=\"Correo electronico\" value={formik.values.email} onChange={formik.handleChange}/>\r\n                                    </div>       \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {getFormErrorMessage('email')}\r\n\r\n                        <div className='grid flex justify-content-center'>\r\n                            <div className=\"flex align-items-center justify-content-center  \">\r\n                                <div className=\"p-field mt-1 lg:col-11\">\r\n                                    <div className=\"p-inputgroup\">\r\n                                            <span className=\"p-inputgroup-addon\">\r\n                                                <img   src={cookies.get('theme') === 'light' ? 'assets/layout/images/password.png' : 'assets/layout/images/password-dark.png'} style={{'height': '1.2em','width':'1.2em',}}/>   \r\n                                            </span>\r\n                                            <Password id=\"password\" name='password' placeholder=\"Contraseña\" value={formik.values.password} onChange={formik.handleChange} toggleMask  promptLabel=\"Por favor ingrese una contraseña\" weakLabel=\"Débil\" mediumLabel=\"Medio\" strongLabel=\"Fuerte\"/>\r\n                                    </div>       \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {getFormErrorMessage('password')}\r\n\r\n                        <div className='grid flex justify-content-center'>\r\n                            <div className=\"flex align-items-center justify-content-center  \">\r\n                                <div className=\"p-field mt-1 lg:col-11\">\r\n                                    <div className=\"p-inputgroup\">\r\n                                            <span className=\"p-inputgroup-addon\">\r\n                                                <img   src={cookies.get('theme') === 'light' ? 'assets/layout/images/password.png' : 'assets/layout/images/password-dark.png'} style={{'height': '1.2em','width':'1.2em',}}/>   \r\n                                            </span>\r\n                                            <Password id=\"confirmPassword\" name='confirmPassword' placeholder=\"Repite la contraseña\" value={formik.values.confirmPassword} onChange={formik.handleChange} toggleMask  promptLabel=\"Por favor ingrese una contraseña\" weakLabel=\"Débil\" mediumLabel=\"Medio\" strongLabel=\"Fuerte\"/>\r\n                                    </div>       \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {getFormErrorMessage('confirmPassword')}\r\n\r\n                        {\r\n                            (isPush)?\r\n                            <div className='grid flex justify-content-center'>\r\n                                <div className=\"flex align-items-center justify-content-center  \">\r\n                                    <div className=\"p-field mt-3 lg:col-11\">\r\n                                        <Button label=\"Registrar\"  icon=\"pi pi-check\" type=\"submit\" className=\"p-button-text\"  style={{'background': '#13af4e','color':'#ffffff'}}/>  \r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            :\r\n                            <div className='grid flex justify-content-center'>\r\n                                <div className=\"flex align-items-center justify-content-center  m-4\">\r\n                                    <ProgressSpinner style={{width: '50px', height: '50px', stroke: '#d62d20'}} strokeWidth=\"8\" fill=\"var(--surface-ground)\" animationDuration=\"10s\"/>\r\n                                </div>\r\n                            </div>  \r\n                        }\r\n\r\n                        <div className='grid flex justify-content-center mt-3'>\r\n                            <div className=\"flex align-items-center justify-content-center\">\r\n                                <Link to=\"/Login\" >\r\n                                    <Button label=\"Iniciar sesion\" className=\"p-button-link\" style={cookies.get('theme') === 'light' ? {'color':'#000000', 'font-weight': 'bold'} : {'color':'#ffffff', 'font-weight': 'bold'}}/>\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                        <div className='grid flex justify-content-center'>\r\n                            <div className=\"flex align-items-center justify-content-center\">\r\n                                <Link to=\"/\" >\r\n                                    <Button label=\"Pagina principal\" className=\"p-button-link\" style={cookies.get('theme') === 'light' ? {'color':'#000000', 'font-weight': 'bold'} : {'color':'#ffffff', 'font-weight': 'bold'}}/>\r\n                                </Link>\r\n                            </div>\r\n                        </div>        \r\n                    </form>\r\n                </div>\r\n            </div>\r\n            <div className=\"lg:col-3\"></div>\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\n","import 'react-app-polyfill/ie11';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n//import * as serviceWorker from './serviceWorker';\r\nimport { HashRouter, Switch ,Route} from 'react-router-dom'\r\nimport ScrollToTop                  from './ScrollToTop';\r\nimport { LoginApp }                 from './components/LoginApp';\r\nimport { Register }                 from './components/Register';\r\nimport Cookies                   from 'universal-cookie';\r\n\r\n\r\n{const cookies  = new Cookies()\r\n    cookies.set('isLogin', false);\r\n}\r\n\r\n\r\nReactDOM.render(\r\n\r\n    <HashRouter>\r\n        <Switch>\r\n            <Route path=\"/Login\"    exact={true} render={props => <LoginApp layoutColorMode={'light'} {...props} />} />\r\n            <Route path=\"/Register\" exact={true} render={props => <Register layoutColorMode={'light'} {...props} />} />\r\n            <ScrollToTop>\r\n                <App></App>\r\n            </ScrollToTop>\r\n        </Switch>\r\n    </HashRouter>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\n//serviceWorker.unregister();"],"sourceRoot":""}